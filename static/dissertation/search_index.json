[["index.html", "What is the relative timing between myosin‚Äôs powerstroke and Pi-release?", " What is the relative timing between myosin‚Äôs powerstroke and Pi-release? Dissertation of Brent Scott Welcome - This is the online version of my dissertation and allows me to use way cooler HTML based tools to showcase our lab‚Äôs work‚Ä¶ Like this GIF! You can also view the lame PDF version here if you really want‚Ä¶ "],["prerequisites.html", "Prerequisites Muscle Structure Myosin/Cross-bridge cycle Unconventional myosins The Laser trap Laser trap data is a time series", " Prerequisites This is additional background information that will be helpful for getting up to speed if you don‚Äôt have a background in muscle physiology or biophysics. This is a crash course if you are on the need-to-know basis. This can also serve as a sort-of replacement for Chapter 2 for those not wanting to get too deep into myosin structure/function, but will cover enough to help get the main points of the dissertation to come across. Muscle Structure Skeletal muscle has a hierarchical organization that is similar to a bag of pull-and-peel twizzlers. The whole unopened bag of twizzlers is analogous to the whole muscle - all this sweet stuff wrapped in neat and tidy packaging which is like an entire muscle being packaged inside its most outer layer of connective tissue (epimysium). If you could open up a muscle like a bag of twizzlers we would see bundles of muscle fibers called fascicles which would be like each individual pull-and-peel tweezler unit, many tiny twizzler strands bound together. When eating pull-and-pull twizzlers traditionally you should ‚Äúpull‚Äù and ‚Äúpeel‚Äù off one of the tiny twizzler strands. If you could ‚Äúpull‚Äù and ‚Äúpeel‚Äù a muscle fasicle apart you would be left with one single muscle fiber. A muscle fiber is the cellular level of muscle since a fiber is a cell. These cells just happen to be long and cylindrical so they are often called fibers even though the terms ‚Äúfibers‚Äù and ‚Äúcell‚Äù can be used interchangeably. The fiber contains many other traditional cellular elements (nuclei, mitochondria, a kind of reticulum, etc.). Although, here is where my twizzler analogy starts to fall apart a smidge‚Ä¶If we looked ‚Äúdown-the-barrel‚Äù at the muscle fiber we would see that the fiber is comprised of many myofibrils, whereas our twizzler is, er, just a twizzler. Nonetheless, each of these myofibrils is made of repeated units in series called sarcomeres. An individual sarcomere contains the myofilaments or thick- and thin-filaments. The thin-filaments are made of actin (a protein) and the Ca2+-sensitive regulatory proteins that help turn the muscle on and off, and the thick-filaments are made of myosin (a protein). Myosin is a molecular motor and is responsible for using ATP to generate force and motion. When muscle is activated by the central nervous system, ultimately, the myosins will bind to actin, produce a displacement of the actin which shortens the sarcomere causing whole muscle ‚Äúcontraction‚Äù. This is the basis of the sliding-filament theory of muscle contraction. Myosin/Cross-bridge cycle Myosin is a molecular motor that uses ATP to generate force and motion. There are many types of myosin. The myosin in muscle is a class II myosin (there are different types of myosin II isoforms in skeletal muscle as well, mainly slow type 1 and fast type 2, or MHC-1 and MHC-2; MHC = myosin heavy chain). In fact there are numerous classes of myosins each containing several isoforms each. However, the motor-domain, or the part of the myosin head that binds actin and ATP is structurally similar across all myosins. They all breakdown ATP and generate force in a process called the cross-bridge cycle. The cross-bridge cycle is a ‚Äúmechanochemical‚Äù scheme which means that there is a dynamic interplay between mechanics and biochemistry that control myosins structure and function. The changes that occur effectively modulate its affinity for actin vs ATP/hydrolysis products. Myosin produces force by rotation of its lever arm when attached to actin. Furthermore, myosin can be unattached or attached to actin (bottom vs top row in a diagram of the cross-bridge cycle) and its lever arm can be set in a pre- or post-powerstroke position. Unconventional myosins Myosin molecules in muscle polymerize to form bi-polar thick filaments, however many myosins exist as single double headed molecules and are involved in intracellular cargo transport. Myosin V has a tail that is specific for binding cargo and walks around cells on actin filaments. While traditionally I am interested in myosin because of my background in exercise physiology, human performance, and muscle; I have become increasingly more interested in the unconventional myosins (unconventional myosins are typically the ones not expressed or involved with muscular contraction). For one, I find them fascinating as they work as tiny molecular machines transporting things around the cell, but also practically they are easier to experiment with because some of them like myosin V have a high duty ratio and rate limiting (slower) rate of ADP release which makes which makes it easier to observe single molecule interactions in a laser trap assay at high ATP concentrations. The Laser trap To study and understand how myosin works we can use a single molecule laser trap. This allows us to collect on data on the interaction between one single molecule of myosin and one actin filament. Like a tractor beam from Star Trek or other Sci-Fi films, light can be used to trap small particles. By shooting a laser beam through a microscope slide small glass beads can be made sticky to actin filaments and held in an optical trap. Briefly, the incoming laser imposes two forces onto a particle. 1) The laser acts as a ‚Äúphoton-firehouse‚Äù which exhibits a scattering force and pushes things away from the beam. However, if a particle is close enough to the center of the trap some light is refracted through the particle and causes 2) a gradient force that is in opposition to the scattering force. The forces cancel and the particle is stabilized and effectively ‚Äútrapped‚Äù in light. In our lab, we time share the location of one laser beam to create two optical traps allowing us to trap two small beads simultaneously. We can then string up actin filaments to create a ‚Äúbead-actin-bead‚Äù (or dumbbell) setup. We can move the microscope stage to ‚Äúdrive‚Äù the setup around as we look for larger ‚Äúpedestal‚Äù beads on the microscope slide surface that are sparsely coated with myosin. Lowering the towards the surface will bring the actin towards the myosin and the proteins will stochastically interact. Laser trap data is a time series The position of the trapped bead can be monitored by a detector. Since myosin is stiffer than the laser trap when myosin binds it causes a reduction in the variance of the baseline signal and when myosin undergoes a powerstroke it displaces the beads laterally from the center of the trap. Laser trap data is a time series data set where we are collecting the bead position over time. Analysis of data by eye is not well accepted in the field (further detailed in the lit review) so we must rely on automated event detection methods (several methods described in detail in the lit review). Our setup has a sampling frequency of 5 kHz. I feel like I am always getting headaches trying to convert from ‚Äúdata point‚Äù time to milliseconds in my head‚Ä¶so we collect 5 data points every 1 millisecond for those of you keeping up at home üòâ. "],["introduction.html", "1 Introduction 1.1 Historical Significance of the Cross-Bridge to Muscle Physiology and Kinesiology 1.2 The Modern Cross-Bridge Cycle 1.3 Powerstroke or Pi-Release? a biophysicists ‚Äúchicken-or-egg‚Äù causality dilemma 1.4 Q: How can the dilemma be resolved? A: By rigorously testing the current ‚Äúunifying‚Äù theory set forth by structural biologists 1.5 Problem: the powerstroke is FAST. How do I see it? Solutions: Build a better mouse trap or get a slower mouse. 1.6 Two steps forward, one step back 1.7 Specific Aims", " 1 Introduction 1.1 Historical Significance of the Cross-Bridge to Muscle Physiology and Kinesiology A fundamental aspect of Kinesiology is centered upon understanding the mechanisms of human motion. Ultimately, every human movement is a direct result of a molecular motor (like myosin) transducing the chemical energy of adenosine triphosphate (ATP) into a mechanical force. Understanding how human skeletal muscle can accomplish the coupling between biochemistry and mechanics has transcended any single field of science over the past century and has required a multi-disciplinary approach to reach the current understanding we currently have on the topic. In the early 1900s, pioneers in the field of muscle physiology provided the foundational work in understanding how muscles work. During this time the field of biochemistry was unclear of what the exact mechanisms were that provided a muscle cell with the necessary energy for muscle to contract, which was often contributed to oxygen (or at least some form of an oxidative pathway) (Bassett 2002) or to ‚Äúlactic acid‚Äù (Herzog et al. 2015). In 1920, A.V. Hill observed the liberation of heat during isometric tension of an isolated muscle (Hill and Hartree 1920) showing that muscular force can be produced without oxygen. His findings ultimately led him to a Nobel Prize in 1922 (‚ÄúThe Nobel Prize in Physiology or Medicine 1922,‚Äù n.d.). This finding was detailed further when Wallace Fenn demonstrated that when allowed to shorten, a contracting muscle liberates more heat than when held isometrically (now well known as the Fenn effect) (Fenn 1924). Subsequently, Bailey (1937) characterized the abundance of myosin in skeletal muscle and Engelhardt and Ljubimowa (1939) demonstrated that myosin was indeed responsible for the muscle‚Äôs enzymatic activity and consequently the heat production that was observed by Hill and Fenn during their isolated muscle studies years prior. However, despite these early advances there was still no explanation for how a muscle (let alone a myosin molecule) could use ATP to produce force. The next major breakthrough propelling the field closer to an answer for the mechanism of molecular force production came in 1954 when a pair of Nature articles from Huxley &amp; Hanson and Huxley &amp; Niedergerke independently provided evidence for muscle contraction via the ‚Äúsliding filament theory‚Äù (H. Huxley and Hanson 1954; A. F. Huxley and Niedergerke 1954). Here, the two research groups describe the ability of myosin in the form of thick-filaments to associate with actin filaments causing sarcomere shortening (i.e.¬†contraction) based on structural observations of contracting myofibrils and single muscle fibers. Even so, the sliding filament theory in of itself is not a mechanism of contraction. In 1957, Andrew Huxley provided the first mechanistic hypothesis about how the relative sliding of filaments could occur based upon modeling myosin as a biased Brownian ratchet. This proposal provided the initial groundwork for the modern-day ‚Äúcross-bridge theory‚Äù of muscle contraction (HUXLEY 1957). After the emergence of these structural perspectives of the actomyosin cross-bridge system biochemists began attempting to align their observations from solution kinetic studies to further explain the structure function relationship of the cross-bridge providing early kinetic schemes of the rates of the various mechanochemical steps/states of the cross-bridge model (Lymn and Taylor 1971). Since the completion of these foundational studies research into the field of muscle physiology has exploded as technology has advanced temporal and spatial limitations of instrumentation providing unprecedented details into muscle myosin structure and function which has provided a relatively deep understanding (versus the humble origins) of how the cross-bridges cycle from both a biochemical and structural perspective. 1.2 The Modern Cross-Bridge Cycle The modern cross-bridge cycle is a mechanochemical system which describes the coordination between myosin‚Äôs enzymatic biochemistry and structural conformations. Different structural conformations are related to certain biochemical states and influence myosin‚Äôs affinity for the hydrolysis products and actin. As such, the cross-bridge cycle can be modeled as a summary of the current biochemical and structural conformations with a basic model being: \\[ ^{1)} AM_{post} ~ \\implies ~ ^{2)} M_{pre} \\cdot T~ \\implies ~ ^{3)} M_{pre}\\cdot D \\cdot P ~ \\implies ~ ^{4)} AM_{pre} \\cdot D \\cdot P ~ \\implies ~ ^{5)} AM_{post} \\cdot D \\] where A is actin, Mpost is myosin in a post-powerstroke conformation, Mpre is myosin in a pre-powerstroke conformation, T is ATP, D is ADP, and P is Pi. 1) Starting in rigor, myosin occupies a post-powerstroke position strongly bound to actin (Geeves and Holmes 1999; Sweeney and Houdusse 2010). 2) The binding of ATP to myosin causes a structural rearrangement in the active site which ultimately opens the upper and lower 50-kDa (Conibear et al. 2003; Kenneth C. Holmes et al. 2003) causing both the detachment from actin and resetting of the lever arm into a pre-powerstroke position (Nesmelov et al. 2011; Trivedi et al. 2015) . 3) ATP hydrolysis occurs constraining the myosin in the pre-powerstroke position. 4) When myosin attaches to actin there is a short lived strongly bound/load bearing state where myosin is pre-powerstroke with both hydrolysis products in the actin site (Llinas et al. 2015; Woody et al. 2019) . 5) The final step in the cycle is where myosin undergoes a powerstroke (i.e.¬†lever arm rotation) and Pi-release which leaves the molecule in a strongly bound post-powerstroke state with solely ADP occupying the active site. Once ADP is released, myosin is left in rigor and the cycle restarts. 1.3 Powerstroke or Pi-Release? a biophysicists ‚Äúchicken-or-egg‚Äù causality dilemma While there are many details in the modern day cross-bridge cycle that are seemingly clear and well-established, there is a serious point of contention that remains in the literature to this day. The problem resides in the transition between the 3rd and 4th step in the model detailed in section 1.2. In one step, two key events are taking place - one mechanical and one biochemical. The mechanical powerstroke and biochemical release of Pi are collapsed into this single step without an explicit declaration of the timing or sequence relative to one other. Both these events are triggered by actin binding, but does the powerstroke precede Pi-release or does Pi-release ‚Äúgate‚Äù the powerstroke?. This is the dilemma. Interestingly, the Powerstroke First and Pi-Release First models are both well supported in the literature. The divergence from a common mechanochemical scheme has divided the field for several decades and has ultimately limited the progress of fully understanding how myosin is able to transduce chemical energy into mechanical work as the powerstroke and Pi-release steps are key events in the transduction process. Ultimately, not understanding the precise order of the biochemical and mechanical events during the cross-bridge cycle prevents progress into the mechanisms underlying the molecular nature of energy conservation (1st law of thermodynamics) and limits our ability to develop pharmacological interventions to restore function to diseased, mutated, or compromised motors (HCM, DCM, fatigue, etc.). Moreover, in the emerging field of nanotechnology where researchers have been increasingly more interested in controlling biological motors understanding the precise ordering of steps in the transduction is paramount to the success of the field. For example, if you wanted to control myosin by preventing the powerstroke from occurring (and assuming a Pi-gating model of the cross-bridge) force production could be halted by trapping Pi in the active site. However, this approach would not work in a Powerstroke First model. A typical model of the cross-bridge cycle. The powerstroke and release of Pi are often represented as occurring within the same step. 1.4 Q: How can the dilemma be resolved? A: By rigorously testing the current ‚Äúunifying‚Äù theory set forth by structural biologists In 2015, Llinas et al. (2015) performed x-ray crystallography on phosphate soaked myosin crystals and reported a new and never-before-seen myosin conformation that was posited to provide a unifying theory between the Powerstroke First and Pi-Release First models. This conformational state was aptly named the Pi-Release State (PiR State). Accompanying the PiR state, they provided a hypothesis regarding the structural sequence of Pi being released from myosin: 1) Myosin is in a Pre-powerstroke state (PPS) with Pi in active site, 2) the release of Pi from the active site into the so-called ‚Äúphosphate release tunnel‚Äù causes slight re-arrangement into the PiR2 state (this is Powerstroke gating in their model), and 3) the final crystal structures detail Pi in the PiR1 state as the Pi is released into solution from the Pi-release tunnel. The subtly is that there are two different Pi-releases. A phosphate can be released from the active site into the Pi-release tunnel as well as be released from the Pi tunnel in myosin out into solution. Moreover, they state that the Pi-release from the active site into the Pi-release tunnel (PPS to PiR2 transition) is what gates the powerstroke and not the release from the tunnel into solution (see literature review for more details). Now, this is an elegant hypothesis that would explain away some of the most convincing functional data that supports the Powerstroke First model. Mainly, in coupled assays where the force of a muscle fibers is measured simultaneously with the rate of Pi-release (with a phosphate binding protein), or in the case with solution kinetic studies and FRET, the rate of the powerstroke is always measured to be far greater than any measured Pi-release rate. However, with the PiR state the structural biologists argue that a phosphate binding protein would be binding Pi in solution with the equivalent myosin structural state being PiR1 or later. Aka, the structural biologists are saying that an assay where a phosphate binding protein is used to measure the rate of Pi-release is actually measuring the wrong rate which makes the previous reports where the powerstroke was found to occur at faster rates an unfair comparison and that indeed the PiR2 to PiR1 is rapid and able to gate the powerstroke. However, this current ‚Äúunifying‚Äù theory set forth in recent years remains to be rigorously tested and provides a testable hypothesis - If the transition of Pi from the active site into the PiR2 position gates the powerstroke, then can the powerstroke be prevented or slowed by occupying the active site with Pi? 1.5 Problem: the powerstroke is FAST. How do I see it? Solutions: Build a better mouse trap or get a slower mouse. While the question is simple, ‚Äúcan the powerstroke be prevented or slowed by occupying the active site with Pi?‚Äù, devising a way to test this is not so simple for one main reason - the powerstroke occurs quite rapidly upon binding to actin (upwards of 5000/s) (Marco Capitanio et al. 2012; Woody et al. 2019). Being able to assess whether or not experimental conditions can affect the powerstroke is quite challenging. Ideally, these experiments will be conducted in a 3-bead laser trap assay which allows for the observation of single actomyosin binding events and through further analysis the displacement of every individual event can be measured and average displacements can be calculated and compared amongst the conditions. Furthermore, after the identification of the individual events, the trapping records can be ensemble averaged in order to measure the averaged rate of the transition from unbound to bound states. Experimentally, there are two ways that can be used to occupy myosin‚Äôs active with Pi. 1) By increasing the concentration of free Pi in solution the probability of Pi rebinding into the active site is increased, or 2) by using a mutation that prevents the release of Pi from the active site into the Pi-release tunnel (the S217A mutation in myosin V does just this) (Forgacs et al. 2009; Llinas et al. 2015). Really, the S217A mutation is just a ‚Äúslower mouse‚Äù and affords the ability to use standard trapping techniques in order to test the ‚Äúunifying‚Äù theory. The S217A mutation in myosin V has been shown to have an impaired rate of Pi-release of 30/s Llinas et al. (2015) which is far slower than the WT control myosin V (200/s). An event occurring at 30/s would on average take 33 milliseconds to be completed. If the release of Pi from the active does indeed gate the powerstroke there should be long delays between S217A myosin binding actin and the powerstroke (~33 milliseconds) which would readily be observable under a standard optical trapping setup that has millisecond time resolution. However, most WT myosins still have a relatively fast Pi-release rate when compared to the resolution of a standard optical trap which might still make the determination of the order of these events difficult. To overcome this, the Ultra-Fast Force Clamp (UFFC) has been used previously which provides sub-millisecond time resolution and allows for the observation of weak binding, an initial force bearing state, and the powerstroke itself in individual actomyosin binding events Woody et al. (2019). More simply, the UFFC is the ‚Äúbetter mouse trap‚Äù. 1.6 Two steps forward, one step back As presented there is seemingly a couple plausible experiments that can be performed to further assess the ‚Äúunifying‚Äù theory of the powerstroke-first and Pi-release first model. However, there are currently not any free open source software (FOSS) projects whose goal is specifically for the automation of single molecule laser trapping data. This (perhaps) is one of the biggest obstacles that is limiting the field of single molecule biophysics. Without a community of software developers there are no standards for the analysis of our data and every new scientist (like myself) has to re-invent the wheel (or at least some version of it) from what they can piece together from the (sometimes very minimal) information provided by the methods section of an article. Unfortunately, I have no quantitative evidence supporting the limitations that a lack of analysis software is imposing on the field, but the evidence I do have is personal and anecdotal. This dissertation. As a graduate student I have identified and defended a research topic through my comprehensive exams and have even outlined in previous sections (see 1.4, 1.5) some of the scientific/experimental approaches that could serve as foundation to help progress the knowledge of the field on this given topic. However, even if I was handed all of the data needed to complete the project, I would not be able to answer the questions. Why? Because I do not have the right analysis programs/tools. Generally there are two common methods for analyzing single molecule laser trap data, 1) single molecule event identification (event picking) and 2) Mean Variance (MV) analysis (see Literature Review for more details on single molecule analysis techniques). Our lab primarily uses MV for analyzing single molecule data (Woodward et al. 2020; Unger and Debold 2019) and has had success with this method. While there are pros to using MV (see Literature Review) it may not be the best candidate to answer my specific questions. Mainly, MV does not identify individual events and as a result additional post-analyses cannot be run on the data, like ensemble averaging. With MV, a change in the magnitude of the displacement of the powerstroke could be estimated, but the rate of this transition could not be determined. This is a key question that needs to be answered for this project to be successful and so an event picking analysis program is needed. But, there are no available programs that implement this, that could be used easily, or that is FOSS. Sure, plenty of research groups have their own programs, but the source code is not available and details are limited (some authors do not even mention software/programming languages used) about how specific analyses work which makes replicating an analysis tricky and quite difficult and imposes a serious limitation to the reproducibility of work in the field. 1.7 Specific Aims 1.7.1 Aim 1: Develop software to automate the analysis of laser trap data The current analysis that was in use by our lab (MV) was not sufficient to answer the questions presented here and answering these questions will ultimately help progress our understanding of how myosin converts chemical energy into mechanical work. An analysis program will be developed that can identify single molecule actomyosin interactions from raw trapping data with the ability to perform ensemble averaging in order to estimate the rate of the powerstroke (transition from unbound to bound). Moreover, the program will have a user-friendly graphical user interface (GUI) and be free and open source. The analysis will be written in the R programming language (which in of itself is FOSS) and the user interface built with Shiny (an R package that provides a web application framework). With both the analysis program and R language being FOSS, others may contribute/customize the analysis to their needs and improve the operating standards of single molecule trap analysis by offering community developed analysis solution. Additionally, this program will offer a practical, yet advanced, set of tools for other graduate students and research groups to easily implement in their own respective work. ‚ÄúUnder the hood‚Äù the program will implement the current ‚Äúbest practices‚Äù of single molecule event detection by being able to access a robust network of R add-on packages written and developed by experts in their respective field (these R packages of course being well documented and well cited). Lastly, the program should not just be for analyzing single laser trap data records, but should be in fact a complete data analysis and data management tool that will offer easy-to-use tools to perform calibrations, data cleaning and management, analysis, as well as being able to perform project summary statistics. In essence, this program will be a tool that will completely automate the analysis of laser trap data from raw data to final figures. 1.7.2 Aim 2: Test the ‚Äúslower mouse‚Äù. Determine if the S217A mutation in myosin V has a reduced displacement or rate of its powerstroke. S217A is an ideal candidate to test the sequence of events surrounding the timing of the powerstroke and Pi-release in the 3-bead laser trap assay. The main advantage being that S217A effectively traps the Œ≥-phosphate in the active site which has been shown to have a drastic effect on slowing the Pi-release rate as previously measured in solution kinetics studies (~30/sec). Our hypothesis is that if Pi-release gates the powerstroke, we should observe a prolonged (~33 milliseconds) delay (time period characterized by a decrease in variance of the trapping signal with no displacement) between the initial binding of myosin to actin and occurrence of the powerstroke. The resulting effects of the S217A mutation would be a reduced displacement (leftward shift in the displacement distribution compared to WT) and a slowed transition rate in the ensemble averaged data. However, if the powerstroke precedes Pi-release then the S217A displacement distributions, and ensemble averages should look identical to the WT. Additionally, performing this same experiment again with high (30mM) Pi in solution will provide an alternative methods for attempting to occupy the active site with Pi. As such, our hypothesis is that if Pi gates the powerstroke there should be a prolonged delay between the initial binding and powerstroke (but much longer in time for S217A vs WT due to slowed Pi-release rate). If the powerstroke precedes P-release then all 4 conditions WT 0mM-Pi, WT 30mM-Pi, S217A 0mM-Pi, and S217A 30-mM-Pi will have identical displacement distributions and ensemble averages. 1.7.3 Aim 3: Test the ‚Äúbetter mouse trap‚Äù. Determine if fast chicken skeletal muscle myosin II has an altered displacement or rate of its powerstroke under high levels of Pi by analyzing data from the UFFC. While the S217A provides an ideal test since the mutation has drastic affects on slowing the Pi-release rate, there are still limitations imposed by the setup of the standard optical trapping technique that prevent direct observation of myosin binding actin and the subsequent powerstroke. UFFC provides an increased time resolution and allows for the direct observation of the rate of a single powerstroke by a single molecule of myosin interacting with a single actin filament. This is in contrast to inferring an averaged ‚Äúpowerstroke‚Äù rate from the ensemble averaged data collected under a standard trapping protocol. Furthermore, the UFFC has the necessary time resolution in order to test a faster myosin isoform (chicken fast skeletal muscle myosin II) under no (0mM) and high (30mM) Pi which will provide additional data on a different myosin isoform helping to provide a more robust and inclusive answer to the proposed question. Our hypothesis is if Pi-release gates the powerstroke there should be a prolonged initial weak binding state between the binding of myosin to actin and the powerstroke under 30mM Pi compared to 0mM Pi, but the rate of the actual powerstroke should be unchanged. "],["literature-review.html", "2 Literature Review 2.1 Myosin Structure 2.2 The Debate 2.3 Methodological Limitations 2.4 The S217A mutation in myosin V 2.5 Analysis of single molecule trap data 2.6 Ultra-fast force clamp (UFFC)", " 2 Literature Review This review is aimed to be a comprehensive examination of the literature with a scope highly focused on the aspects most fundamental to the main question addressed by this dissertation (what is the relative timing of the powerstroke and Pi-release from myosin?). The review will begin by briefly covering myosin structure and move specifically into how Pi is released from the active site and how lever arm rotation occurs before discussing the evidence in-support of both the Powerstoke First and Pi-Release First models. Additionally, methodological limitations will be addressed here as this may/may not confound the conclusions drawn from a report. Lastly, an evaluation of common analysis techniques of single myosin molecule laser trap will be given including an emphasis on the lack-of availability of user friendly software. 2.1 Myosin Structure Myosin is a motor protein that accomplishes a wide variety of cellular tasks that includes both muscle contraction (myosin II) and intracellular cargo transport (myosin V). In fact, the myosin (super) family is quite large and has &gt;100 different myosin isoforms (Hodge, Jamie, and Cope 2000) that have traditionally been classified into &gt;30 different structural classes. However, more recently there has been an effort to more quantitatively classify myosins into four groups based on mechanic and kinetic parameters. This grouping schema classifies a myosin as either a 1) fast mover, 2) slow/efficient force holder, 3) strain sensor, and 4) gate (Bloemink and Geeves 2011). Despite a large diversity of job that each myosin performs, they all are mechanochemical enzymes with conserved structures which allows them to transduce the chemical energy of ATP into a mechanical force imposed onto an actin filament. The conserved structures in the myosin motor domain contains 3 distinct sites which interact together allowing the enzymatic (biochemical) and mechanical function of the whole protein to occur. The sites are the 1) active site, 2) the actin binding surface, and 3) the lever arm (Robert-Paganin et al. 2020). Structural changes that occur at both the actin binding surface and in the active site ultimately are communicated throughout the entire protein which effects the position of the lever arm. Myosin Structure from Robert-Paganin 2020. The three main conserved sites are highlighted in red boxes. ATP is shown in a dashed circle. 2.1.1 How does Pi leave the active site? When binding to myosin, an ATP molecule enters the active site ‚ÄúŒ≥-phosphate first‚Äù. The implications of this is that when ATP is hydrolyzed to ADP + Pi , the ADP molecule blocks the Pi exit pathway the way that ATP entered. Counterintuitively, Pi-release occurs first prior to the release of ADP in myosin‚Äôs cross-bridge cycle (Geeves, Goody, and Gutfreund 1984). But, how does Pi leave the active site if ADP is blocking the exit? There are three proposed pathways that lead into myosin‚Äôs active site and they are nicknamed the ‚Äúfront door‚Äù, ‚Äúback door‚Äù, and ‚Äúside door‚Äù. The position of ATP in the active site was first observed when myosin‚Äôs crystal structure was first resolved (Rayment et al. 1993). At this time solution kinetic studies had established the timing of some of the biochemical steps and was clear that the Pi-release step occurred before the release of ADP. With the observation of ATP in the active site ‚ÄúŒ≥-phosphate first‚Äù it became clear that Pi could not leave the same way it originally entered (via the ‚Äúfront door‚Äù) due to steric blocking by ADP. With this data the hypothesis was made that myosin could be a ‚Äúback door‚Äù enzyme in which Pi could escape through the 50-kDa cleft (Gilson et al. 1994; Rayment et al. 1993; Yount, Lawson, and Rayment 1995). Additionally, over time other hypotheses arose most prominently with the idea of Pi leaving through a ‚Äúside door‚Äù which forms from an opening in between SWII and the P-loop from the active site. To date, the most probable Pi-release pathway is via the ‚Äúback door‚Äù and is thoroughly detailed by Llinas et al. (2015). Using x-ray crystallography, myosin-VI, varying levels of [Pi] concentrations, and numerous active site point mutations they characterized a so-called ‚ÄúPi-release tunnel‚Äù in between the cleft of the two 50-kDa domains that lead from the active site into solution. In short, the mechanism of Pi-release involves actin binding triggering conformational changes in the active site. SWII opens the entrance to the Pi-release tunnel in which the Pi can dissociate from the active site into solution. Additionally, they were able to couple their structural observations with kinetic solutions studies to show the higher probability of the ‚Äúback door‚Äù mechanism versus the alternate ‚Äúside door‚Äù hypothesis. Figure 2.1: The so-called ‚ÄòPi-release tunnel‚Äô detailed by X-Ray Crystallography from Llinas et al.¬†2015. 2.1.2 How does the powerstroke occur? Unfortunately, there are no structures of the transition states that occur throughout the cross-bridge cycle and thus there is limited knowledge of the structural re-arrangements that occur during the main part of the powerstroke (the force generating step), however what is known is that there is a large lever arm rotation between the initial force bearing PiR state and the strongly bound ADP state that is coupled with cleft closure (Sweeney, Houdusse, and Robert-Paganin 2020). Structural data has however provided information about the size of the lever arm, ~9nm in chicken skeletal S1 (Rayment et al. 1993), which is in close proximity with single molecule displacement records measured in the laser trap, 5-10nm, for skeletal myosins containing two IQ domains Tanaka et al. (1998). In addition, the displacement of the powerstroke scales with the length of the lever arm which is dependent on the number of IQ domains (Matthew J. Tyska and Warshaw 2002). In comparison, myosin V S1 that contains 6 IQ domains was measured to have an average displacement ~18 nm (Veigel et al. 2002). Interestingly, the displacement of myosin V S1 is about three times larger than that of myosin II S1 as myosin V S1 also contains three times the number of IQ domains. Overlayed structures of myosin V in the pre-powerstroke and rigor state from Wulf 2015 Along with the length measurements, estimations of the degrees of rotation of the lever arm have been made. Several groups have estimated a large 65-75 degree rotation of the lever arm which occurs as result of the powerstroke (Dominguez et al. 1998; Houdusse, Szent-Gy√∂rgyi, and Cohen 2000; M. L. Walker et al. 2000). Admittedly, though the estimations of the displacement caused by the powerstroke are rather close between measurements of the lever arm from structural biologists and displacement records provided by single molecule trappers, there has been speculation on why the displacement measured in the laser trap is often a few nanometers less than predicted by a 9nm lever arm rotating through 70 degrees of motion (this should be &gt;9nm based of structural predictions though many trappers report 5-6nm). Matthew J. Tyska and Warshaw (2002) attribute the underestimation from trapping studies to the fact that myosin is working against a load in the laser trap. Alternatively, there could also be series compliance that effects the functionally measured displacement in the trap. Furthermore, one of the most notable and important features of the myosin motor domain is the converter. The converter is able to amplify small conformational changes that occur at the actin binding interface and the active site into large movements and re-positioning of the lever arm. The converter is highly flexible and the majority of the series compliance in the myosin has been attributed to this feature (K√∂hler et al. 2002). Though the lever arm has been suggested to be compliant by some (Howard and Spudich 1996), more recent evidence suggest the lever arm is in fact rigid (Warshaw et al. 2000) since the observation that showed myosins displacement is directly proportional to lever arm length (Matthew J. Tyska and Warshaw 2002). Interestingly, the powerstroke actually occurs in two transitions, the fast powerstroke and the second powerstroke (sometimes referred to as the hitch). The additional lever arm rotation is accompanied by complete closure of the actin binding cleft that is coupled with the release of ADP from the active site (Mentes et al. 2018; Sweeney, Houdusse, and Robert-Paganin 2020). While, the second powerstroke does not contribute much to the development of force, it is crucial to the maintenance of force. Changing the rate at which ADP is released from the active site can drastically alter myosin‚Äôs duty ratio and is highly load dependent. In fact, kinetic differences, including differing ADP release rates, is what make different myosins ideal at performing specific tasks. Through their kinetics myosins as are essentially ‚Äútuned‚Äù to their biological function. While skeletal muscle myosin II has a low duty ratio (~5%) which makes it ideal for the development of high forces and velocities, myosin V has a much higher duty ratio which allows for one head to always be strongly bound to an actin filament track ensuring the molecule does not simply diffuse off of its actin track. Additional lever arm rotation with ADP Release from Wulf 2015 Lastly, the key activator of the myosin powerstroke that is universally agreed upon is actin binding. Really, to try and explain what happens after actin binding would be jumping too far into the major debate happening in the field and is exactly the motivation behind this dissertation. Up until now, what is fairly certainly known (and what is actually generally agreed upon) is that the powerstroke is 1) actin-activated and 2) occurs between an initial force bearing state and the strongly bound ADP state. The details and order of events that occur has been debated for years and the answer to the question ‚Äúhow does the powerstroke occur?‚Äù is highly dependent on who is asked. Two distinct and opposing answers are provided by structural biology and the results of functional experiments. 2.2 The Debate The relative timing of the powerstroke and Pi-release is the big question in the myosin world. This question has been tested and re-tested and evidence continues to build for each side. The perspective from structural biologists holds the view that Pi-release gates the powerstroke and they have the data to back it up. However, functional assays performed by muscle physiologists, biochemists, and biophysists support the idea that the powerstroke occurs prior to Pi-release and that actin-binding alone is enough to trigger the powerstroke, and they have the data to back it up. 2.2.1 Evidence for the Powerstroke Preceding Pi-release In a model where myosin‚Äôs powerstroke occurs before Pi-release there must be a couple of key functional observations that can be observed experimentally in order to support this theory. 1) The development of force or the rate of the powerstroke should be relatively faster than the measured Pi-release rate. 2) The powerstroke should be reversible and/or force production should be vulnerable to Pi rebinding as this should either reset the myosin to an Mpre-D-P state and/or induce premature detachment. Early studies with muscle fibers show isometric tension is inversely proportional to [Pi] - the higher the [Pi] in solution, the lower the force (Brandt et al. 1982). Additionally, the release of caged Pi in isometrically contracting muscle fibers displays a delayed but clear depression in tension (Dantzig et al. 1992). Furthermore, a linked assay that assesses the development of muscle fiber force and the simultaneous appearance of Pi in solution proves that fiber force develops faster than the appearance of Pi in solution (He et al. 1997). Later studies show that the rate of force production following a shortening-restretch protocol is rapid and similar to the original time course of the force development from isometric tension (Sleep, Irving, and Burton 2005). These cellular level studies are clear that a muscle can produce force faster than the release of Pi and that the force developed by a muscle can be affected by Pi rebinding, all in support of a model where the powerstroke occurs before Pi-release. More recently, in vitro investigations using time resolved FRET with fast skeletal myosin II provided direct evidence that the powerstroke proceeds Pi-release by obtaining fluorescence measurements of both the rate of the powerstroke and Pi-release for direct comparison. The rate of Pi-release was measured at 30-40 s-1 and the adoption of a post-powerstroke configuration (i.e.¬†M* Mole Fraction) occurred at 350 s-1 (Muretta et al. 2015). Thus, when directly measured the rate of transition from pre-post powerstroke is far greater than the rate of the appearance of Pi in solution. This finding was corroborated with traditional FRET studies of myosin-V comparing lever arm rotation rate to another independently acquired Pi-release rate (Trivedi et al. 2015). Lastly, ultra-fast optical trapping can directly measure the rate of the powerstroke from a single molecule of myosin (Marco Capitanio et al. 2012). Woody et al. (2019) measured the rate of the powerstroke under varying [Pi] concentrations and saw rapid displacements occurring within ~200us of actin binding and that the dwell time prior to the displacement was unaffected by [Pi]. Even so, by using an ensemble averaging technique they show direct observation of powerstroke reversals (under high loads and high [Pi]) which provides single molecule evidence of the powerstroke proceeding Pi-release. 2.2.2 Evidence for Pi-release Gating the Powerstroke If Pi-release gates the powerstroke, distinct structural conformations of myosin should exist in order to support this model. 1) When Pi is in the active site myosin should be in a pre-powerstroke position and 2) the adoption of a post-powerstroke configuration should only occur if Pi is absent from the active site. Interestingly, the hypothesis that the biochemical release of Pi from myosin‚Äôs active site proceeding the powerstroke originally came as a result of first x-ray crystallization of myosin (Rayment et al. 1993) and the subsequent attempts to dock an ATP molecule into the crystal structure since the original myosin structure was crystallized without a ligand. The realization occurred after these efforts that myosin may perhaps be a ‚Äúback door‚Äù enzyme (Yount, Lawson, and Rayment 1995). By extending the ‚Äúback door‚Äù analogy, Yount, Lawson, and Rayment (1995) described Pi as behaving as a ‚Äúdoor stop‚Äù as it was hypothesized that Pi itself actually prevented the powerstroke from occurring since the Pi appeared to be in a position that would prevent cleft closure (and the subsequent triggering of structural changes necessary for lever arm rotation). Indeed, for over a decade from the original structural characterization of myosin there persisted discrepancies amongst multiple hypotheses about how actin binding could possibly cause the conformational changes necessary in the active site to open the back door (Sweeney and Houdusse 2010). The two possibilities being that either SWI can create the opening for the back door whilst remaining coordinated with the ADP or SWII must somehow open the back door without permitting lever arm rotation. Llinas et al. (2015) provided new myosin x-ray crystallography structures in which they show the ability of SWII to move ~4A from its position in the pre-powerstroke position, opening the back door escape route without substantial movement of the lever arm. This new state was aptly named the Pi-release state, PiR. By using a Pi-soaking protocol followed by rapid freezing and subsequent crystallization, Llinas et al. (2015) demonstrated that Pi can translocate back through the Pi-release tunnel as they observed two distinct structural states in response to the rapid freezing after Pi-soaking. Pi was either at the exit of the Pi-release tunnel (PiR1) or translocated back through the tunnel near the ADP (PiR2). Only in response to a delayed freezing after Pi-soaking did they observe Pi completely rebinding the active site, consequently reforming the pre-powerstroke state. Thus, they provide strong evidence for Pi-release occurring before the powerstroke - when Pi is in the active site, myosin is in the pre-powerstroke state. Furthermore, when Pi-soaking post-powerstroke myosin in an ADP state, the crystal structures show that the Pi was not able to translocate back through the Pi-release tunnel to the active site. This demonstrated that myosin only adopts a post-powerstroke conformation when Pi is absent from the active site and also that Pi-rebinding can only occur prior to the powerstroke (Llinas et al. 2015). These observations are all consistent with a model in which Pi-release gates the powerstroke. 2.3 Methodological Limitations As the brief review provided by the previous two sections highlights, there is overwhelmingly strong evidence supporting both models that describe the relative timing of the Pi-release and the powerstroke. Because of this, careful consideration about the methodical and analytical limitations should be understood if there will be any hopes of somehow reconciling the differences observed in the data. To start, the most obvious difference that is evident amongst the data is that the majority of the studies that support the powerstroke first model are all functional assays, whereas the evidence supporting the Pi gating model are largely structural. In essence, structural data provides ‚Äúsnapshots‚Äù analogous to the creation of a stop motion film, whereas the functional studies provide the soundtrack to the movie. We have the two essential pieces to creation of a blockbuster film, but not the information to correctly align the audio to the video. Understanding every detail of these experiments is difficult as the collection methods and analytical techniques for each respective method are the results of multidisciplinary approaches that provide deep knowledge of biology, chemistry, physics, mathematics, and computer science. However, new information can be revealed when the data is put into context of understanding what a measurement is precisely assessing from a given experiment and what factors should be considered when weighing the values in combination in the efforts to generate any given model. 2.3.1 Structural limitations For example, while the results of x-ray crystallography produce a single structure of a myosin molecule these structures in fact represent the average bias of thousands of molecules (Sweeney and Houdusse 2010). In addition, formation of myosin crystals is extremely difficult and numerous modifications have to be performed on the myosin (i.e.¬†reductive methylation, removal of the heterogeneity in light chain species and varying levels of phosphorylation) to obtain high quality crystals (Rayment et al. 1993). Furthermore, an actin-bound myosin structure is yet to be resolved. Considering the strong evidence that the cross-bridge cycle is actin activated (i.e.¬†accelerated powerstroke and Pi-release rates in the presence of actin (Lymn 1974)), this is an important limitation to be considered (and perhaps the biggest). Lastly, myosin‚Äôs kinetics are influenced by many factors including load, pH, ionic strength, and [Pi]. It is not currently possible to variably apply loads (besides those arise from crystal packing forces) to myosin in x-ray crystallography or electron-microscopy and the solution buffers often have fixed pH and salt concentrations that optimize the formation of crystals and that are not necessarily preferential for myosin‚Äôs kinetics. 2.3.2 Functional limitations &amp; the ‚Äúunifying‚Äù hypothesis Now, the functional assays are not without faults of their own. To start, muscle fiber studies, ATPase, stopped-flow, and FRET are all bulk assays. These assays are measuring the average response of thousands of molecules of myosin into a single measurement of the development in tension, powerstroke rate, or Pi-release rate. Even optical trapping measurements of the powerstroke rate from a single molecule of myosin is not as straightforward as it might sound (ask me how I know) and involves an ensemble averaging technique (Blackwell et al. 2021; M. Capitanio et al. 2006; Sellers and Veigel 2010; Veigel et al. 1999, 2003). Moreover, in the trap single molecule displacements are the summation of the distance produced by myosin‚Äôs powerstroke and that of brownian capture (additional distance caused by thermal noise) and the transition rate going from a pre- to post-powerstroke (i.e.¬†unbound to bound) in the trap is limited by the viscous drag forces imposed by the solution onto the trapping beads (K√∂nig 2000; Svoboda and Block 1994). As a result, the rate of the powerstroke is often underestimated due to imperfect alignment of single molecule events in the ensemble averages and also in part to the transition rate between unbound/bound periods being similar to the trapping system‚Äôs corner frequency. In the case of the coupled assays where attempts are made to simultaneously measure the rate of force development in fibers while also recording the Pi-release rate, assessments must be made about the relative time resolution between the two coupled measurements to assure there is a fair comparison between the two respective rates. To this regard comes one of the biggest flaws within the powerstroke first argument. The most current argument put forward by structural biologists who support a Pi-gating model claim that the Pi-release rate measured by muscle fibers and with stopped flow is simply the wrong rate. When Llinas et al. (2015) provided new structural evidence of the PiR state, they also hypothesized the structural sequence of Pi being released: 1) Pre-powerstroke state (Pi in active site), 2) PiR2 (Pi transitions from active site into putative Pi-release tunnel, and 3) PiR1 (Pi at exit of Pi-release tunnel in solution). A phosphate binding protein binds Pi in solution with the equivalent structural state being PiR1 or later. Moreover, the structural biologists argue that the Pi transitioning from the active site in the pre-powerstroke state to the PiR2 state is what actually gates the powerstroke - not the transition into the PiR1 state - and that the PPS-PiR2 transition would occur very rapidly. This was proposed to provide a unifying theory between the structural and functional assays that bridges the gap between the powerstroke first and Pi-gating models. However, this hypothesis remains to be rigorously tested and provides a testable hypothesis - If the transition of Pi from the active site into the PiR2 position gates the powerstroke, then can the powerstroke be prevented by occupying the active site with Pi? 2.4 The S217A mutation in myosin V Several key amino acids in the active site have been identified to interact with the ATP and more specifically, the Œ≥-phosphate while in the active site (Forgacs et al. 2009; Gulick et al. 2000; Llinas et al. 2015; C. A. Smith and Rayment 1996). Moreover, previous simulations of Pi leaving the active site via the different proposed escape routes highlight important contacts between certain amino acid residues with this fleeting Pi along each proposed route (Cecchini, Alexeev, and Karplus 2010; Reubold et al. 2003). By manipulating the charge or size of these amino acids along the different escape routes with point mutations several research groups have tested whether they could slow the measured release of Pi with a stopped flow assay (Forgacs et al. 2009; Llinas et al. 2015). Serine 217 (S217) was shown to make contact with the Œ≥-phosphate in the active site from its location on SWI and the S217A mutation drastically reduced the Pi-release rate ~10-fold (Forgacs et al. 2009). With this mutation, S217 was identified as playing an important role in Pi-release. Llinas et al. (2015) verified that the S217A mutation drastically slows Pi-release and in addition showed S217 mediates the transition of the Pi from the active site into the ‚ÄúPi-release tunnel‚Äù via the back door mechanism with x-ray crystallography. Furthermore, the underlying mechanism of the S217A mutation that slows Pi-release was suggested to be due to the mutation preventing the Pi from transitioning into the Pi-release tunnel via the back door escape route, possible due to a steric blocking by a water molecule or loss of interaction that ‚Äúguides‚Äù the Pi into the release tunnel (Forgacs et al. 2009). Comparatively, the E146A mutation proposed to contact the Œ≥-phosphate via the alternative side door mechanism (via a SWI movement) had no effect on the Pi release rate (Cecchini, Alexeev, and Karplus 2010; Llinas et al. 2015) which was an observations that led to them supporting the back door mechanism which is currently the prevailing Pi-release pathway hypothesis (Robert-Paganin et al. 2020). Most importantly the S217A mutation provides the perfect test of the ‚Äúunifying‚Äù theory proposed by the structural biologists. The unifying theory states that the transition from the active site into the Pi-release tunnel gates the powerstroke (not the release into solution). With the S217A mutation, we have a mutation that prevents the release of Pi from the active site into the Pi-release tunnel. So, if the release of Pi from the active site into the escape tunnel does gate the powerstroke then the powerstroke should be delayed or prevented with the S217A mutation in myosin V. Furthermore, since the Pi-release rate becomes so much slower (~30/s) the observation of a delayed stroke would be obvious in a standard three-bead laser trap assay which has millisecond resolution. Additionally, myosin V has a much slower and rate limiting ADP-release rate which results in an increased attachment time when compared to fast skeletal myosin II making the attachment events in the laser trap more easily identifiable at high ATP concentrations. 2.5 Analysis of single molecule trap data ‚Äú‚Ä¶the interpretation of data from such experiments the laser trap is not straightforward‚Äù - Guilford et al.¬†1997 The laser trap (or optical tweezers) has been revolutionary to the myosin world. Originally developed by Arthur Ashkin of Bell Laboratories (Ashkin et al. 1986) the laser trap was adopted by biologists to study the interactions of a single molecule of myosin with a single actin filament. After the first single molecule three-bead assay was performed in 1994 by Finer, Simmons, and Spudich (Finer, Simmons, and Spudich 1994), single molecule myosin biophysics began to flourish as other research groups began building their own laser traps to investigate the basic mechanical and kinetic properties of the myosin family. While quick to adopt the method of the three-bead assay, the analysis of single molecule laser trap data seemed to be controversial even since the original Finer, Simmons, and Spudich (1994) experiment. Most of the major research groups that were trapping with myosin in the 1990s seemed to have their own opinions on how to best extract the necessary information from their raw data records and several analysis methods seemed popular while other were abandoned or seemingly ostracized by the community. Even the original work of Finer, Simmons, and Spudich (1994) came under scrutiny relatively quickly by the newly found field since they analyzed their data ‚Äúby eye‚Äù, manually selecting where actomyosin interactions occurred in the data. Moreover, even more recently as analysis has moved more hands-off and has become increasingly more automated with computer programs. Unortunately, the details to recreate these programs are not always provided with enough details in publications and there is currently no GUI software that is easily accessible to perform the analysis of laser trap data. This makes reproducible research quite difficult, and not just from the point of wanting to replicate someone else‚Äôs experiments, but also since many reviewers of journal manuscripts expect to see laser trap data analyzed just as ‚Äúsomeone else‚Äù has done. The lack of software is a large gap in the field and ultimately provides a hindrance to the field progressing as a whole. Following is a review, attempted at being chronological as best as possible, of the (mostly early) trapping papers and their techniques used to analysis single molecule myosin data from the three-bead laser trap. The purpose is to review what has and is currently being done to analyze single molecule trapping data in hopes highlight the ‚Äúbest practices‚Äù that should be included (or would be desired) in a modern software package. 2.5.1 Manual identification The most simple and easiest way to analyze laser trap data is just to look at it. Manual event identification (the ‚Äúby-eye‚Äù technique) was the original analysis method used by Finer, Simmons, and Spudich (1994). Here, they defined several criteria that would define their ‚Äúevent population‚Äù (actomyosin interactions) and would scan through the data record manually marking where they believed each event would start and end. The criteria they used were that 1) events needed to be isolated events with baseline returning to approximately the same ‚Äúzero‚Äù or reference position on each side of the event, 2) the displacements could not have multiple interactions (what most people now called ‚Äúruns‚Äù in mini-ensemble data), and 3) displacements smaller than or equal to the variance of the baseline would not be included. The reason analysis techniques can be controversial in the field is because many times the information provided by the data and what conclusions can be drawn are in part limited by the analysis performed. For instance, major motivation of the original three-bead assay was to provide a direct measurement of single molecule myosin displacements since there was a large discrepancy from displacement estimations provided by bulk in-vitro assays (motility and fibers). Additionally, the first myosin crystal structure had just been solved a year prior by Rayment et al. (1993) which had put structural constraints on myosin‚Äôs displacement to be ~6nm. However, Finer, Simmons, and Spudich (1994) directly measured a powerstroke that was about twice as large. Why? Their analysis technique was flawed. While Finer, Simmons, and Spudich should no doubt be applauded for their pioneering work, the manually identification of events caused an over-estimation of their estimate of myosin‚Äôs displacement (and to be fair hindsight is 20:20 and you have to start somewhere). Ultimately, what occurred is that their inclusion criteria that they defined specified events that needed to exceed the level of the baseline noise of the trapping system, or to be greater in magnitude than the variance of the baseline. Consequently, the analysis then only included the largest displacement events that occurred effectively filtering out the smaller displacements. We now know single molecule displacement events should be normally distributed with a mean equal to the average displacement and variance equal to that of the baseline signal (J. E. Molloy et al. 1995b), Finer, Simmons, and Spudich (1994) essentially truncated their distribution and inflated their mean displacement value. So yes, analysis is important. Even so, the analysis of trap data continued to hinder the field in their ability to accurately measure the displacement caused by myosin‚Äôs lever arm that matched those estimation provided by structural biologists. Two years later Molloy et al.¬†1995 (Biophysics) measured S1 and HMM displacements to be ~15nm. The analysis was similar to Finer et al.¬†1994, yet J. E. Molloy et al. (1995a) seemed more definitive about setting displacement and time (&gt;10ms) thresholds for the inclusion of events. This method has become commonplace for use with mini-ensemble data where events must be greater than a given displacement threshold for a minimum duration to be considered into the ‚Äúevent population‚Äù. Interestingly, Molloy et al.¬†1995 (Biophysics) admits in their own paper that ‚Äúlonger displacements could arise because both their [Finer 1994] and our data events were analyzed by eye; this may have introduced observer bias.‚Äù 2.5.2 Variance threshold Another Molloy et al.¬†1995 (Nature) paper was subsequently released with a new set of trapping data that was analyzed with a variance threshold (the first instance of a variance based analysis). Previous trapping papers solely used the raw displacement record to identify attachment events, but the introduction of the variance threshold was clever and forms of this are still in wide use today in analysis programs. The principle behind the variance threshold is theoretically simple and practically robust. A small bead trapped by a laser will provide a ‚Äúnoisy‚Äù baseline signal that is characterized by Brownian motion. On our trap in the Debold lab, trapping at a laser power of 1.5 Watts usually produces an approximate laser trap stiffness of 0.04 pN/nm. This stiffness value (0.04 pN/nm) is far less than the stiffness of a myosin head. Consequently, as the bead-actin-bead assembly is pushed around by Brownian forces the dumbbell can travel up to ~40nm in either direction (~80nm total excursion distance). However, since a myosin head is far stiffer than trapping laser, when myosin binds to actin there is a large reduction in the variance in the signal and the bead experiences less overall excursion. While, comparing the variance of the unbound to bound population can hard to resolve by eye transforming the original raw displacement records into running variance records makes the difference in bound/unbound variance become more readily apparent as this variance signal-to-noise ratio can exceed a 2:1 ratio (usually at least &gt;4:1 if you are Chris Marang). With the variance threshold analysis J. E. Molloy et al. (1995b) were able to identify zero and low displacement events that would have been excluded from previous analyses. Including zero and low displacement events produced a more complete data distribution to perform summary statistics on which provided a more accurate representation of the true underlying mean that was being estimated from the sample. Ultimately, they were able to conclude that previous measurements of the powerstroke displacement were overestimated due to flawed analysis which produced an incomplete distribution to be collected and biased the final average. While great strides were made with the variance threshold implementation of J. E. Molloy et al. (1995b) a few issues have persisted since. For one, a clear rationale for the criteria that is used to define a threshold was never really provided leaving one to think this may be arbitrarily set and left to the analyzers discretion as they seek to optimize event identification ‚Äúby eye‚Äù through manipulation of the threshold. Also, no methodological details are provided about how this analysis was performed in regards to software or programming languages. Both of these cause major issues when attempting to reproduce the analysis they argue as superior. Furthermore, this paper becomes heavily cited throughout future research papers conducted by these same authors that end in high impact journals setting the precedent for what is expected from the analysis of laser trap data. Veigel et al. (2002) is in Nature Cell Biology (impact factor ~20 now in the year 2021), has been cited 425 times, and only provides a minimal explanation of the analysis performed and instead simply opts to cite J. E. Molloy et al. (1995b) as reference for their analysis methods which also has an air of ambiguity around the analysis methods. 2.5.3 Correlated thermal diffusion The first few years of myosin laser trapping mostly used one quadrant photo-diode (QPD) to track the position of one of the trapped beads of the bead-actin-bead dumbbell. Mehta, Finer, and Spudich (1997) implemented a two QPD setup where they simultaneously could track the position of both beads. With this additional data they implemented an analysis method they called ‚Äúcorrelated thermal diffusion‚Äù. Since a bead-actin-bead assemble is a rigid system when the setup is unbound from myosin the beads move in unison. As in, the position of one bead is correlated with the other one as they are pushed around by Brownian forces (linked together by a pre-tensioned actin filament). However, when the stiffer myosin head interacts with the actin filament the beads become ‚Äúdisconnected‚Äù (figuratively not literally‚Ä¶though, I guess, literally disconnecting is possible, but a separate issue‚Ä¶just use a lot of biotin and then you do not really have to worry about any literal disconnection). As a result, the position of the two trapped beads becomes uncorrelated. Practically, the correlated thermal diffusion analysis can be performed by iteratively applying linear regressions over small windows (data subsets) of the raw displacement data from the two traps and returning the correlation coefficient of the fit. The ‚Äúevent population‚Äù will be the transient periods in time when the correlation coefficient drops to zero. The main advantage of correlated thermal diffusion is that the variance signal-to-noise ratio does not have to be as high as in the variance threshold analysis which is usually dependent on the amount of pre-tension that can be applied to the bead-actin-bead assembly and the ‚Äústickiness‚Äù of the beads. This analysis is quite similar to the covariance analysis method that also utilizes the advantages of having two QPDs, but instead calculates the covariance of the two beads position instead of extracting correlation coefficients from linear regression fits. Since covariance analysis requires two QPDs and our setup only has one, it is not a viable analysis option and will not be included in this review in detail. Diagrammatic explanation of the correlated thermal diffusion analysis from Mehta et al.¬†1997. 2.5.4 Mean Variance Analysis While the original motivation of using the single molecule laser trap was to measure the displacement a single myosin molecule could generate, the first few years produced a discrepancy of displacement estimations that were largely analysis based due to the ‚Äúeye-balling‚Äù of arbitrarily thresholded data. Guilford et al. (1997) (Warshaw Lab at the University of Vermont) re-purposed an analysis technique originally used for single ion channel data to perform the analysis of their single molecule trapping data called ‚Äúmean variance analysis‚Äù, or MV (Patlak (1993), both research groups are from the University of Vermont). This technique is a completely different approach than any of the previous attempts at analyzing laser trap data (with myosin as the motor) and extracting displacement data from. Implementation of MV in the laser trap was in response to the previous attempts of estimating myosin‚Äôs displacement which were made by manually selecting binding events from thresholded data (Finer, Simmons, and Spudich 1994; J. E. Molloy et al. 1995a), a practice that was subsequently shown to be not of ‚Äúbest-practice‚Äù as it was not statistically defense-able (Block and Svoboda 1995). The benefits of MV is that it provides a model independent transformation of the data, requires no manual selection/scoring of events by eye, and requires no assumptions about the underlying data. However, the procedure of performing analysis is more complex. Mean-variance analysis is performed, and so aptly named, by transforming raw trapping data (displacement vs.¬†time) into mean-variance histograms. The MV histograms are 3-dimensional histograms that are constructed by calculating the mean and variance of a ‚Äúwindow‚Äù (small subset of data). While, the direct results of calculating these windows values results in two time series data set, these can be plotted against each other to construct a 3-dimensional histogram where mean is on the x-axis, variance is on the y-axis, and the ‚Äúthird‚Äù z-axis is counts/number of windows/data points and reflects the total time spent at any given mean-variance combination. Since the baseline data (myosin unattached from actin) is characterized by Brownian motion the result of a histogram has a prominent normally distributed ‚Äúbaseline‚Äù population with mean centered around zero. If any actomyosin interactions are in the data traces they will present as an alternate ‚Äúevent‚Äù population with mean value equal to myosin‚Äôs displacement size. Additionally, the ‚Äúevent‚Äù population will have a smaller variance than the baseline due to myosin being stiffer than the trap. The ‚Äúevent‚Äù and ‚Äúbaseline‚Äù population can be separated by their variance, typically a data trace that contain no actomyosin binding event is used to ‚Äúremove‚Äù the baseline from the data with events. After, the removal of the ‚Äúbaseline‚Äù population the ‚Äúevent‚Äù population can be fit by a sum of gaussians to estimate myosin‚Äôs displacement. Furthermore, Patlak (1993) showed that average attachment times and the number of events could be estimated with the MV approach. In MV, since the ‚Äúthird‚Äù (z-axis) represents the counts/amount of time spent at a given mean-variance this ‚Äútime‚Äù is dependent on the window width used to construct the MV histogram (smaller windows width produce a data set with more data points). By iteratively constructing MV histograms and recording the number of ‚Äúcounts‚Äù in the event population, a plot of counts vs window width can be constructed and this relationship is defined by a single exponential. Fitting the exponential \\(V_{mv}= t_{on}ke^{(N-1)t_{on}}\\), provides estimates of the average attachment time (ton) and number of events (k) present in the data which are parameters of the fit. While thresholding and identifying events ‚Äúby-eye‚Äù is simple, it is also (relatively) easy requiring no sophisticated software or advanced computer programming skills. MV has benefits as an alternative analysis, but it is more computationally intensive and seemingly impossible to perform without a computer and advanced programming skills (iteration, curve fitting, statistical F-tests proving the merit of additional Gaussian, and automation). To the credit of the authors, both Patlack and Guilford, there exists a GUI based program that allows a user to perform MV analysis. However, the program runs on Windows only, is not open source, is not actively maintained, and not obtainable without a connection to UVM. Limitations of MV analytically for trapping data is that each ‚Äúevent‚Äù population is biased by the length of an individual event and not the number of events itself. For example, if a data trace has 10 events, nine of them 4nm and 10ms long, and one being 20nm and 100ms long, the average of that ‚Äúevent‚Äù population will be more biased toward the value of the longer event than it would if the mean was calculated mathematically. As a result, ideally you need a lot of data (events) to produce a full distribution. Additionally, in MV there still is a more or less arbitrary threshold that is needed to separate populations if subtraction of the baseline is not used. However, the biggest drawback of MV is that the analysis does not actually identify individual events, but populations. This limits the ability to perform any post-analysis procedures on the individual event (ensemble averaging) that has become commonplace (and almost expected) from a modern trapping paper. Nonetheless, this method is still viable even today in the modern trapping world as our lab as had recent success using MV with a 2020 paper detailing how a non-nucleoside substrate differential affects myosin function in a laser trap (Woodward et al. 2020). MV histograms constructed at different window width from Guilford et al.¬†1997 2.5.5 Page Method For most of the 90s the previously reviewed methods, mainly thresholding and MV, was the mainstay for single molecule myosin laser trapping. Seemingly, there seemed to be large controversy over the superiority of the two methods as inferred from the review by Knight 2001. This article is a part analysis review/part introduction of the Page Method as a technique for analyzing trap data (note Veigel and Molloy are co-authors). In this review, not only is MV written-off, but the authors‚Äô (UVM crew) trapping skill seemingly outright insulted. In response to the method Guilford et al. (1997) used to remove the baseline population to avoid arbitrarily setting a variance threshold to define an event population, Knight et al. (2001) remarks ‚ÄúFig. 3c shows that the two populations can be clearly distinguished without recourse to such measures if the experimental data is of sufficiently high quality‚Äù. Bold! The Page Method is an analysis that provides automatic event identification and is a re-vitalization of an older analysis technique that was originally described as a ‚Äúcontinuous inspection scheme‚Äù by E.S. Page (PAGE 1954). In short, this method relies on using probability distribution functions (PDFs) in attempts to classify data points (of unknown origin) as a part of a certain populations, or distributions, based on comparing the probability of obtaining a data point with that specific value from a set of given PDFs in order to detect a change/switching of the underlying PDF. Knight et al. (2001) describe how to perform a version of the Page Method for the analysis of laser trapping data. First, a running mean can be subtracted from the original trapping records. The result is a removal of all displacements from the data so the ‚Äúbaseline‚Äù and ‚Äúevent‚Äù population should both be characterized as normal distributions centered around zero. However, the two populations will differ in their respective variances. The baseline will have a larger variance as dictated by Brownian motion and the event population will have a smaller variance since the increased stiffness of the myosin head dampens the effects of Brownian motion on the trapped bead‚Äôs position. These variance levels can be calculated directly from the data or inferred. Since a mean and variance level can be estimated for the two populations, baseline and event, PDFs can be constructed and the probability of achieving each data point from each of the two distributions can be calculated. The log odds ratio is then expressed for each data point comparison. Due to the shapes of the two population (baseline is much wider due to higher variance) points nearest zero have a higher probability of being from the event population. This produces positive odds ratios, whereas anything with a higher probability of belonging to baseline has a negative log odds ratio. Since positive values indicate attachment events and negative values un-attachment, a zero threshold cumulative sum can be calculated over all of the resulting log odds ratios to identify the start and end of all events. Since the attachment events return positive log ratios the cumulative sum will steadily increase throughout the attachment time of a true (real) event. When the event ends negative logs odd ratio will result and the cumulative sum will return back to zero leaving a peak in the cumulative sum trace identifying the end of an event. Performing the same analysis in reverse will identify the starts of the events. There is a minimum duration threshold that needs to be set under which peaks in the cumulative sum should be ignored to reduce detection of false events. Interestingly, while this paper was submitted from a well-known trapping group and paints the Page Method in a positive light this method does not appear often or in subsequent use of analysis in their future work (it was not used in Veigel et al. (2002) - Nature Cell Biology). For what anecdotal evidence is worth, I had a lab-mate discourage me from using the Page Method as it was conveyed to me that this method was not reliably capturing shorter attachment events. Perhaps this analysis is best suited for lower ATP concentrations and/or slower motors. Event identification via the Page Method from Knight 2001 2.5.6 Hidden Markov Model In response to the controversy surrounding both the previously described analysis techniques and the inconsistency in reports of myosin‚Äôs actual powerstroke size D. A. Smith et al. (2001) proposes the Variance Hidden Markov Model (HM-Model) as an alternate analysis technique that unlike the other analyses actually provides a ‚Äúbest-fit‚Äù to the data by removing arbitrarily set thresholds in exchange for using a kinetic model to describe the underlying probability of being in a given ‚Äústate‚Äù (bound/unbound). The main goal of a HM-Model is to predict the occurrence of some un-observable event from another (related) observation. In relation the the laser trap, the objective is to identify periods of time when myosin is bound to actin. However, you cannot actually physically see myosin bind to actin in a laser trap. This is in fact an un-observable event. But, we do know that myosin is stiffer than the laser traps, so if myosin does bind the variance of the displacement signal should decrease. This is the information in the data that is collected and that can readily be observed (bead position over time). With the HM-Model, the goal is to use the statistical characteristics of the two variance populations (unbound/bound) to predict the most probable sequence of un-observable states throughout the data. The parameters in the model include myosin‚Äôs attachment and detachment rate (commonly denoted as f and g, respectively), and the variance of the unbound/bound populations. Ultimately, the probability for each variance window belonging to a certain ‚Äúattachment state‚Äù can be determined by comparing the probability for each window to belong to a certain variance PDF in combination with factoring in what the previous attachment state was. In a HM-Model, a certain variance window would not necessarily be categorized as belonging to an ‚Äúattachment state‚Äù just because there is a higher probability of the window to be drawn from the bound variance PDF. The HM-Model also considers the ‚Äútransition probability‚Äù by taking into account the previous attachment state. The transition probability in this case is myosin‚Äôs attachment/detachment rate. So, the categorization needs to determine the most likely attachment state for the current variance window based upon the conditional probability of observing a certain variance value given the prior attachment state. For an un-elegant example and if the algorithm had human thoughts perhaps it would be asking these questions to-itself while it tried to determine the attachment state given the previous state was unattached: ‚ÄúWhat‚Äôs the chance of a myosin binding event occurring and then what is the chance of drawing this variance value from the attached state variance PDF?‚Äù versus ‚ÄúWhat‚Äôs the chance of the myosin staying unattached and then what is the chance of observing this variance value from the unattached variance PDF?‚Äù. Though you could perform the attachment state de-coding by hand (it really is just multiplying probabilities and selecting the highest one to determine the state), this is performed computationally via the Viterbi algorithm. Furthermore, the parameters for the model can be estimated using the Expectation-Maximization (EM) algorithm. So a practical use case involves first estimating the model parameters with the EM-Algorithm and then using the Viterbi algorithm to perform the state sequence decoding. The HM-Model thus provides a sophisticated and robust approach to analyzing single molecule laser trap data as this technique has a simple assumption of a basic kinetic scheme for myosin dynamically binding and unbinding from an actin filament without arbitrarily defining thresholds to identify events. Furthermore, this approach was implemented when M. Capitanio et al. (2006) observed the hitch in skeletal muscle myosin II for the first time showcasing the HM-Model‚Äôs ability to reliable detect true events. However, this is a more advanced approach that would require a lot more effort and knowledge (as compared to a user defined threshold) of both math and computer programming to implement and automate from scratch. Unfortunately, there are no computer programs available to easily perform this analysis on laser trap data which is probably why it is not in high spread use (even though it arguably should be). Hidden Markov Model identifies single molecule events from Smith et a. 2001 2.5.7 Ensemble Averaging One of the advantages of using an analysis that identifies actomyosin binding events is that these methods provide information about when the event begin and ends (aka these analyses report at which data point an event start and at which data point the events end). This is quite useful information to have. For one, being informed when events are starting/ending allow the user to be able to visually inspect the data and the resulting analysis to decide whether the analysis appears to be identifying ‚Äútrue‚Äù events or not which allows the user to be more confident in their data if they are visually pleased with the results. But also, having an analysis program that identifies individual events allows additional post-analyses to be performed. A common such test for laser trapping data is ensemble averaging. To ensemble average trapping data first you need data that has been analyzed with some sort of event identification analysis. Once all the data has been analyzed and events identified there is a couple unusual transformations that occur. Furthermore, a complete ensemble average consists of both a forward and backwards ensemble average which differ by the initial alignment of the events. Forwards ensemble averages are aligned at the start of the events and the backwards ensembles are aligned at the end. To conduct an ensemble average, first all events are subset out of the original data trace and are extended to the length of the longest event. Then the events can be aligned horizontally by being placed on the same relative time scale and each point averaged vertically so the first data point of the first event is averaged with the first data point of the ‚Äúnth‚Äù event. The results of the ensemble average is ‚Äúone event‚Äù that represents the average response of all the events. By performing this analysis additional information can be estimated from trapping data. For instance, with the forward ensemble averages the rate of the first and second powerstroke can be estimated; however, providing estimates for the rate of the first powerstroke is rare as the rate of the first powerstroke is far greater than the time resolution of a standard rate. Some researchers ignore this rate, but this rate can still be fit and used to represent the rate at which the unbound to bound transition occurred for a given condition with the caveat being the rate is not reflective of the rate of the actual powerstroke, but one that would reflect the powerstroke and the resulting movement of beads through solution. Ensemble averaging has been used extensively to measure both the size and rate of the second powerstroke, sometimes called ‚Äúthe hitch‚Äù. Additionally, since the hitch is often associated with the release of ADP many use the rate of the second powerstroke as a surrogate measure of the ADP release rate that can be estimated from trapping data. The size of the hitch can be estimated from a floating parameter to the exponential fit that estimates the rate, or by subtracting the beginning position of the backwards ensemble from the final displacement from the forward ensemble. Lastly, the second order binding constant of ATP to myosin can be estimated from an exponential fit to the backwards ensemble. As a result, ensemble averaging serves as a powerful post-analysis tool which can provide important kinetic and mechanical insights to the originally collected data set. Ensemble averaging data from Capitanio 2006. 2.6 Ultra-fast force clamp (UFFC) In almost all of the previously described analyses techniques in Chapter 2.6 the variance of the trapping signal is used to somehow differentiate between myosin being either attached or un-attached from actin. While this is a reliable method in regards to detecting single molecule events, the time resolution afforded by the standard laser trap setup of two beads stuck in stationary traps is limited in which these analysis method can be used. As a result the use of the signal variance for event detection can only be pushed so far. In a standard laser trap setup, the time resolution is ultimately limited when using a variance driven analysis method due to the roll-off frequency of the baseline signal of the trap, dictated by brownian motion and the stiffness of the traps: \\(f_c=(1/2\\pi)*(kx/6\\pi \\eta r)\\) Unfortunately, the limited time resolution is not a simple issue related to the analysis technique used or even to the sampling frequency. The problem with the limited time resolution in a standard laser trap setup using an event identification program (or when applying real-time feedback) based on changes in system stiffness/variance is that there is a lack of signal in the necessary frequency range (Knight et al. 2001). This means that changes in variance are only detectable for frequencies far less than the corner frequency of the trapping signal (Marco Capitanio et al. 2012) leaving the shortest detectable events to be ~5-15ms in a typical trapping setup (Knight et al. 2001; Marco Capitanio et al. 2012) as temporal resolution is inversely proportional to the roll-off frequency (Neuman and Nagy 2008) and most research groups report roll-offs between 300-500 Hz (Veigel et al. 1998; Guilford et al. 1997). In theory, the temporal resolution can be increased under standard trapping conditions by increasing system stiffness or by decreasing the drag on the beads (Neuman and Nagy 2008). But in practice, increasing baseline stiffness would then decrease the signal-to-noise ratio that is typically used to detect binding in three-bead assay. To combat the limited temporal resolution in the standard laser trap setup people started ‚Äúwiggling‚Äù one of the traps. Veigel et al. (2003) was the first to ‚Äúwiggle‚Äù on of their traps in a myosin based three-bead assay. The motivation of the paper was to apply load directly to a single myosin motor in order to probe the underlying mechanisms of the ‚ÄúFenn Effect‚Äù. Here, the authors applied a 1kHz oscillation (sine wave) to one of the traps (high frequency, low amplitude). Attachment events were then able to be identified as deviation from the assigned amplitude to the oscillating trap. This effectively decreased their time resolution to ~1ms. Marco Capitanio et al. (2012) took this approach to another level with the introduction of the Ultra-fast force clamp (UFFC). While Veigel et al. (2003) had the time resolution to asses the load dependence of the ADP-bound state in smooth muscle myosin II at low ATP concentration, 1-ms time resolution was still too slow to directly observe or test the load dependence of the powerstroke itself. In standard optical trapping setup the ‚Äúpowerstroke‚Äù is not seen and the transition between unbound/bound appears instantaneous. In fact, even in the ensemble averaged data of standard optical trapping data, the ‚Äúrate of the first powerstroke‚Äù is often ignored because the powerstroke rate occurs faster than the time resolution of the trap and the unbound-to-bound transition is influenced by the terminal velocity of a damped bead moving through solution. Additionally, smooth muscle myosin has a two-fold slower ATPase rate (Harris and Warshaw 1993) than skeletal muscle myosin II. Which brings up the major problem when trying to study skeletal muscle myosin II - it is fast. Moreover, skeletal muscle myosin II has a low duty ratio and is non-processive. This means that it spends the majority of its time off-actin and only transiently interacts with an actin filament in a stochastic manner which means it only spends a few milliseconds on actin at saturating ATP concentrations. The UFFC has micro-second temporal resolution and sub-nanometer spatial resolution. To reiterate, the UFFC has MICRO-SECOND temporal resolution and SUB-NANOMETER spatial resolution. If you don‚Äôt think this is cool you should probably stop reading this dissertation now. With UFFC not only can single powerstrokes be observed, but load can be applied to the actual powerstroke as well. The increased time resolution is applied with a similar principle to what Veigel et al. (2003) performed - ‚Äúwiggle‚Äù the traps. The following sentence might be the biggest understatement/oversimplification in this entire dissertation. In UFFC, both traps are ‚Äúwiggled‚Äù simultaneously, very quickly. The basic setup is still a three-bead assay, but once a dumbbell setup is formed, both traps are rapidly displaced back and forth which results in a triangular wave being imposed on the setup. The side-to-side displacements are performed by first putting equal and opposite forces on both of the beads (via AOD control), and then additional force is added to one of the traps which steers the setup in a certain direction at a specified force level. Once, a pre-configured distance is reached (~200nm), the additional load is then revoked from the one trap and added to the other in order to switch the direction of the setup. Switching directions of the movement allows the actin filament to remain within binding distance to the myosin on the mogul. One advantage of UFFC is that the dumbbell setup is always experiencing the load, so when a myosin does bind, the load will be instantaneously (well, near-instantaneous‚Ä¶this time depends on the the stiffness) applied to the myosin as there is no waiting period for a feedback system to engage once an actomyosin interaction is detected. Events are detected by converting the raw positional data (bead displacement over time) into a velocity measure and applying a threshold. The velocity of the dumbbell ends up being equivalent to the total force applied to the system divided by the viscous drag of the dumbbell setup \\(v = F_{total}/drag\\). Since the UFFC is designed to apply a constant force, when myosin binds the traps will rapidly stop moving in order to maintain the desired force level. This results in the velocity transformation of the raw UFFC displacement record forming a double Gaussian with the bound population being centered on zero (nm/ms). Currently, only two UFFC experiments have been performed with myosin. The original UFFC experiment was performed with skeletal muscle myosin II Woody et al. (2019). Woody et al. (2019) performed UFFC with cardiac myosin II under both 0mM and 10mM-Pi. As previously described, the UFFC provides the perfect test of the main proposed question of this dissertation - ‚ÄúWhat is the relative timing between the powerstroke and Pi-release?‚Äù because UFFC allows for direct observation of the powerstroke and this can be tested under both 0mM and 30mM-Pi concentrations. This technique allows to test the question without a mutation that slows myosin‚Äôs kinetics (i.e.¬†‚Äúmaking a slower mouse‚Äù) because it has the necessary time resolution to directly observe if the presence of high Pi levels, which increase the probability of myosin re-binding to the active site, can prevent and/or delay the powerstroke (i.e.¬†UFFC is the ‚Äúbetter mouse trap‚Äù). Indeed, Woody et al. (2019) observed that the presence of 10mM Pi did not alter the rate of the powerstroke in cardiac myosin. Thus concluding that the powerstroke precedes the release of Pi from the active site; however, structural biologists have disputed these claims as mis-interpretation of the results of their UFFC data and actually see Woody et al. (2019) as provided evidence that Pi-release gates the powerstroke (Robert-Paganin et al. (2020)). Clearly, there is still a need to perform UFFC with high Pi, especially with skeletal muscle myosin II since it has yet to be done. The Ultra-Fast Force Clamp from Capitanio 2012 "],["methods.html", "3 Methods 3.1 Protein Isolation and Expression 3.2 Laser trap assay 3.3 Ultra-fast force clamp", " 3 Methods 3.1 Protein Isolation and Expression 3.1.1 Myosin V expression Myosin V S1 is expressed (baculovirus system) with the first 792 amino acid residues which includes 1 IQ domain as detailed previously by the Yengo Lab (Gunther et al. 2020). Additionally, expressed myosin V contains the N-terminal tetracysteine motif, C-terminal Myc, and C-terminal FLAG tags (Trivedi et al. 2013; Trivedi et al. 2015, 2020; Gunther et al. 2019). The S217A mutation was introduced (serine to alanine) using QuikChange site-directed mutagenesis (Stratagene), co-expressed with calmodulin, and purified with FLAG affinity chromatography. 3.1.2 Skeletal muscle myosin II isolation Fast skeletal muscle myosin II was isolated from chicken pectoralis muscle (Diemand Farm, Wendell, MA). All procedures during isolation were carried out in a cold room or performed on ice. Isolation was performed as previously described by the Debold lab (Woodward et al. 2020; Unger and Debold 2019; Longyear, Walcott, and Debold 2017) by Mike with a protocol similar to those of Margossian and Lowey (1982) with minor modifications. In short, chicken breast muscle is passed through a meat grinder and rinsed with 0.2M EDTA. 2 mL of Buffer A (Extraction buffer consisting of 0.3M KCl, 0.15M KPi, 20mM EDTA, 5mM MgCl2, 3.3mM ATP, and 5mM DTT at pH 6.7) is added per gram of tissue including 5mL of protease inhibitors. This is mixed for 12 minutes with an overhead stirrer. The reaction is stopped with a 4X dilution into water which is then mixed and filtered. After precipitate settles it is centrifuged at 10,800g for 10 minutes at 4C and the resulting pellet is resuspended with Buffer B (Suspension buffer consisting of 1M KCl, 60mM KPi, 20mM EDTA, and 5mM DTT at pH 6.7) and mixed gently before being left to dialyze overnight. Actomyosin is then precipitated and centrifuged at 41,171g for 1 hour at 4C and the resulting supernatant is diluted 10X with water. Clear supernatant is siphoned off and the rest is centrifuged again at 10,800g for 15 minutes at 4C. Supernatant is poured off and precipitate is resuspended with Buffer D (Resupsension buffer consisting of 3M KCl, 50mM KPi, and 5mM DTT at pH 6.7) before being dialized overnight for a second time against Buffer E (Dialysis buffer consisting of 0.6M KCl, 50mM KPi, 1mM NaN3, and 5mM DTT at pH 7.0). After the dialysis, myosin is clarified with an ultracentrifugation at for 2 hours at 4C, concentration determined, snap frozen with liquid nitrogen, and stored at -80C. 3.1.3 Actin isolation and labeling Acetone powder was prepped from the remainder from the myosin isolation (with the leftovers from the filtered cheesecloth) and actin purification was performed from the resulting acetone powder as described by Pardee and Spudich (1982) with modifications. Briefly, acetone powder was finely ground and mixed with extraction buffer (2mM Tris Base, 0.2mM CaCl2, and 0.005% NaN3 at pH 8.0) and stirred with an effort to minimize creation of bubbles. The resulting solution is spun at 28960g for 20 minutes and supernatant filtered off and kept aside. Additional extraction buffer added to gel-like precipitate and centrifuged a second time with the same specs with the supernatant filtered off and combined with the previous. Actin is polymerized from the resulting supernatant by addition a final polymerization solution (50mM KCl, 2mM MgCl2, and 1mM ATP). Salt is added to slowly to prevent ‚Äúsalt shocking‚Äù the proteins before being left to stir overnight. The next day, a high salt wash (increase KCl to 600mM) removes tropomyosin from the f-actin and then then the sedimentation of f-actin performed by centrifuging at 205835g for 60 minutes. The precipitate is transferred to a homogenizer and resuspended with extraction buffer. A 4 day dialysis is performed with extraction buffer additionally containing ATP and DTT to de-polymerize actin. After dialysis the resulting G-actin is clarified with an ultracentrifugation at 200,000g for 60 minutes. After actin is polymerized by adding 10mM Imidazole (pH 7.0) and 1mM MgCl2 and dialyzed against final storage buffer (4mM Imidazole, 25mM KCl, 2mM MgCl2, 1mM NaN3, and 0.01mM ATP at pH 7.0). After calculation of final concentration actin is snap frozen in liquid nitrogen and stored at -80C. After isolation actin can then be labeled with 100% TRITC for use in vitro motility or mixed with a 50:50 TRITC/Biotin solution for use in the three-bead laser trap assay. 3.2 Laser trap assay The laser trap assay was performed as previously described by the Debold Lab (Woodward et al. 2020; Unger and Debold 2019; Longyear, Walcott, and Debold 2017) with special considerations for the expressed myosin V. Single molecules of myosin were adhered to a nitrocellulose coated microscope slide containing 3¬µM glass pedestal beads with an additional coverslip glued on top for construction of a ‚Äúflow-cell‚Äù. The final myosin concentration of ~0.8-1¬µg/mL was added after to introduction of anti-myC antibody (0.8¬µg/mL, Sigma Inc.) which provided a binding interface for the expressed myosin on the surface. Bovine Serum Albumin (BSA) was used to block the remainder of the surface before the addition of final buffer. The final buffer consisted of an actin buffer (91mM KCl, 1mM EGTA, 4mM MgCl2, and 1mM DTT at pH 7.0) mixed with 100¬µM ATP, and an oxygen scavenger system (29mM glucose, 1.5mM glucose oxidase, and 80 units catalase) at pH 7.0. For 30mM Pi experiments KCl was reduced in order to maintain the 125mM total ionic strength to match the control 0mM Pi experiments. The concentration of TRITC/Biotin labelled actin filaments and neutravadin/streptavidin coated 1 micron beads (Bangs Lab Inc) was varied at trappers discretion. Bead-actin-bead ‚Äúdumbbell‚Äù setups were constructed using a three axis piezo controlled state (Mad City Labs) with a time shared laser trap between two positions. Experiments were performed at 1.5 Watts laser power and actin filaments pretension to 3-4pN. The resulting system stiffness of the two laser traps and the pretension across the filaments was 0.04pN/nm, determined via the equipartition method (DUPUIS et al. 1997). Bead position was tracked using a four quadrant photodiode with a sampling rate of 5kHz. 3.2.1 Analysis of laser trap data All of chapter 4 is dedicated to this topic. 3.3 Ultra-fast force clamp The UFFC data was collected under the same experimental conditions and buffers as described in the section 3.2 for the standard laser trap assay, but full length fast skeletal muscle myosin IIx was adhered to the nitrocellulose coated coverslips instead of the myosin V and anti-body combination. Since UFFC is an extension of the standard three-bead assay implementation was similar in regards to setting up a dumbbell. However, in order to increase the speed that the dumbbell was able to move through solution when the force clamp was engaged smaller 510nm beads (Bangs Lab) were coated with neutravidin (31000, Pierce) for use in the UFFC. Decreasing the radius of the beads reduces the Stoke‚Äôs drag coefficient since \\(\\beta=6 \\pi \\eta r\\), where \\(\\beta\\) represents the drag coefficient, \\(\\eta\\) the viscosity of solution, and r is the radius of the bead. Furthermore, the drag coefficient is inversely proportional to the velocity of the dumbbell setup as given by \\(velocity = F_{total}/\\beta\\). The smaller the drag the faster the dumbbell can move. Consequently, the increased velocity of the dumbbell setup in the un-attached state increases the time resolution and signal-to-noise ratio of the resulting data. Force was pre-determined for each experimental condition and set by calculating the bead‚Äôs displacement from the center of the trap and converted to a force since \\(F = -kx\\), where \\(x\\) is the bead‚Äôs displacement and \\(k\\) is the stiffness of the trap. The trap stiffness was similar to the standard laser trap experiments at roughly 0.04 pN/nm calculated by analysis of the power spectrum. Positions of the traps were controlled through the AODs and a custom LabView program. Bead position was collected at 200kHz sampling frequency. The total feedback delay was around 8;micro:s, this is the total time it takes for the computers to detect changes in the beads position relative to the center of the trap, communicate the information, and for the AODs to respond to the changes. Actomyosin interactions in UFFC are identified by applying a threshold the velocity transformation of the raw displacement data that is generated during data collection. The velocity was calculated instantaneously on a point-to-point basis and the results smooth with a Gaussian filter. The velocity transformation results in a double Gaussian distribution with two peaks corresponding to the average velocity of the bound and unbound populations. The bound population velocity is centered around zero because as myosin binds actin and imposes its own stiffness/drag the UFFC will feedback in attempts to apply a consistent force to the dumbbell causing the traps to stop moving. The threshold is set at the point along the joint PDF of the double Gaussian where the probability of crossing the threshold due to noise from the unbound or bound event is equivalent. The threshold was then optimized for each record to decrease the number of false events detected to &lt;1%. If false events exceeded 1%, the SD of the Gaussian filter was increased to further smooth out the data in order to decrease the probability of a baseline noise artifact crossing the threshold. Note that usually smaller SD of the gaussian filters could be applied at great forces due to an increase in force subsequently increasing the signal-to-noise ratio since the baseline velocity is faster to achieve higher forces. Additionally, there is a correction factor that is applied to determine the start and end of the events that is a result of the optimal threshold being closer to the peak of the bound population in the velocity distribution that is a result of the bound population having a narrower peak (smaller SD) since myosin stiffness is greater than the trap stiffness. After event identification, events were ensembled averaged as by synchronizing events in the x and y dimensions by applying linear regressions to the baseline prior to the start of the event (when the bead is moving at constant velocity) and overlaying events at the point where the linear regression intersected the start of the event as ID‚Äôd prior in analysis. The resulting ensembles could be fit with a model consisting of a linear portion that described the delay before the powerstroke and a double exponential reflecting the kinetics/mechanics of myosin going through the first and second powerstroke. Ensemble averages are typically calculated separately for the three populations of event durations that are prevelant in UFFC experiments (short, intermediate, and long) since these events represent different mechanochemical schemes of an actomyosin interaction. "],["lasertrapr-a-computational-tool-for-automating-the-analysis-of-laser-trap-data.html", "4 lasertrapr: a computational tool for automating the analysis of laser trap data 4.1 Introduction 4.2 Results &amp; Discussion 4.3 User Manual", " 4 lasertrapr: a computational tool for automating the analysis of laser trap data 4.1 Introduction The laser trap (or optical tweezers) has been revolutionary to the field of single molecule biophysics. Originally developed by Arthur Ashkin of Bell Laboratories (Ashkin 1986) the laser trap was eventually adopted by biologists to study the interactions of single molecular motors (e.g.¬†myosin, kinesin, dynein) with their molecular tracks (e.g.¬†actin, microtubules) by use of a three-bead assay (Finer, Simmons, and Spudich 1994; Kojima et al. 1997). These experiments permit researchers the ability to observe the interaction of two proteins within a millisecond-time and nanometer-spatial resolution providing unprecedented insight into the molecular machinery underlying a wide variety of biological functions including muscle contraction, intracellular cargo transport, and cell-division. Such experiments need to be performed with a low trap stiffness (0.02-0.04 pN/nm) as to not hinder the function or harm the integrity of the experimental proteins or setup. Since the position of a trapped bead is largely dominated by Brownian forces, a bead stuck in a trap with low stiffness has a large variance in its displacement signal as trap stiffness (\\(\\alpha\\)trap) is inversely proportional to the variance (\\(\\sigma\\)2) of the displacement signal (via the Equipartition Theorem) Svoboda and Block (1994). \\[ \\alpha_{trap} = \\frac{ k_B T_k } { \\sigma^2 } \\] where kB is the Boltzmann constant and Tk the temperature in Kelvin. The high variance of the baseline displacement signal combined with the dampening effects of viscous drag forces masks the underlying mechanics of the two proteins interacting and cycling through a mechanochemical scheme that is common amongst biological motors used in these assays which makes the analytical task of identifying these events of interests quite challenging. The variance of the displacement signal is a crucially important feature of single molecule laser trap data as the variance can be exploited to determine when protein interactions do occur. Since the biological motors used in these experiments are stiffer than the trapping laser, the interaction of the proteins can be characterized by a decrease in signal variance of the time series (position over time) signal, via Eq 1, which is also often accompanied by a displacement from the mean baseline position as in the case of a biological motor, like myosin, attaching to an actin filament and performing a powerstroke. In some cases, the signal-to-noise ratio of the baseline and event populations variance can exceed 2:1 which makes these interaction events readily discernible ‚Äúby-eye‚Äù. However, while simple and easy, the analysis of data ‚Äúby-eye‚Äù has been criticized in the past as this method was suggested to introduce subjectivity via user bias as evidenced by early inaccurate estimations of myosin‚Äôs displacement size (Finer, Simmons, and Spudich 1994; J. E. Molloy et al. 1995b). This exemplifies the fact that while the laser trap is a powerful and advanced scientific instrument, the reliability and accuracy of the information that can be extracted from the resulting data is limited by the validity of the techniques and programs used to analyze the data. While there are numerous techniques that can be used to identify binding events, a common theme between them is that most require advanced computer programming knowledge to implement. This is then compounded with a need to then automate those scripts by a preferential creation of user-friendly graphical user interfaces (GUIs). For most, the advanced computer skills required to build sophisticated analysis programs with GUIs are taught in classes that are not degree requirements for graduate students or researchers seeking degrees in many biology-related fields. This presents a technological barrier that hinders progress in understanding and interpretation of data for new students and researchers, and an additional monetary cost barrier is added to a laboratory if the creation of custom program must be outsourced. And, even in these situations then a research group is left with an custom and un-supported ‚Äúblack-box‚Äù program. Unfortunately, there are currently no completely open-source projects whose primary aim is to automate the workflow of analyzing laser trap data (calibrations, processing, event identification, ensemble average, and summarizing statistics) written with an open-sourced programming language. Although it should be noted there have been recent publications of programs aimed at single molecule event identification, most notably the MATLAB based SPASM (Software for Precise Analysis of Single Molecules, Blackwell et al. (2021)). However, while SPASM itself is an open-source program, the underlying MATLAB language is proprietary/closed source language and has a steep financial barrier (currently a standard MATLAB license has an annual fee of $860 per their website at the time of writing). Here, we present {lasertrapr}, and open-source program for automating the analysis of laser trap data written in R, a free and open-source programming language (hence lasertrapr = laser trap + R; also note that it is common in the R-community to denote R-packages with {}). The tool has an easy-to-use GUI provided by the R-Shiny web-framework package. One of the main benefits of having a tool built with R/Shiny (R Core Team 2022; Chang et al. 2021) is that there is high portability of the app across different operating systems as it can be installed on Windows, MacOS, and Linux systems. Additionally, we do not view our application as a replacement or competitor to a program such as SPASM, but as an additional tool made available to the biophysics community that has some similar features (single molecule event identification and ensemble averaging) but for distinct data types (SPASM‚Äôs main event identification is built for 2 QPD systems using co-variance of bead position whereas our is for a 1 QPD system). Furthermore, {lasertrapr} fully embodies the notion of a free and open-source project whose main goal is automation and reproducibility of the entire workflow of analyzing laser trap data which includes folder/file creation and organization, signal calibrations, data cleaning and preparation, event identification of both single molecule and mini-ensemble data, ensemble averaging, generation of complete project summary statistics, and creation of publication quality figures. Lastly, the co-existence of multiple programs will only benefit the biophysics community by enabling researchers the ability to contribute to and use an analysis program best suited for their interests and experimental setups. 4.2 Results &amp; Discussion The following Results &amp; Discussion serves as both a validation of the app and provides example use cases of what can be accomplished within the app. The paper presented in Chapter 5 was analyzed completely with this app so the present chapter‚Äôs aim is to provide evidence that the app provides a reproducible, precise, and accurate analysis tool. While reading this section if you decide that you really like the app and would like to try it yourself, there is a user-guide and complete documentation on how to install and use the app available on the app‚Äôs website https://lasertrapr.app/ including example videos. The documentation is also included in section 4.3. Additionally, the project can be found on Github at https://github.com/brentscott93/lasertrapr. 4.2.1 Single Molecule Analysis Validation: Simple One of the main features of the app pertains to the analysis of single molecule laser trap data. Here, we will validate the single molecule analyzer that is based on a combination Hidden-Markov Model + Changepoint analysis. The full details of the analysis are provided in section 4.2.7 which walks through the actual single molecule analysis line-by-line. These tests will verify that the app can identify actomyosin binding events using simulated data which provide ideal and known conditions. In thie first simulation, every event has a 5nm displacement and 100ms attachment time. The single baseline-event-baseline data set is shown in Figure 4.1. A simulated laser trap event. The event has 200ms of baseline preceeding a 5nm displacement that lasts for 100ms. Another 200ms of baseline data is appended after the displacement. This exact sequence was replicated and concatenated together 200 times which yields a data trace with 200 simulated binding events that are spaced 400ms a part. The exact simulated measurements are: 5nm displacement, 100ms attachment times, and 400ms time between events. The 200 event simulation was analyzed to test the number of events the analysis could detect out of the original 200 created. One of the features of the app is that after the analysis it takes the original raw/simulated trapping data and ‚Äúoverlays‚Äù the analysis results on-top of the original data so the user can compare/check how the analyzer is performing. A screenshot of the results of the analysis provided by the app is shown in Figure 4.2. If you were using the app the figure displayed in Figure 4.2 would be an interactive graph that would allow you as a user interactive abilities to pan across the data and the analysis. This feature allows the user to become more familiar with their data and the app‚Äôs output. Screenshot of the output from the single molecule analysis produced by lasertrapr. Black lines is the original trap trace, the green line signifies the results of the hidden markov model performed on the running window transormation, and the yellow highlights is the final results after changepoint is applied. The output of app‚Äôs estimation of the displacement and attachment time for the 200 event simulation is shown in Table 4.1. The results show that the analysis correctly identifies and measures single molecule binding events. The app estimated a 5.1nm displacement and 99.8ms attachment time which accurately represents the known simulated values of 5nm and 100ms. Indeed, the 400ms time between events is also the same as the simulation input. Table 4.1: App correctly identified the dispalcement size, attachment times. and time betweeen events displacement_avg time_on_avg time_off_avg 5.109922 99.8 400.0251 4.2.2 Single Molecule Analysis Validation: Adding Complexity 4.2.2.1 Simulating displacement distributions Adding complexity to the simulations creates more realistic datasets that allows for more robust testing and assurance in the precision and accuracy of the program. In the previous data example, every event had the same exact displacement and attachment time. Here we simulate displacement distributions which more accurately represents how real single molecule data would be collected. Since each displacement in the trap is the summation of the displacement caused by myosin‚Äôs powerstroke and that of random brownian noise, displacement data in the single molecule laser trap have been shown to be normally distributed with a mean displacement equivalent to myosin‚Äôs powerstroke size and standard deviation that is dependent on the trap stiffness (J. E. Molloy et al. (1995b)). Four datasets were simulated whose event population had displacements generated from four distinct Gaussian distributions whose mean values were 0, 5, 10, and 15nm, respectively. Being able to detect 0nm displacement events was an important test to conduct considering the possibility for the ‚Äúslow mouse‚Äù S217A mutation to actually have a small or even no displacement as described in Chapter 1 within Aim 2. The data was analyzed with the single molecule analyzer within the app and summarized in Figure 4.3. The app‚Äôs estimated average displacement was modeled against the actual average displacement of the Gaussian distributions that generated the data and fit with a linear regression. The coefficient of determination (R2) is 0.99 indicating that the analysis is able to accurately predict average displacements across a wide range of distances. Additionally, out of a total of 4000 simulated events the app identified 3997 which is a 99.925% detection rate for these simulations. Figure 4.1: Four simulations were performed with average dispalcements of 0, 5, 10, and 15nm. a) Simulated data traces. Top trace has 0nm average displacement. Bottom has a 15nm average displacement. b) Linear regression of the actual displacement (x-axis) versus the analysis estimated displacement size (y-axis) demonstrating a near perfect correlation. c) Full gaussian distributions of the analyzer‚Äôs estimated displacement for each of the 4 simulations. 4.2.2.2 Simulating attachment time distributions In similar fashion to the displacement distributions, the attachment lifetimes for each myosin binding event is not the exact same for each interaction. The total event population for myosin‚Äôs attachment time is exponentially distributed, so we simulated additional data where we defined exponential distributions to generate total attachment times from for each event. Truncated exponential distributions were used in order to more easily generate data that would be confined to the needs of the simulations. For example, in the case of an exponential distribution and as the the PDF suggests, the smallest numbers are the most probable to generate upon random sampling. However, when simulating data we are confined to defining time in terms of datapoints per the sampling frequency. To avoid randomly generating infinitely small ADP-release/ATP-binding rates, which define the total attachment lifetimes, the exponentials are truncated at a minimum of 1 or more milliseconds. Additionally, a truncation of minimum attachment-times also increases the assurance that if we generate 100 events the simulator will actually simulate 100 observable and detectable events. For these sets of simulations, the rates supplied to the exponential distributions represent the average attachment lifetime of the population since for a given exponential distribution the arithmetic mean (expected value) is equivalent to the reciprocal of the decay rate \\[ E[x] = 1/\\lambda \\]. Drawing a random value from each distribution yields the length of time that the attachment time should be to for a given event. Each distribution shown below reflect 10,0000 random draws from a respective distribution whose rate are 20, 10, 5, 1 with lower bounds of 0.02, 0.02, 0.02, 0.02 and upper bounds of 0.3, 1.856, 1.856, 3. As shown in Figure 4.4, decreasing the rate increases increases the time values that can be generated which results in longer attachment times. Furthermore, panel C represents exponential distribution with the same rates used except panel C is not-truncated. The distributions in panel C further display the use-case for truncating the data to make more economical (i.e.¬†smaller file sizes) as it is an attempt to to avoid excruciatingly long attachment/detachment times when the rate constant is 1. For these simulations, the ATP binding rate was set to take 1ms (5 data points) on average, so its attachment time contributions can largely be ignored which made the comparisons easier. This would be analogous to conducting experiments at a very high ATP concentration (&gt;1mM). Essentially as soon as ADP is released a new ATP is readily nearby and instantaneously can bind to myosin‚Äôs active site causing a detachment. Figure 4.2: Simulated truncated (a &amp; b) exponential distributions that are representative to the ones used to generate the simualted data The data was analyzed with the single molecule analyzer where the attachment lifetimes were estimated by the app and then compared to the true values set in the simulations. Since truncated exponential distributions were used, the average attachment time is not as simple as taking the reciprocal of the decay rate. To get an estimate of the possible true rate/attachment times generated from the truncated distributions, 10 rounds of 10,000 random draws from the truncated distributions were generated. For each 1 set that contained 10,000 random draws the average was recorded (0.068759, 0.0693254, 0.0696117, 0.068123, 0.0689889, 0.0690398, 0.0698608, 0.0693016, 0.0689494, 0.0684859) and then those averages were averaged together to be compared against the mean attachment time as estimated from the app. The estimated attachment lifetimes were modeled against the known/true values, and fit with a linear regression. The coefficient of determination (R2) is 1 indicating that the analysis can accurately estimate attachment lifetimes for a wide variety of time periods indicating that the app/analysis should be able to be applied to a wide variety of myosin/molecular motors with differing ADP release rates and even under experiments at higher ATP conditions which decreases the attachment times. Figure 4.3: Four simulations were performed with average attachment lifetimes of 50 4.2.2.3 Short Events To further test the single molecule analyzer and test the limitations of reliable event detection a dataset was simulated with very short attachment times (~20ms average). The window width of the HM-Model was decreased to 100 datapoints making the event more readily detectable. Figure 4.6 shows the identified event in this short event simulation The data was simulated, analyzed and even Figure 4.5 was generated from within the app with the built-in ‚Äúscreenshot‚Äù tool which makes saving snippets of analyzed traces easy and provides color coding of identified events free of charge. Figure 4.4: Simulated data trace with very short events. Measured attachment times for the 3 ID‚Äôd events in the trace are 18, 15, and 32ms. Plot is interactive online. Grid lines represent 1s and 2nm intervals. 4.2.3 Accuracy of determining beginning and end of events The single molecule analyzer built using the HM-Model/Changepoint analysis will estimate the start or end of event by returning the exact datapoint in the original raw trace that the analyzer chooses as the most probable start/end for each event. We can compare the app‚Äôs estimation of the start/stop of each event with the true start/stop datapoint at which the event begins/ends by using a simulated data trace as the information about the exact datapoint that the event starts/ends is truly known by the simulation. Figure 4.6 shows the average/median number of datapoints that the estimation differs from the known values and the estimated values. Each histogram is inset with a cumulative distribution. In Panel A, the cumulative distribution for the start of the events can be interpreted as ~75% events are being chosen within 2ms (10 datapoints) of the true starting datapoint. The table in panel ‚ÄúC‚Äù of Figure 4.7 shows the values of the misalignment calculations which were calculated by subtracting the datapoint index of the true start/end of each event (a known value from the simulations) from the app‚Äôs estimation of the start/end of the event (i.e.¬†startapp - starttrue). If the value of the misalignment is negative this would indicate that the app‚Äôs estimation of the start/end datapoint index tended to be a smaller number than the true value. This would mean that the app tends to start the event early and that the app is estimating the event to start before the event known start occurs. Looking at the comparison of the event start, the distribution appears to be more exponentially distributed than normal so the median value may have a more appropriate value of to describe the data with. The median has a value of -3, which indicates that 50% of the events are misaligned within the range of -3 datapoints to the maximum misalignment +8 At 5000Hz sampling frequency this is -600 microseconds to 1.6 milliseconds. Comparison of the end of event misalignment calculations, the median value is -2 datapoints, indicating that 50% of the events are misaligned between the minimum value of -8 datapoints and the median value of -2 datapoints. Converting into the time domain with a 5000 Hz sampling frequency these misalignment calculation indicate the app is terminating the events early by -1.8 milliseconds to -400 microseconds. The few larger misalignment values where the app estimates the events to end after the true stop seem to be skewing the average to a positive value, but indeed for the majority of events, the app is estimating the end of each event to be slightly before the true end as evidenced by the median value and the cumulative distributions in panel ‚ÄúC‚Äù of Figure 4.6. Figure 4.5: Analysis of the misalignment in the true start/end of an event and the analysis estimated start/end of an event. a) About 75% of the start of events are picked within several datapoints. b) The ends of events are mostly picked with a couple data point error. c) A table showing the average or median number of datapoints that the analysis missed the start or end of an event by. 4.2.4 Ensemble Averaging Conceptually this process is simple, as the final step is just a mathematical average of data points. However, the process of wrangling your data to get to the final averaging step is challenging. Ensemble averaging in general is discussed in the literature review in Chapter 2, and here we will stick to the discussion of ensemble averaging in regards to the app and how it implements the technique. The main question addressed in Chapter 5 using the ‚Äúslow mouse‚Äù S217A mutation that slows Pi-release was a major motivating factor to start building single molecule event identification programs that would then permit the ability to perform ensemble averaging since prior to the start of the project we were unsure what the effects of the mutation would be, or how the severe the effects would manifest. First analysis attempts for the data was made using the Mean-Variance analysis as described in Chapter 2. However, MV would only be able to estimate a displacement distribution in attempts to see if the mutation would alter myosin‚Äôs overall displacement. This is important to note because there could be no change in the total displacement, but still the transition rate could be changed between the unbound-to-bound populations. This question was un-testable with MV since it provides a single global displacement estimate for a raw trace, which highlighted the importance of needing the ability to ensemble average the data. 4.2.4.1 First attempts We performed ensemble averaging for Gunther et al. (2020) which was a study prior to Scott-Marang 2021 where in a collaborated effort with the Yengo &amp; Thomas Lab we performed a wide variety of biophysical characterization of the ‚Äúslow mouse‚Äù S217A mutant. The ensemble averaging for this was slightly different from previous published ensemble averages, in part because we were wanting to focus/address one specific question - does S217A slow the unbound-to-bound transition? Some major differences in ensemble averaging technique that deviated from prior work was that only the first 60ms of all each event were included, only positive displacement events were included, and we only looked at the forwards ensembles. Additionally, ensembles were fit with a single exponential that started from the origin (0,0). Figure 4.8 shows the ensembles from Gunther et al. (2020) the following is part of the methods providing further details: ‚ÄúThe ensemble averaged events are 60 ms long and only include events that had positive displacements. Events meeting the inclusion criteria had the back 30% of their lengths removed in preparation for event alignment. The changepoint analysis provided a new relative time index for the start of each event, and as a result the events could universally be reindexed with the same relative time scale. The first data point in each event was indexed as dp0, and thus each event was indexed as {dp0, dp1,. . ., dpn}, where dpn represents either the 300th data point (dp299) in the event (corresponding to the first 60 ms of a longer event) or the last data point of a shorter event (dp299). For short events less than 60 ms in which dpn &lt;= dp299, the average displacement of the event was used to extend the event to length dp299. Events were then aligned horizontally at dp0, and all matching dpx values were averaged together to create the final ensemble. The average ensembles were then fit with a negative mono-exponential equation using the {drc} and {aomisc} R packages to provide estimates of the rate of the working stroke and plot with the {ggplot2} and {cowplot} R packages. Additional programming tools used for building the analysis programs include the {gtools}, {pracma}, and {tidyverse} packages.‚Äù Ensemble averages created for Gunther 2020. Blue is WT mysoin. Red is the S217A mutation. All data collected at pH 7.0 and 0mM-Pi. Raw traces are inset and ensembles are fit a with single exponential. The major conclusion from the ensembles averages in Gunther et al. (2020) was that the mutation did not have a slowed transition from unbound-to-bound compared to the WT (629 vs 867 s-1) at 0mM-Pi concentration. If anything the mutation was slightly faster, which in hindsight was due to the fact that the exponential was fit to the initial transition which included some additional data after the completion of the powerstroke. S217A was shown to have a 2x fold faster ADP-release rate in Gunther et al. (2020) from solution kinetic studies, which coincidentally explains the faster attachments times we saw in this paper for the mutation. This faster ADP-release rate would also manifest in the hitch occurring sooner as compared to the WT. In the case of these forwards ensemble averages, the exponential rate most likely reflect the rate of the initial transition plus some of the rate at which the hitch occurs. The S217A would have a higher percentage of events that would have been able to complete their hitch compared to the WT within the first 60ms. This is reflected in the slightly higher rate of the fit, but this would have no bearings/effects in regards to the validity of the analysis in answering the primary question. 4.2.5 Testing the Ensemble Averager As described and shown in previous sections, the {lasertrapr} app has an analyzer for identifying events in single molecule laser trapping data. This analyzer determines the exact data point where an actomyosin binding event begins and the exact data point where the binding event terminates. With this information we can ‚Äútemporally synchronize‚Äù the events and average them together to create ensembles that represent the average response of the binding interactions. A simple example of the process of the ensemble alignment procedure can simply explained with two theoretical events. Say we have two events that were both exactly 200ms, one event takes place from datapoints 5000-5999 and the other from datapoints 20,000-20,999. These datapoint indices would be returned by the analyzer as the respective beginning and ends of the events. They are both 1000 data points long making them 200ms long (assuming a sampling frequency of 5000 Hz). To average these events together, we need to ‚Äútemporally synchronize‚Äù the events. In the laser trap, the collected data we obtain is a time-series (the position of the bead is recorded over time) and the events occur at differing points in time as in the example (datapoint 5000 vs datapoint 20,000). Knowing the datapoint indices of where each event‚Äôs respective start occurs in time, datapoint 5000 for event 1 and datapoint 20,000 for event 2, the events can be subset out of the original raw trace, re-scaled, and placed on similar relative time scale. Meaning the start of event 1, datapoint 5000, becomes datapoint 0 and the last datapoint of event 1, datapoint 5999, becomes datapoint 999. We still have a 200ms long event which contain the same y-axis position values, just the x-axis values changed relative to the start of the event. This same procedure is performed with the second event. Datapoint 20,0000 becomes datapoint 0. Datapoint 20,999 becomes datapoint 999. Now we have 2 events with the same relative time scale. Now we can average the y-value associated with time 0 from event 1 with the y-value associated with time 0 from event 2 together, etc. This will create a new event that represents the average of the two. This same procudure can then be performed with how every many events are occurring in the datasets for each condition. What makes this is a little trickier than the above example is that every event is not the same length in time. While the above example provided a discussion on the average of two events of 1000 datapoints together, how could two events be averaged if one event was 1 second long and other was 200ms? During the alignment procedure the events need to be both 1) temporally synchronized starting at time 0, and 2) extended to the same length. Now in the case of 2 events that are 200ms and 1 second long, the 200ms event will be extended by 800ms. This can be accomplished by taking the average of the last few milliseconds of data within the event (datapoints 900-999) and obtain the average position value which can then be used to ‚Äúextend‚Äù the event to 1 second long. Extending an event is adding/repeating data to the event to make it longer in time. So if the average y-value of the last 2 milliseconds of the forward ensemble of event 2 is 6.7nm. Then that value (6.7) is added 4000 times to the event 1 data to result in having 2 events that are both 1 second long (assuming 5000hz, 1 second is 5000 datapoint, 200ms is 1000 datapoints and so 5000-1000 = 4000 datapoints). The events can then be averaged together as described previously. {lasertrapr} has the functionality to create ensemble averages which includes auto-generated plots and a choice of a single, double, or no exponential fits to the data. In order to test the accuracy of the app in the construction of ensemble averages two distinct datasets were simulated. In one data set, every event had exactly a 4nm step size with an accompanying 2nm hitch while the other has a 7nm step with a 3nm hitch (plus brownian noise). No displacement distribution were simulated, every event was a positive 4 or 7nm. Both the ATP and ADP binding rates were 10 set at 10s-1 for the 4+2 group and 5s-1 for the 7+3 simulations. Making the ensembles in the app is a three part process. The first step is creating the ensembles, averaging/fitting, and plotting. The app allows some user selection in creating the ensembles in regards to selecting a time period to extend the events forwards/backwards. Care needs to be taken when extending the backwards ensembles as this process can be a little tricky. The single molecule analysis classifies the transition into an even as part of the event. Since each event is a summation of myosin‚Äôs powerstroke (d1, 6nm) and hitch (d2, 2nm) then the total displacement would be 8nm (dtotal). If you took the average position of the first 1ms, the average would reflect the transition from unbound to bound, and would results in extending backwards in time with a value that would be smaller than d1 (6nm). This would cause an accidental inflation of the size of the hitch in the backwards ensemble. To properly extend the backwards ensemble you need to average the true post-powerstroke, pre-hitch displacement, The d1 state. In the app this is accomplished by ‚Äúskipping‚Äù into the event before averaging the position. Extending the forwards ensembles is more straightforward since the single molecule analyzer does not tend to classify the transition back to baseline as part of the event. The last datapoint that signifies the end of the event in the analysis tends to be at peak displacement, so the app averages the last few milliseconds prior to this datapoint to represent the d2 post-hitch displacement to extend forward in time. The one consideration to keep in mind when extending forward is to be diligent of the ATP concentration that were used in the experiments and/or the ATP affinity of the motor used. At infinitely high ATP concentrations with a motor with an infinitely high ATP affinity creating an ensemble average perhaps may not be possible. Assuming that the hitch accompanies ADP-release, the rigor state would then be infinitely short/undetectable because the motor would spend too little of time at the post-hitch d2 final displacement segment. This would most likely result in being unable to properly extend forward the events because there would no d2 datapoint to average/extend. The extension would be from the d1 displacement which would create a forward ensemble that would appear to have no hitch solely because there would be no data to properly create the ensembles with. The resulting ensemble averages of the simulated data are shown in Figure 4.9. The analysis was able to estimate a 3.7nm step and 2.3nm hitch for the 4+2 conditions, and a 6.9nm step and 3.2nm hitch was estimated for the 7+3 conditions. Note that the estimations of the d1 and d2 values are coming from the double exponential fits to the forwards ensmebles. The unbound/bound transition is simulated as occurring instantaneously in the app‚Äôs simulator so the initial transition rate is quite fast (&gt;500/s) which reflects what would be seen in real data which where that rate is also usually around 500/s and is dependent on the corner frequency of the instrument reflecting the average rate of a bead being damped by viscous drag forces. Interestingly, the rates of k1 which are associated with the rate of ADP release closely match the rates that were input into the simulations. The double exponential fits to the forwards ensembles estimate a rate of 13/s where the value of 10/s was input as the rate of ADP release of the 4+2 conditions, whereas the fits estimated an ADP release rate (k1) as 6/s for the 7+3 conditions and 5/s was the rate input. The backwards ensembles are always fit with a single exponential which also estimates the d1 and d2 values from the fit parameters along with the rate of k2 which is generally attributed to the ATP binding constant. For these simulations the ATP binding constants were set at 10/s and 5/s for the 4+2 and 7+3 conditions respectively and the single exponential fits to the backwards ensembles estimated these rates to be 7.4/s and 5.0/s. Figure 4.6: Ensmebles averages of the simulated datasets for validation. The tables show values from the fits that closely correspond to the true values. 4.2.6 Mini-Ensemble Analyzer An additional feature of the {lasertrapr} app is the ability to analyze mini-ensemble laser trap data. The mini-ensemble assay is the exact same assay as described for these studies performed for this dissertation in Chapter 5 except with more myosin on the surface. In the mini-ensemble laser trap assay multiple myosin heads can interact/bind to a single actin filament causing rapid displacement, or ‚Äúruns‚Äù. This assay displays the ability of a team of molecule motors to create larger ensemble forces when allowed to work together. The mini-ensemble analyzer in the app was a recreation of prior published work from the lab (Longyear, Walcott, and Debold (2017)). Briefly, raw data is low-pass filtered using a running mean with a window width that can be variably set by the user (typically ~10 ms, 50 data points at the sampling rate of 5kHz). Events are then identified using two criteria: 1) a user defined displacement threshold is set to the running mean to signal the start or end of an event, and 2) the event meets/exceeds a minimum defined attachment time. Attachment duration can then be calculated as the time between the start and end displacement thresholds. The time between events can be calculated as the time between the end of an event and the start of the subsequent event. Peak forces can be estimated by by identifying the maximal displacement of each record and converting the displacement into forces, by multiplying the peak displacement by the combined trap stiffnesses. An early output plot from the mini-ensemble analyzer. The plots are now scrollable/interactive, but this serves as a fun reminder of where the app began in its infancy years prior to its creation. This analyzer was used in Woodward et al. (2020) to compare the effects of an abiotic triposphate compound that was altering myosin‚Äôs behavior. The data analysis helped provide invaluable insight into understanding the mechanisms of the decreased force producing capabilities of myosin when it used the ATP alternative compound as substrate. Image from Woodward et al. (2020) showcasing the mini-ensemble analyzer that is now a core feature within the app. 4.2.7 Single Molecule Event Identification (step-by-step) This is a ‚Äústep-by-step‚Äù walk through of the Hidden-Markov/Changepoint Analysis we use to analyze our single molecule laser trap data and includes everything on the journey from raw data to analyzed trace and everything on the way‚Ä¶buckle up. This section is a lot cooler if you are reading online and includes the R code to reproduce this by hand. You can download the data here 4.2.7.1 Raw data Here is a raw data trace. This is unprocessed data as-is from the trap computer. The data is relative position of the bead in mV over time: Figure 4.7: Raw trap data. The data record is 89.1576 seconds long and has an average position of 6.2968527 mV. 4.2.7.2 Processed Data The first step of the analysis is removing the ‚Äúbaseline‚Äù by centering the mean around 0. This can either be done by simply subtracting the baseline mean from every data point or by performing a piecewise linear detrend on the whole record. The latter accomplishes two things: 1) Centers mean around 0 and 2) removes any drift (i.e.¬†wander correction). Additionally, in the {lasertrapr} app you can find the average baseline position by using a mean variance transformation of the data to select the baseline population or by selecting a quiescent period of the data where no binding events occur to calculate mean baseline position. Here we will detrend the data and convert from mV to nm using a ‚ÄúStep Calibration‚Äù. The step calibration is performed by moving the microscope stage a known distance, say 200 nanometers, and measuring the resulting change in the mV signal. We then can estimate the number of nanometers per mV. Figure 4.8: Example of a step calibration. Stage was moved 200nm The mV-to-nm conversion calibrated around the time this data trace collecting we are analyzing know was 30 nm/mV. We can convert our raw data from mV to nm and detrend the data (or visa versa). Figure 4.9: Example of processed trap data 4.2.7.3 Running Mean &amp; Variance Running Mean &amp; Variance The next step is to transform the data for the HM-Model by calculating both the running mean and variance of the data trace. This analysis uses a 150 datapoint window that advances by sliding 75 data points each time (half the window width). This is done to decrease the correlation between neighboring windows: Figure 4.10: Interactive graphs of the running mean and variance Additionally, we can plot these datasets against each other to see the mean vs.¬†variance for each window: Figure 4.11: Mean/Variance Plot 4.2.7.4 Hidden-Markov Model The data is now ready to have events identified with a Hidden-Markov Model. We first need to initialize the model with guesses of the initial state probabilities and the transition probabilities for our 2-state model. State 1 is when myosin is unattached from actin and state 2 is attached. We need to guess 6 different numbers. Probability of initially starting in state 1 Probability of initially starting in state 2 Transition probability from going from state 1 to state 1 Transition probability from going from state 1 to state 2 Transition probability from going from state 2 to state 1 Transition probability from going from state 2 to state 2 I prep the data so it usually always start with baseline (i.e.¬†state 1) or will trim it so the trace does though 99.9% this just occurs so we will give guess that 98% probability of starting in State 1. Probability of starting in state 2 is then 1 - [Prob. S2] = -.02. I then assume that these are both stable states and that there is a high probability of tranisitioning from state 1 to state 1 or state 2 to state 2. By the same logic above the transition probabilites are guess and our 6 probabilities above are: ## [1] 0.98 0.02 0.98 0.02 0.02 0.98 We will also have to make guesses of the statistical characteristics of the 4 underlying Gaussian distributions (2 states for each the running mean and running variance). To do this we will estimate the mean and standard deviation of each of the Gaussian. The 8 numbers that follow are: Guess for the mean of the variance for State 1. -calculated by taking the mean of the running variance Guess for the sd of variance for State 1 -calculated by the taking the sd of the running variance Guess for the mean of mean for State 1 -hard coding to 0 because we centered baseline around 0 when we processed the data. Guess for the sd of mean for State 1 -calculated by taking the sd of running mean Guess for the mean of variance for State 2 -estimated as half the value as state 1 (signal-to-noise 2:1) Guess for the sd of variance for State 2 -#2/2 because of stiffer system when myosin attached Guess for the mean of mean for State 2 -hard coded at 5nm (estimated size of the powerstroke) Guess for the sd of mean for State 2 -coded as twice #4 since there will be positive and negative displacements ## [1] 101.69 45.56 0.00 6.47 50.85 22.78 ## [7] 5.00 6.47 Once we estimate the starting point the model can be fit. The HM-Model will optimize all the parameters we just defined using the Expectation-Maximization (EM) Algorithm. The resulting model summary (Re1. = ‚ÄúResponse 1‚Äù and is the variance signal while Re2. = ‚ÄúResponse 2‚Äù and is the mean signal): ## converged at iteration 12 with logLik: -47137.21 ## Initial state probabilities model ## pr1 pr2 ## 1 0 ## ## Transition matrix ## toS1 toS2 ## fromS1 0.974 0.026 ## fromS2 0.180 0.820 ## ## Response parameters ## Resp 1 : gaussian ## Resp 2 : gaussian ## Re1.(Intercept) Re1.sd Re2.(Intercept) Re2.sd ## St1 113.302 36.224 -0.758 3.950 ## St2 22.375 8.612 5.185 13.816 Starting from the first line in the summary we can see that the model gives a 100% probability that this record starts in baseline (state 1). The transition matrix is straightforward to read and these probabilities could also be used as estimates of on/off rates although currently we have not been using these. Lastly, the ‚Äúresponse parameters‚Äù are the optimized characteristics of the Gaussian distributions describing each of the state 1 and state 2 normal distribution for both the mean and variance signal. The results are that the variance distribution for state 1 has a mean of 113 (SD of 36) and state 2 has a variance of 22 (SD of 8). This gives a signal to noise of a little more than 5:1 in the variance signal. Furthermore, the baseline mean has a mean of -0.7 (SD of 4) and state 2 mean is 5.1 (SD of 13). Now knowing these parameters we can extract the most probable state sequence through the trace via the Viterbi Alogorithm. Here is a table of the posterior states (columns are state = viterbi state, S1 &amp; S2 are the delta probabilities of being in each state): state S1 S2 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 We can now construct another Mean/Variance plot using the running window transformation and this time color code the windows by State: Figure 4.12: Mean/Variance Plot colored by State Now that we have events identified we can extract useful information from the data and estimate the displacements, attachment times, and time between events. 4.2.7.5 Measure Events The HM-Model state sequence decoding assigns every running window a 1 or a 2 describing the state that the window most likely belongs to. So all we are given is a long list of a 1-2 indicator that is the same length as our running mean/variances. We need to calculate the number of 1‚Äôs and 2‚Äôs that occur in a row and then calculate the cumulative sum of these ‚Äòin-a-row‚Äô counts to get the indices of when the events start/stop in running window time. Here is the number of 1‚Äôs and 2‚Äôs that occur in a row. lengths values 8 1 12 2 16 1 10 2 5 1 12 2 The table can be read that the raw trace starts with 8 windows of state 1 baseline noise followed by 12 windows of a state 2 event etc. On times in milliseconds can be estimated by taking those state 2 ‚Äòin-a-row‚Äô lengths and converting them to 5kHz time and then to ms. The conversion from window time to 5kHz can be calculated by the dividing the length of the raw/processed data by the length of the resulting running mean/var calculations: ## The conversion between raw data and running windows is 75 This also works out to be the advancing window sliding distance in the running mean/var calculations. Estimating on-times is then straightforward. Multiply state 2 ‚Äòin-a-row‚Äô length by the conversion and then divide by sampling frequency (5000) to get into seconds and multiplied by 1000 for ms. The same idea can be applied to the state 1 baseline to get the off times. In the process the first and last off-times are excluded because in reality we do not know when the last event before our first recorded event actually occurred. Additionally, the last baseline/state 1 ends because we stop recording so that is also not a true measure. Here is the table of on/off times: n_event hmm_state num_windows length_5kHz time_on_ms time_off_ms 1 2 12 900.27869 180.05574 NA 2 2 10 750.23225 150.04645 240.07432 3 2 12 900.27869 180.05574 75.02322 4 2 11 825.25547 165.05109 180.05574 5 2 1 75.02322 15.00464 630.19509 6 2 27 2025.62706 405.12541 120.03716 In this table the time_off_ms column refers to the off time that occurred prior to the event. Moving along and to make this information more helpful in being able to really ID where the events are stopping and starting we can take the cumulative sum of these ‚Äòin-a-row‚Äô lengths that will give us the running window indices of the start/stop of the events. This will help us chunk out the events to measure step sizes. After calculating the cumulative sum of the ‚Äòin-a-row‚Äô lengths we can make a new table with 2 columns. One column state_1_end indicating the window which is the last window in a series of baseline and a state_2_end column that is the last window of an event series. state_1_end state_2_end 8 20 36 46 51 63 75 86 128 129 137 164 The result is the running window indices of the window before the event starts and the window that ends the event. By adding one (+1) to the state_1_end value we get the index of the start of each event. ## So the first event is between indices 9 and 20 We can estimate the step size from the running windowed data. To get the step size we find the position of the running window with the greatest absolute value and take its real value. Finding the index of the window with the greatest absolute value let‚Äôs us also find the peak of negative events more accurately than just taking the max right off the bat. Now this would give us step size estimates since we already processed the data to be centered around 0. However, our baseline signal does not always return to 0 after an event. To get a more precise estimate of our step sizes by the same logic we can calculate the average of the baseline noise prior to each event and then subtract the step size estimate from the baseline prior to the event. This results in a table giving the mean of the baseline before each event (avg_s1), the estimated step size (avg_s2), and the differences between the 2 (diff) representing the final step size the program reports for each event. avg_s1 avg_s2 diff -9.2145628 -12.734709 -3.520146 -6.9028608 -3.127884 3.774977 -0.6201406 18.654526 19.274667 -4.1346721 14.146184 18.280856 -4.5201374 17.046019 21.566157 -0.9125085 21.452987 22.365496 4.2.7.6 Direction Correction Admittedly, sometimes the actin filament is oriented in the wrong direction. To compensate for backwards filaments the program has a so-called ‚Äòdirection-correction‚Äô and will auto-magically flip the raw trace if the filament was oriented the wrong way. What happens here is after analyzing step sizes if the program identified more negative events than positive events it assumes backward-filament orientation in the trap and flips the trace horizontally over the x-axis by multiplying every value by negative one (-1). Now if the records were flipped so were the calculated step sizes and these new values reported along with the force measures that are calculated by the step size multiplied by the user-inputted nm -&gt; pN conversion. These values are added to the on/off time table previously calculated. 4.2.7.7 Changepoint Analysis Since we identified the events we can also perform ensemble averaging with a little more work. Unfortuntely, preparing the data for the HM-Model by transforming into running mean/variances decreased our time resoultion as we lost a lot of information. Our original number of data points collected is 445788, whereas the number of data points (windows) in the running mean/var is 5942. The resulting start/end of each events are really just estimates. To get better start of event estimates the program uses changepoint analysis on the transition periods into and out of each event to better estiamte the start of each event in the original sampling frequency. To obtain the transition periods from raw data in 5kHz time the running window indices from the state_1_ends and state_2_ends are converted to 5kHz time by the conversion ration of ~75 we previously calculated as the ratio between the number of datapoints in the raw data to the data points in the running mean/var calculations. More specifically, the program finds the running window index of ~1.5 windows back into the baseline from the state_1_end window and the index of the to the first state 2 window and converts back into 5kHz time to supply a slightly larger transition window to analyze for the ‚Äòtrue‚Äô event start. Doing this for every event we obtain a new table with 5kHz time indices that should contain the transition into every event: The changepoint analysis is actually performed on a new running variance of the processed data with a variable length window width. Here I use 5 datapoints (1ms) because the trace has exceptional singal-to-noise. This running transformation advances one point at a time. The resulting running variance transform looks like this: Figure 4.13: 1ms running variance transformation We can then chunk out the the transition periods with our indices and apply changepoint analysis to each transition period that looked for the change in mean of the variance signal for every event and plot the results. The changepoint analysis looks for a change in mean of the variance signal. The analysis only looks for a single changepoint. Note, this is an early version of the changepoint analysis that {lasertrapr} used. See the source code of the app on GitHub for up to date version. Figure 4.14: Changepoint identified start of event in running variance We can also plot the corresponding point in the raw/processed data that is ultimately used in the ensemble average: Figure 4.15: Changepoint identified start of event in the original data set This same approach can be applied to the backside. Once backside change points are identified than more precise measurements of time on, time off, displacements, and forces can be estimated. For now, we can go ahead and make one final plot showing the complete analysis overlayed on the raw/processed data. The pink shades indicates the start/end of the event. The vertical dashed lines are placed at the peak displacement of each event and labeled with the step size and event duration. No analysis is perfect, some shorter events are missed. These are usually running windows which have a high variance due to the window overlapping baseline and an event. Figure 4.16: Results of analysis overlayed on data trace Moving along and to make this information more helpful in being able to really ID where the events are stopping and starting we can take the cumulative sum of these ‚Äòin-a-row‚Äô lengths that will give us the running window indices of the start/stop of the events. This will help us chunk out the events to measure step sizes. After calculating the cumulative sum of the ‚Äòin-a-row‚Äô lengths we can make a new table with 2 columns. One column state_1_end indicating the window which is the last window in a series of baseline and a state_2_end column that is the last window of an event series. state_1_end state_2_end 8 20 36 46 51 63 75 86 128 129 137 164 The result is the running window indices of the window before the event starts and the window that ends the event. By adding one (+1) to the state_1_end value we get the index of the start of each event. ## So the first event is between indices 9 and 20 We can estimate the step size from the running windowed data. To get the step size we find the position of the running window with the greatest absolute value and take its real value. Finding the index of the window with the greatest absolute value let‚Äôs us also find the peak of negative events more accurately than just taking the max right off the bat. Now this would give us step size estimates since we already processed the data to be centered around 0. However, our baseline signal does not always return to 0 after an event. To get a more precise estimate of our step sizes by the same logic we can calculate the average of the baseline noise prior to each event and then subtract the step size estimate from the baseline prior to the event. This results in a table giving the mean of the baseline before each event (avg_s1), the estimated step size (avg_s2), and the differences between the 2 (diff) representing the final step size the program reports for each event. avg_s1 avg_s2 diff -9.2145628 -12.734709 -3.520146 -6.9028608 -3.127884 3.774977 -0.6201406 18.654526 19.274667 -4.1346721 14.146184 18.280856 -4.5201374 17.046019 21.566157 -0.9125085 21.452987 22.365496 4.2.7.8 Direction Correction Admittedly, sometimes the actin filament is oriented in the wrong direction. To compensate for backwards filaments the program has a so-called ‚Äòdirection-correction‚Äô and will auto-magically flip the raw trace if the filament was oriented the wrong way. What happens here is after analyzing step sizes if the program identified more negative events than positive events it assumes backward-filament orientation in the trap and flips the trace horizontally over the x-axis by multiplying every value by negative one (-1). Now if the records were flipped so were the calculated step sizes and these new values reported along with the force measures that are calculated by the step size multiplied by the user-inputted nm -&gt; pN conversion. These values are added to the on/off time table previously calculated. 4.2.7.9 Changepoint Analysis Since we identified the events we can also perform ensemble averaging with a little more work. Unfortuntely, preparing the data for the HM-Model by transforming into running mean/variances decreased our time resoultion as we lost a lot of information. Our original number of data points collected is 445788, whereas the number of data points (windows) in the running mean/var is 5942. The resulting start/end of each events are really just estimates. To get better start of event estimates the program uses changepoint analysis on the transition periods into and out of each event to better estiamte the start of each event in the original sampling frequency. To obtain the transition periods from raw data in 5kHz time the running window indices from the state_1_ends and state_2_ends are converted to 5kHz time by the conversion ration of ~75 we previously calculated as the ratio between the number of datapoints in the raw data to the data points in the running mean/var calculations. More specifically, the program finds the running window index of ~1.5 windows back into the baseline from the state_1_end window and the index of the to the first state 2 window and converts back into 5kHz time to supply a slightly larger transition window to analyze for the ‚Äòtrue‚Äô event start. Doing this for every event we obtain a new table with 5kHz time indices that should contain the transition into every event: The changepoint analysis is actually performed on a new running variance of the processed data with a variable length window width. Here I use 5 datapoints (1ms) because the trace has exceptional singal-to-noise. This running transformation advances one point at a time. The resulting running variance transform looks like this: Figure 4.17: 1ms running variance transformation We can then chunk out the the transition periods with our indices and apply changepoint analysis to each transition period that looked for the change in mean of the variance signal for every event and plot the results. The changepoint analysis looks for a change in mean of the variance signal. The analysis only looks for a single changepoint. Note, this is an early version of the changepoint analysis that {lasertrapr} used. See the source code of the app on GitHub for up to date version. Figure 4.18: Changepoint identified start of event in running variance We can also plot the corresponding point in the raw/processed data that is ultimately used in the ensemble average: Figure 4.19: Changepoint identified start of event in the original data set This same approach can be applied to the backside. Once backside change points are identified than more precise measurements of time on, time off, displacements, and forces can be estimated. For now, we can go ahead and make one final plot showing the complete analysis overlayed on the raw/processed data. The pink shades indicates the start/end of the event. The vertical dashed lines are placed at the peak displacement of each event and labeled with the step size and event duration. No analysis is perfect, some shorter events are missed. These are usually running windows which have a high variance due to the window overlapping baseline and an event. Figure 4.20: Results of analysis overlayed on data trace 4.3 User Manual 4.3.1 Getting Started {lasertrapr} is an R-package/Shiny application built using the {golem} framework for automating the analysis of laser trap data. Please note that the app is currently still under development. Users should proceed with caution. NOTE: an R-package is denoted by the {} braces 4.3.2 Install R &amp; RStudio Currently, {lasertrapr} can only be launched from an active R-session. Before you begin you will need to download and install R and RStudio. Both of these are free. RStudio is an IDE (integrated development environment) and is not 100% necessary, but is recommended. Follow the instructions on the respective websites to complete installation. Additionally, you will need to install the R build toolchain. This allows a user to build an R-package from source on their own computer. The link provides directions on how to do this on Windows, Mac, and Linux. At the moment there is a lot of overheard needed to get the application up and running. Hopefully, in the future a more stable version can be released onto CRAN (Comprehensive R Archive Network) or preferably as a standalone program. 4.3.3 Download {lasertrapr} Open R/RStudio on your computer. You can download the latest stable version of the app from my drat repository on Github with the following code. Copy/paste the following into the R-Console or into an R-Script to run: For users that want the latest developmental version to fork and contribute you can install from GitHub with: Both {devtools} and {lasertrapr} will need to install dependencies. Update and install all the packages that they want when prompted. Alternatively you can install {devtools} from within the RStudio IDE by navigating to the ‚ÄúPackages‚Äù tab in the lower right box and clicking ‚ÄúInstall‚Äù. 4.3.4 Launch the App Once your have successfully installed and built the {lasertrapr} package, you are ready for launch: Once the initial setup and installation is completed, the above two lines is the only code that will need to be run each time you want to use the app. You can update to the current developers version anytime by re-running install.packages(\"lasertrapr\") or devtools::install_gitub(\"brentscott93/lasertrapr\"). 4.3.5 Upload Data 4.3.5.1 The ~/lasertrapr/ folder The {lasertrapr} app offers more than just the analysis of single laser trap data traces, but the application also serves as an opinionated data management tool. The app forces users to adopt a specific directory tree structure. All data can be organized into specific project, conditions, date, and observation folders. Additionally, this structure can be leveraged in the post-analysis stage to easily handle statistical analyses and auto-generation of plots for quick summary features provided by the app. Upon initial launch of the app, a lasertrapr folder will be created under ~/lasertrapr. The exact location of the folder will vary depending on OS, but you can get the exact location by running path.expand(\"~/lasertrapr\") in the R-console. All of your data and analyses will be created and saved within this folder. The app will take any uploaded data and copy it into an observation folder. In the laser trap, we will assume an ‚Äúobservation‚Äùis all the data collected at one mogul at a given time. This data, or observation, would have been collected on a specific day (date) under specific solution conditions (ionic strength, pH, mutations, etc.) and would belong to one bigger project. This logic provides the basis for the data management provided by the app. The project, conditions, and date folders must exist in order for data to be uploaded. The app will automatically create the observation folders when data is uploaded. 4.3.5.2 Create Folders Located in the top right of the app is the Folder Manager. Click to open the menu (there is a known bug that when opening menu for first time some of the menu is cut off, you can click outside menu to close, and just re-opening will fix this menu display). Click the dropdown and either select your specific project folder or select ‚ÄúCreate New‚Ä¶‚Äù to create a new folder. Avoid using spaces in the folder names. The prefix ‚Äúproject_‚Äù will be appended to the beginning. Continue to create folders in the same way for the conditions and date. In lieu of using spaces, users are encouraged to use ‚Äú-‚Äù and ‚Äúunder_score‚Äù in your conditions naming conventions. I prefer to use a combination of both. I use a ‚Äú-‚Äù as a space within a given variable name and ‚Äúunder_score‚Äù as a space separator between distinct variables in the conditions. For instance, if I collected data with a wild-type myosin (WT) at pH 7.0 and 30mM Pi my conditions would be ‚ÄúWT_pH-7.0_30mM-Pi‚Äù. The app will add a ‚Äúconditions‚Äù column to all the uploaded trapping data to ID each observation from one another (along with columns for the project, date, and observation info). The benefit of having a standard naming convention and knowing what the roles of the special space seperators are will allow for more flexibility and robust analysis later on. For example, eventually the conditions column can be separated into many variable columns easily in the post-analysis by knowing that variables are separated by ‚Äúunder_score‚Äù. It doesn‚Äôt matter what you use, just be consistent. 4.3.5.3 Load Data 4.3.5.3.1 Simple Upload A simple upload means the user has a complete file of trap data. One file = one complete record. Any regular delimited file type can be loaded into the app (thanks to fread() from {data.table}). Currently, the app only supports single trap detector data which means only one signal columns can be used for analysis. The first column in the data file will automatically be chosen as the trap data. The app will make a copy of the data and re-format it for use within itself. Uploading a dataset to the app will create an ‚Äúobs-##‚Äù folder inside the currently selected data folder. The data will be saved within that ‚Äúobs-##‚Äù as ‚Äútrap-data.csv‚Äù. This last detail is purely informative. One of the benefit of using the app is not worrying about file management. You technically will never need to look inside the files created by the app, but it is still nice to know how it works and where to find things. Multiple files can be uploaded at once too. Each file will be treated as a new observation. If three files are uploaded, then the folders ‚Äúobs-01‚Äù,‚Äúobs-02‚Äù, and ‚Äúobs-03‚Äù will be created within the selected date folder and ‚Äútrap-data.csv‚Äù files will be initialized from the uploaded data within the respective observation folders. If you are uploading simulated data or data that has already been processed you can check the ‚ÄúReady for Analysis?‚Äù box which will let you enter a trap stiffness (pN/nm) value and assumes you don‚Äôt need to convert data from mV to nm (the app will use a value of 1 for the mV to nm conversion during subsequent analysis). This allows users to skip the ‚ÄúClean &amp; Process‚Äù section of the app since the data will be ready for analysis once the data is initialized. 4.3.5.3.2 Split Observations This is a special use case for the Debold Lab. The trapping computer saves a separate .txt file for every 5-seconds of data collected. All .txt files from a given conditions/date combination can be uploaded at once and the app will read the time-stamps and concatenate corresponding observation files together based upon the user selected time threshold. 4.3.6 Clean and Process 4.3.6.1 Clean Cleaning data use to be a painful and tedious task for me. It use to involve visualizing data traces in one software (pCLAMP), while jotting down notes in spreadsheets with specific time-stamps and then needing to convert time (in seconds) back to the original sampling frequency so I could go and manually find that data in excel to select/delete by hand (UGH! - I still cringe thinking of doing this‚Ä¶). Sometimes it still amazes me how much faster and easier this is with {lasertrapr}. The benefit of {lasertrapr} is even if you do not like/need the analyzers or other feutures you can easily just use it to clean, process, and export your data. 4.3.6.1.1 Cut data The most common use case for needing to cut data from a trap data trace is when during collection an actin-filament snaps or the myosin sticks down. In these cases, there is still good/usable data present in the trace, but the presence of the large signal disruptions caused by the snapping filament or stick-down could throw off the analyzers. The easiest fix is to cut these portion of the data out. I generally do not recommend deleting data except for these cases in which case I refer to this as ‚Äútrimming‚Äù the data. Trimming (deleting) an observation to make it analyzer ready is easy with {lasertrapr}. Use the Folder Manager to select an observation, load the observation, select the data to delete, and hit the Cut button. NOTE: This permanently deletes the range of data selected from the trap trace and is irreversible (unless you re-upload your data). 4.3.6.1.2 Move data In some cases, you do not want to delete data, but to split one record into 2 different observations. This is called ‚Äúmoving‚Äù data in {lasertrapr}. Sometimes, during collection stage drift occurs so the trace starts with a stable/horizontal time-series, but then over time the data starts to trend with time upwards in the y-dimensions turning the signal into a diagonal line. One way to deal with this is to split the single obs into two seperate ones so the two-halves can be processed separately with the diagonal potion getting detrended later. Moving data is the same procedure as cutting data, except for the final button pushed! Load an obs, select the data to move, and click move. A new observation folder will be made with the selected data and the selected data will be deleted out of the current obs. NOTE: This cannot be undone without manual intervention (you would have to load the trap-data.csv files into R and rbind them back together or re-upload the data and start again). 4.3.6.2 Process Another benefit that I have enjoyed while analyzing my own data with {lasertrapr} is the ability to easily visualize how processing will transform my data before deciding to save/analyze it. Currently, you can convert data from mV-to-nm with a pre-determined user conversion value, center the baseline mean to zero using either the ‚Äúbaseline range‚Äù or ‚Äúremove mv‚Äù techniques, or you can detrend your data with a peice-wise linear detrend-er. 4.3.6.2.1 Convert to nm Short and sweet. Enter your pre-determined mV-to-nm conversion in the Step Cal box and hit Graph to preview. 4.3.6.2.2 Remove baseline When collecting laser trap data the detector is measuring the relative intensity of light across its four-quadrants. The data is saved in units of millivolts (mV) and is usually not centered around 0mV. So, when the data is converted to nanometers the y-axis range becomes some arbitrarily large or nonsense negative value. Technically there is nothing wrong with this since we are interested in making relative measurements of displacements from baseline, but it makes more sense and is easier to read when the y-axis is centered around 0nm. This can be accomplished by calculating the average position of the baseline signal and subtracting that value from every point in the y-dimension. Baseline removal is currently implmented in 3 ways: baseline range, remove MV, and detrending the data. 4.3.6.2.3 Range The baseline range is simplest and the most ‚Äúlegacy‚Äù (i.e.¬†this was easiest for me to implement when I was doing this all manually before {lasertrapr}). You can manually select a quiescient perioed of data that represents the baseline signal and they mean position of this period of data will be calculated. By selecting remove base from the Graph Options and hitting Graph to update the app will provide a preview. NOTE: this will not be saved until you explicitly hit save. 4.3.6.2.4 Remove MV Sometimes it can be tricky to find a nice quiescent period of baseline signal to calcualte the range. This is expecially the case with fast motors and mini-ensemble experiments. Instead it can be helpful to use the Remove MV option. This will perform a Mean-Variance transformation of the entire data trace and show the plot in an interactive window. You can then select the area that represents the baseline population, the mean is calculated, and by selecting Remove MV in Graph Options and hitting Graph to update, the app will provide a preview. NOTE: this will not be saved until you explicitly hit save. 4.3.6.2.5 Detrend data Stage drift can occur in longer records, or put another way the displacement on the y-axis will start to trend with time on the x-axis. There should be no relationship between time and displacement (slope should be 0). If this occurs the data record will look like it is tilted diagonally. This can be compensated by de-trending the data. A piecewise linear regression is fit to every 5 seconds of data and the resulting slope is removed from the data. Select Detrend in Graph Options and click Graph to preview the results. This also centers the baseline around 0. NOTE: this will not be saved until you explicitly hit save. Your browser does not support the video tag. 4.3.6.3 To Include, or not to Include‚Ä¶ I do not like deleting data, but I also do not like wasting my time. Unfortunately, not all that glitters is gold, or not all trap data that is collected is usable. If I know that data does not look like exceptional signal-to-noise, there are no events, or will probably not analyze well I want to exclude those events from analysis so they do not take time getting analyzed etc. By default, {lasertrapr} excludes all data from analysis so you need to Include the data for the app to analyze it. If you like the data check the Include button when saving data. 4.3.6.4 Save! NOTE: The app will not save anything unless you save the changes! 4.3.7 Analyzers Currently, there are two analyzers available within the app. The HM-Model/Changepoint analyzer was designed for single molecule trapping data and the mini-ensemble analyzer is self-explanatory. Both analyzers have a similar UI with the ability to impose user control over some of the analysis parameters. For both analyzers you have the option to run the analyzer through all of the observations in a given date folder, or you can select just a single observation. If you select to analyze a single observation you must also select the observation you want to analyze in the Folder Navigator (top right button). 4.3.7.1 HM-Model/Changepoint Intended for single molecule data, this analyzer uses a combination approach to identify single molecule binding events. A Hidden Markov Model is implemented with the {depmixS4} R-package on a running window transformation of the data to estimate locations of binding events. Then a changepoint analysis is applied to a small subset of the original trapping data around the HM-Model estimated transition periods with the {changepoint} R-package to precisely choose the most probable data point (at the original sampling frequency) where the binding event occurred. Within the HM-Model/Changepoint analyzer, users have control (to some extent) over most aspects of the analyzer including the running window transformations, some of the HM-Model, and the type of changepoint. Clicking the ‚ÄúOptions‚Äù button will open up a menu that will allow you to set the analysis option. 4.3.7.1.1 Options: HM-Model The Hidden Markov Model analyzes a running window transformation of the original data trace. Here you can select the window width (in data points) and how you would like the window to progress. Users are referenced to Smith, Steffon, Simmons, and Sleep 2001 for further details on how to optimize the windows. Per their recommendations the default of the progression of the windows is by 1/2 overlap. Note: not all window slide options have been tested. Possible bugs may exist and app crash potential. You can just restart the app and try another option. The ‚ÄúChannels‚Äù options lets you choose if you want the Hidden Markov Model to use both the running mean AND running variance transformations or just the running variance. A personal anecdotal recommendation is to use both the running mean and variance. ‚ÄúEM Random Start‚Äù is FALSE (unchecked) by default. If TRUE (checked) the analyzer will use random number generation to start the EM-Algorithm. 4.3.7.1.2 Options: Changepoint There are two sections the changepoint options. Since changepoint analysis is applied separately to the beginning and ends of the events so you can control the behavior of both. The default is to use the changepoint method ‚ÄúMean/Var‚Äù which has the changepoint alogorithm use the mean and variance position to identify the most probable change. Whereas if ‚ÄúVariance‚Äù is selected a slider will appear allowing the user to select a window width for the running variance transformation. The changepoint will then look for a change in the mean signal position of the variance transformation to identify the most probable change. 4.3.7.1.3 Options: Displacements Users can select one of two methods for peak displacements to be calculated. The ‚Äúaverage‚Äù method calculates the mean signal position of the entire ID‚Äôd event minus the first and last 5ms. Alternatively, users can opt to use the ‚Äúpeak‚Äù method which returns a maximum value from a 5ms running mean of the ID‚Äôd event. 4.3.7.1.4 Options: Hz Users need to specify the sampling frequency (in Hz) for proper conversion between data points and seconds. Defaults to 5000 Hz. 4.3.7.2 Mini-Ensemble This mini-ensemble analyzer uses a simple thresholding method to ID events. Users can control the threshold parameters for the displacement and minimum time on as well as the running window width. 4.3.8 Summarize The summarize feature is designed to be more of a quick summary feature that provides an quick look at the summary statistics of your project with minimal user-implemented choices. I found it to be convenient when you just want a quick check on how a project is progressing wanting to see averages, standard errors, sample size, etc to update myself and the lab. You can change colors or re-reorder the factors for display purposes, but other than that it will create the same default statistical figures powered by the {ggstatsplot} package. This provides a quick statistical tasks to check on significance. Currently, conditions are grouped indivudally and performed in a ‚Äúone-way‚Äù fashion. Click the link to visit the {ggstatsplot} website for insight into the meanings of all the statistical symbols. These quick summaries can be exported to standalone .html dashboards to share. In the future I would like to add support to export to .ppt files as well. Summarizing data will read, filter, combine, and save all ‚Äúmeasured-events.csv‚Äù into your ‚Äúsummary‚Äù folder within your project with the date, project name, and ‚Äúall-measured-events.csv‚Äù as the identifying file name. The summarized data will also be saved in a similar fashion but as ‚Äúsummary-data.csv‚Äù. Note: The split conditions feature can be used to separate your conditions name into multiple unique variable ID‚Äôs which can be useful for later use when creating plots. Split conditions only works if you follow the condition naming convention described in these docs. No spaces - EVER! Underscores ‚Äú_‚Äù separate distinct varaibles and dashes ‚Äú-‚Äù can be used as spaces within a variable. When selecting split conditions, n number of textboxes will appear for the number of variables present in your conditions name, which is solved by identifying the number of underscores present plus 1. You can then enter the variables names which will become column names in the data. 4.3.9 Ensemble Average Ensemble averaging in {lasertrapr} is divided into three distinct steps 1) preparing the ensembles, 2) averaging and fitting the ensembles, and 3) plotting. Separating these distinct tasks provides the user with more control over the prococess without having to re-run computationally long tasks repeatedly. 4.3.9.1 Prep Ensembles An individual single molecule (myosin) event should be composed of two substeps (d1 &amp; d2). Events can be aligned at the changepoint identified start or end of the events, temporally synchronized to the same duration, and then averaged together to create one ‚Äúaverage‚Äù event. The user can control how the event synchronization occurs. All the original trapping data traces are saved in the ‚Äútrap-data.csv‚Äù files and their ID‚Äôd events are saved in ‚Äúmeasured-events.csv‚Äù. The ‚Äúmeasured-events.csv‚Äù file not only includes displacements, event durations, etc., but also the changepoint ID‚Äôd datapoint for the start and end of each event. This information can be used for the ensemble averaging. Ultimately, the ‚ÄúPrep Ensembles‚Äù button will create an ‚Äúensemble-data.csv‚Äù file in each obs-## folder that will have all of the individual forwards and backwards extended events that was constructed with the selected parameters described below in one file in long format. This step usaully takes the most time computationally as it involved reading in every single ‚Äútrap-data.csv‚Äù file, extracting the events, and writing the synchronized events back to the folder. NOTE: Only observations that were included, analyzed as success, and whose review marked as TRUE will be included in the ensemble averages. Additionally, if the observation passes that first check then any events that were user excluded will be filtered out. Each time you re-prep your ensembles, all existing ‚Äúensemble-data.csv‚Äù files are ERASED and the data is re-read and prepped again. This allows the user to go back and exclude a trace or event from analysis and re-prep without leaving old straggling files behind. 4.3.9.1.1 Extending Forward The goal with the forward ensemble average is to align the beginning of the events and ‚Äústretch‚Äù the ends of the short events to be equal to the longest event in time. The app lets the user choose how much (or little) time to use to extend the event. A 3ms ‚ÄúAvg of ms to extend forward‚Äù (I should probably come up with better names for these parameters) value means the position of the last 3ms of an events will be averaged and that resulting average value will be used (repeated) to extend the event out. The window size you select would probably be dependent on [ATP]. The higher the [ATP] the lower the window should be to decrease the likelihood of averaging pre-hitch (d1) displacement position. Whereas, at high [ATP] myosin will spend a longer time in a post-hitch (d2) final displacement position waiting for ATP to induce dissociation so you can be less aggressive in the size of the window in attempts to truly capture the average of that final d2 displacement. 4.3.9.1.2 Extending Backwards Similar idea of the forwards, but for the backward ensemble average the goal is to capture the average position signal of the d1 pre-hitch position signal to extend the events. However, this is a little tricky. The changepoint algorithm used identifies the transition period going from un-bound to bound as a part of the event. This is the very brief period in time where the bead is moving through solution as it is displaced from the center of the trap. As a result, even though these datapoint are considered part of the event, they are not a true representation of the post-powerstroke/pre-hitch d1 position. The app gives the option to ‚Äúskip‚Äù into the event before performing an average in effort to try to avoid averaging in these transition points. The ‚ÄúNumber of ms to skip before s1 avg‚Äù (again not a catchy name‚Ä¶) lets the user decide how many ms to skip into each event before averaging. Similarly, the ‚ÄúAvg of ms to extend s1 backwards‚Äù allows the user to select how many ms to include in the average after skipping ahead. 4.3.9.2 Average &amp; Fit Ensembles Once the ensembled are prepped they can then be averaged and optionally fit with an exponential curve. The options allow the user to select the maximum amount of data to plot and whether to fit a single, double, or no exponential to the data. This part is relateively strighforward, just click ‚ÄúAvg Ensembles‚Äù. Averaging the ensmbles will automatically save the fit parameters under ‚Äúlasertrapr/project/summary‚Äù. 4.3.9.3 Plot Ensembles After the ensembles are averaged and optionally fit, you can navigate to the ‚ÄúPlot Options‚Äù tab to activate the graph. Prior to activating this tab only the Forward/Backwards Fit Parameter tables will be view-able. Within the app, there is a limited selection of plot customizations that allow the user to tweak the appearance of the plot. You can provide custom labels to the facets, change facetting directions, shift the backwards ensembls undernearth the forwards to save on space, change theme size, along with some other minor features. Plots can be saved with ‚ÄúSave Plot‚Äù and figures are saved under the selected project folder inside ‚Äúlasertrapr/project/summary/figures‚Äù. NOTE: In order to get the custom labels to work you must select a factor order. "],["myosins-powerstroke-occurs-prior-to-the-release-of-phosphate-from-the-active-site.html", "5 Myosin‚Äôs powerstroke occurs prior to the release of phosphate from the active site 5.1 Introduction 5.2 Results 5.3 Discussion 5.4 Supplemental Material 5.5 Detecting removal of the hitch 5.6 What state is S217A detaching from?", " 5 Myosin‚Äôs powerstroke occurs prior to the release of phosphate from the active site This chapter of the dissertation has been published in Cytoskeleton (Scott et al. 2021) and can be read in the journal‚Äôs formatted PDF version. The following chapter is a re-formatted version of the published article, but contains additional supplemental sections to expound upon the material not included in the publication. The full citation for the published article is ‚ÄúScott, B., Marang, C., Woodward, M., &amp; Debold, E. P. (2021). Myosin‚Äôs powerstroke occurs prior to the release of phosphate from the active site. Cytoskeleton, 1‚Äì14. https://doi.org/10.1002/cm.21682‚Äù 5.1 Introduction Myosins are a family of motor proteins responsible for generating force and/or motion inside the cell (Foth, Goedecke, &amp; Soldati, 2006). Muscle myosin II is the most well-characterized class and is the molecular motor that drives muscle contraction (Geeves &amp; Holmes, 1999). Myosin Va has a motor domain that is highly homologous to myosin II (Foth et al., 2006) but its task is the intracellular transport of vesicles, walking processively along the 36 nm pseudo-repeat of actin filaments (Warshaw et al., 2005; Yildiz et al., 2003). Other forms of myosin and related molecular motors (e.g., kinesin) play important roles in intracellular transport, cell migration, the maintenance of cell structure, and even in mitosis (Foth et al., 2006). Common to all myosins is the ability to convert the chemical energy of ATP into mechanical work, however key molecular details of this process remain unclear (Houdusse &amp; Sweeney, 2016; Takagi, Homsher, Goldman, &amp; Shuman, 2006). In a precisely coordinated sequence of steps the ATP is hydrolyzed off of actin and then the products are released while it is tightly bound to an actin filament (Holmes &amp; Geeves, 2000; Sweeney &amp; Houdusse, 2010). In a simple model of the cross-bridge cycle, ATP enters the active site with myosin tightly bound to actin in the apo or rigor state. This induces conformational changes that cause myosin to dissociate from actin (Geeves &amp; Holmes, 2005). ATP is then hydrolyzed to ADP and Pi off of actin, but the products remain in the active site while myosin isdetached from actin. The re-binding to actin triggers the release of Pi and then ADP (Bagshaw &amp; Trentham, 1974). The powerstroke is thought to occur close in time to the release of Pi(Holmes &amp; Geeves, 2000; Houdusse &amp; Sweeney, 2016; Sweeney &amp; Houdusse, 2010; Takagi, Shuman, &amp; Goldman, 2004) from the active site, however the exact sequence of events is unclear and is currently the source of a vigorous debate within the field (Gunther et al., 2020; Llinas et al., 2015; Muretta, Rohde, Johnsrud, Cornea, &amp; Thomas, 2015; Trivedi et al., 2015; Woody, Winkelmann, Capitanio, Ostap, &amp; Goldman, 2019). The key unanswered question is which event occurs first the powerstroke or the release of Pifrom the active site (Llinas et al., 2015; Woody et al., 2019)? In other words, does the mechanical event ‚Äúgate‚Äù the biochemical changes, or do the chemical reactions ‚Äúgate‚Äù the mechanical events? The answer to this question has important implications for the long-standing pursuit of the molecular basis of force-generation by muscle (Huxley &amp; Simmons, 1971; Linari et al., 2015; Piazzesi et al., 2002; Veigel, Molloy, Schmitz, &amp; Kendrick-Jones, 2003), but it also has broader implications for under-standing the fundamental nature of energy transduction by nucleotide-based motor proteins (Vale, 1996, 2003). The timing of force-generation relative to Pi -release was first addressed in single skeletal muscle fibers (myosin II); these studies demonstrated that the development of force preceded the release of the first hydrolysis product, Pi(He et al., 1997; Sleep, Irving, &amp; Burton, 2005). Consistent with these observations, the rapid release of caged-Pidemonstrated a clear delay in the depression of isometric force in muscle fibers (Dantzig, Goldman, Millar, Lacktis, &amp; Homsher, 1992). These findings were consistent with force-generation preceding the release of Pi; however, the spatial and temporal resolution of these assays could not provide direct evidence of how and when a single myosin was progressing through its mechanical or biochemical transitions. More molecular level detail was provided by work using F√∂rster Resonance Energy Transfer (FRET) probes on isolated myosin molecules in bulk solution assays, to directly monitor the position of the lever arm while also tracking the rate of P i-release using a rapid-reporting, phosphate-binding-protein (Muretta et al., 2015; Trivedi et al., 2015). These assays demonstrated that lever arm rotation occurred rapidly after myosin strongly bound to actin, at a rate of ‚â•350. s-1 , while Pi -release from the strongly bound state occurred at ~30. s-1 , suggesting that Pi -release occurs after lever arm rotation for myosin II. Similar findings were observed using myosin Va with the powerstroke occurring at 400. s-1 , while P i- release occurred at 200. s-1 (Trivedi et al., 2015). Similarly, single molecule observations, with microsecond time resolution, suggest that in cardiac myosin lever arm rotation may occur even faster, at 1000‚Äì 5000. s-1 (Woody et al., 2019), exceeding all estimates of P i-release from myosin II by at least an order of magnitude (Sleep et al., 2005). Thus, the findings from these types of functional assays support the hypothesis that the powerstroke occurs prior to P i-release. However, x-ray crystallography structures of myosin, captured in various states of the cross-bridge cycle, suggest that P i-release must occur before lever arm rotation (Llinas et al., 2015; Sweeney &amp; Houdusse, 2010). Specifically, structures of myosin trapped in diffeent nucleotide states using various nucleotide analogs show that the lever arm exists in a pre-powerstroke position when the gamma-Pi (or an equivalent analog) is still in the active site, and only achieves a post-powerstoke position when the gamma-Pi is absent from the active site (Robert-Paganin et al., 2020). Based on these and similar structural observations it was hypothesized that upon binding to actin, conformational changes in myosin‚Äôs active site occur that allow Pi to be released from the active site, and only then can the conformational changes that lead to lever arm rotation occur. Thus, this hypothesis posits that Pi -release ‚Äúgates‚Äù the lever arm rotation, therefore the lever arm cannot rotate (i.e., the powerstroke cannot occur) until Pi has left the active site (Gulick et al., 2000; Rayment et al., 1993a). In attempt to resolve the conflict between the functional and structural evidence, Llinas et al.¬†(Llinas et al., 2015) formed myosin crystals soaked in elevated levels of Pifor varying durations before rapidly freezing the samples and performing x-ray crystallography. With a short exposure time before freezing, Piwas observed to be either at the exit of the escape tunnel adjacent to the active site (PiR1) or close to ADP in the nucleotide binding region (Pi R2, that is, still in the active site). Longer delays before freezing revealed that Pidiffused back into the active site close to ADP, and when it did, the lever arm returned to the prepowerstroke position. These observations led the authors to hypothesize that Pi leaves the active site very rapidly (and prior to the powerstroke) but stays in the exit tunnel before it is released into solution. Thus Pi -release from the active site may occur much more rapidly than Piappears in solution. This idea could therefore potentially explain why functional assays observe a rate of P i-release that is slower than the rate of force development and the powerstroke (Muretta et al., 2015; Trivedi et al., 2015). To further test this hypothesis, Llinas et al.¬†(Llinas et al., 2015) introduced a mutation into switch I that was designed to slow Pi -release; by impeding it from entering the exit tunnel (S217A in myosin Va). The loss of the hydroxyl group, thought to make contact with the gamma phosphate of ATP (Forgacs et al., 2009; Smith &amp; Rayment, 1996), is hypothesized to impede the entry of Pi into the exit tunnel (Llinas et al., 2015). Consistent with this hypothesis, actin-activated Pi-release is 3‚Äì10-fold slower in this mutation compared to WT (Forgacs et al., 2009; Gunther et al., 2020; Llinas et al., 2015). In addition, x-ray crystal structures of myosin soaked in high concentrations of Pi for 45 min show Piin the active site near ADP with myosin occupying a prepowerstroke state, supporting a Pi-release gated powerstroke (Llinas et al., 2015). Thus, the release of Pi may occur faster than the lever arm rotation, but it may not appear in solution immediately because it is still in the Piexit tunnel. If correct, this would provide an explanation for the discrepancy in the results between structural and functional findings. Indeed, it was recently proposed that this structural information provides a hypothesis that unifies prior findings from solution and functional experiments (Robert-Paganin et al., 2020). This hypothesis is also important because it makes specific and testable predications about how a single myosin molecule should behave if Piis maintained in its active site. For example, because Pigates the powerstroke in this model, Pishould only rebind to actomyosin in a prepowerstroke state because Pican only leave or re-enter the active site when the lever arm is in a prepowerstroke position (Llinas et al., 2015; Sweeney &amp; Houdusse, 2010). Indeed, in this model, the rebinding of Pi to the active site prevents the powerstroke from occurring rather than reversing it. By exposing myosin to elevated levels of Pi to maintain Piin the active site, lever arm rotation (i.e., powerstroke) generated by myosin after it binds to actin should be delayed or even prevented if Pi gates the powerstroke. Similarly, a myosin construct with a mutation that slows the entry of Piinto the Pi exit tunnel (e.g., S217A; Forgacs et al., 2009; Llinas et al., 2015), should also dramatically delay, or even prevent, myosin from generating a powerstroke once it strongly binds to actin. These effects would be most evident at the single molecule level where the generation of a powerstroke can be directly observed, and the duration of single actomyosin interactions directly quantified. Therefore, we directly tested this hypothesis using both approaches (high levels of Pi and the S217A mutation) in a single molecule laser trap assay using a single-headed construct of myosin Va. 5.2 Results To determine the order of the powerstroke relative to P i-release from myosin‚Äôs active site, we directly observed the powertroke and strongly bound lifetime of a single-headed 1IQ construct of myosin Va using a three-bead single molecule laser trap assay (Figure 4.1a,b). In the first series of experiments, we examined the effect of 30 mM Pion the size of myosin‚Äôs powerstroke. To ensure that the elevated Piwould preferentially rebind to an actomyosin state with ADP still in the active site (AM.ADP), the ATP concentration was maintained at 100 ŒºM for this set of experiments, a value well above the estimated km of 17 ŒºM (Baker et al., 2004; Forgacs et al., 2009). Single actomyosin interactions (Figure 4.1c) were detected using an algorithm based on a Hidden‚ÄìMarkov Model (Smith et al., 2001), and transitions into and out of single binding events were located using a Changepoint analysis technique (Blackwell et al., 2021; see Section 5). The 1 IQ construct of myosin Va generated a 7 nm (Mean SEM) powerstroke (Figure 4.1b) that was unchanged by elevating Pi to 30 mM in the experimental solution (Figure 4.1e). The S217A con- struct also generated a step that was not statistically different from the WT myosin construct, either in the absence or presence of 30 mM Pi(Figure 4.1e). This suggests that when Pi-release is slowed from the active site, by either the S217A mutation (Figure 4.1b) or by Pi rebinding to the open active site, myosin generates the same size powerstroke upon binding to the actin filament. Single molecule laser trap assay data and analysis. Figure 4.1 shows in (a) The x-ray crystal structure of myosin Va (Shen et al., 2016),Images rendered in Swiss PDF viewer. (b) A schematic representation of the three-bead laser trap assays used. Myosin Va S1 with a single light-chain binding domain was adhered to the pedestal (3 Œºm bead) via an anti-myoC antibody. Displacements of the actin filament upon myosin binding were tracked using a quadrant-photodiode (detector). (c) Raw displacement traces for each myosin construct collected at 100 ŒºM ATP, and in the presence or absence of 30 mM Pi . Scale bar indicates 20 nm in the vertical axis and 500 ms in the horizontal axis. Actomyosin strong-binding events as identified by the analysis are colored differently than baseline noise for each condition and used consistently through the text. (d) Method of event detection shown for a binding event for WT myosin at 0 mM P i. A single binding event in ‚Äúc‚Äù (dashed gray box) is used to illustrate event detection. A Hidden‚ÄìMarkov Model was used to identify the approximate location of a binding event (blue line in upper graph) and Change-point analysis was used to precisely determine the start, and end, of the each event (dashed green and red boxes, upper graph) based on abrupt changes in the running variance of the signal both at the start and end of the binding event (lower graphs). See Section 5 for further details of binding event detection. (e) Histogram of binding events fit to Gaussian curves. The mean SEM are shown with the sample size (n) indicated for both conditions and constructs. A 2-way ANOVA (myosin x Pi ) analysis reported no significant (p &lt; .05) differences. To further address the relative timing of powerstroke and Pirelease, we examined the rate of the transition from the unbound/weakly bound state into the strongly bound state (Figure 4.2a) using an ensemble averaging analysis previously described (Sellers &amp; Veigel, 2010; Veigel et al., 2003), with minor modifications. In this analysis, the start and end of identified actomyosin binding events were temporally aligned (see Section 5). The front ends of the binding events were fit to a double exponential (y = d1(1 exp [x* * k0 ]) + d2(1 exp[x* * k1 ])) to estimate the transition rate (k0) from the detached/weakly attached states to the postpowerstroke state, of the primary powerstroke (Figure 4.2a) and a second rate (k1) reflecting the transition associated with the secondary powerstroke (see Section 5 for additional details). The initial rate, k0 , was rapid and similar in the absence and presence of Pifor both constructs (604 and 467. s-1 for WT at 0 and 30 mM P i, and 597 and 757. s-1 for S217A at 0 and 30 mM Pi, respectively). This rate (k0) is thought to reflect several processes including the initial Brownian capture of the actin filament by myosin and the powerstroke (Blackwell et al., 2021; Veigel et al., 2003). Furthermore, the motion of the beads is damped by the viscous forces acting on the optically trapped 1-Œºm diameter bead, with a corner frequency of ~500 Hz, which limits this rate (Neuman &amp; Block, 2004). Despite these temporal constraints, if Pi -release occurred prior to the powerstroke, 30 mM Pishould have reduced this rate dramatically. This was not observed (Figure 4.2a). To further investigate whether a pause occurred prior to the powerstroke, we examined the slope of the first 2 ms of the initial transitions in the ensemble averaged data (Figure 4.2e). During the first 2 ms of this transition, the powerstroke of myosin generates an average force of 4pN (Finer, Simmons, &amp; Spudich, 1994), enabling it to move the damped bead more quickly than 500. s-1 through solution, thus making it an even more sensitive measure for detecting a delay prior to the powerstroke. 2 ms was chosen because 90% of the powerstroke was completed within this time frame and a longer time window would include the plateau after the powerstroke was completed and thus would not reflect the time during the primary powerstroke (Figure 4.2). The slope of linear fits to these data show that for both constructs (WT and S217A), and conditions (0 and 30 mM Pi), the transition during the first 2 ms was extremely rapid and occurred immediately upon strongly binding to the actin filament (Figure 4.2e). This result strongly suggests that myosin generates the powerstroke immediately upon strongly binding to the actin filament and without a delay to allow for the release of Pi from the active site. Ensemble averaged binding events from Scott Marang 2021. To confirm that our analyses could detect a delay in the generation of the powerstroke if it occurred, we performed simulations of single binding events in which myosin bound to actin and either, rapidly generated a powerstroke (Figure 4.2b) or paused with a time constant of 30 ms before generating a step (Figure 4.2c). The time constant for Pi -release was chosen to be consistent with the average measured rate of P i-release from the S217A construct from three different reports (Forgacs et al., 2009; Gunther et al., 2020; Llinas et al., 2015). Analysis of these simulated data confirmed that such a pause would have appeared as a zero slope during the first 2 ms of the binding event (Figure 4.2f) and would have been visible as a slowed rate of transition into the strongly bound state in the ensemble average analysis (Figure 4.2d). In contrast to this prediction for a Pi -release first model, we observed a very rapid transition from bound to unbound in the experimental data in both constructs, as well as in the absence and presence of added Pi (Figure 4.2e). There was also no significant effect on the rates of transitions in the ensemble average analysis in the experimental data (Figure 4.2d vs.¬†a). Collectively, these findings suggest that neither elevated Pinor the S217A substitution slowed the rate of myosin‚Äôs powerstroke, or induced a pause prior to generation of the powerstroke. To expound upoun the details for Figure 4.1, in (a) the events detected as indicated in Figure 4.1 were aligned and averaged for each condition and construct. Both the start and end of events were temporally aligned and the start fit with a double exponential fit: y = d1 (1 - exp[-k0 * x]) + d2 (1 - exp[-k1 * x]), where d1 is the displacement associated with the primary powerstroke and d2 the secondary powerstroke. k0 and k1 represent the rates of the transition from unbound to the postpowerstoke state and the transition to the secondary powerstroke state, respectively (see Section 5). Backward ensembles were fit with single exponentials of the form: y = d1 + (d2 *exp [k2 * x]) (see Section 5). The first component of the fit to the start of the event reflects the transition from weak/unattached to a strongly bound postpowerstroke state. These rates were 614 and 467 s-1 for WT myosin Va in the absence and presence of 30 mM Pi , respectively and 596 and 757. s-1 for the S217A construct in the absence and presence of P i, respectively. To determine the size of the secondary powerstroke (Œ¥2) the average of the last 100 data points of the front end of the ensemble averaged events were subtracted from the first 100 data points of the events aligned to the back end of the events (hollow triangle). This value was then subtracted from the total displacement to determine Œ¥1 (filled triangle with dotted line) using methods previously described (Capitanio et al., 2006). Under both conditions (0 and 30 mM Pi ) and in both constructs (WT and S217A) Œ¥1 and Œ¥2 were not significantly different. (b) Simulated single molecule binding events using either a powerstroke-first model (green) or a P i-release-first model (purple, c). Black arrows in b and c indicate the location of the powerstoke. Details of the simulations are provided in Figure S1 of the Supplementary Materials. The red arrow indicates when the powerstroke occurs during the binding event. (d) 500 binding events were simulated for each model and then ensemble averaged using the same procedure as the experimental data (see Section 5 for details). The Pi -release first data revealed a slower rate of transition into a binding event (104 vs.¬†1800 . s-1 for the P i-release- and powerstroke-first model, respectively). (e) An expanded view of the first 2 ms of the ensemble averages. The first 2 ms were used as the transition from unbound/weakly bound prepowerstroke to strongly bound postpowerstroke is &gt;90% complete in this time frame. Data points were fit to a least-squares linear fit, with the shaded area representing a 95% C.I. for each line fit. Additional parameters of this analysis are displayed in Table S1. (f) Ensemble averaged data from simulations of S217A data using a powerstroke-first model (green) and a P i-release-first model (purple) While the elevated Pidid not affect the size of myosin‚Äôs powerstroke in either construct, we also examined the duration of binding events for evidence that Pirebound to myosin‚Äôs active site. Indeed, in the WT construct, elevated Pi reduced the average lifetime (Figure 4.3a,b) suggesting that Pirebound to actomyosin and accelerated myosin‚Äôs detachment from actin. The difference in the arithmetic means was not significant, but the mean in the WT 0 mM-Pi condition was quite far from the median, indicating a skew in the distribution (Figure 4.3b). Indeed, this was because the decreased lifetime was not uniform across the distribution of binding event durations, rather it was due to a reduction in the number of long duration binding events, especially those &gt;400 ms. For example, in the presence of Pionly, one binding event lasted longer than 1,000 ms (Figure 4.3b). In contrast, in the absence of Pi , 25% of the events lasted longer than 500 ms (Figure 4.3a, main graph). The effect of Pi was most evident in a quantile-quantile (Q-Q) plot of binding event durations versus the theoretical exponential fit (Figure 4.3c). And a Kolmogorov‚ÄìSmirnov test revealed that there was a trend (p = 0.06) toward a difference between the distribution for the absence versus presence of 30 mM Pi. This finding suggests that Pirebound to longer duration events in an AM.ADP state and accelerated detachment from actin. Elevated levels of Pi did not affect the event lifetimes of S217A, however in absence of Pithis construct has a shorter bound lifetime than the WT (Figure 4.3a,b), which likely reflects acceleration in the ADP-release rate caused by this substitution (Forgacs et al., 2009; Gunther et al., 2020). The accelerated rate of ADP-release may reduce its vulnerability to the rebinding of Pi , providing an explanation for the absence of a P i-induced reduction in binding event durations (Figure 4.3b). Binding event durations and bulk assays measurements. In Figure 4.3, (a) Cumulative distribution of the lifetime of the single molecule binding events. Color scheme same as in Figure 4.1. The y-axis is truncated below 70% of events to demonstrate the effect of Pi on lifetimes. (b) inset graph, histogram of the lifetime of all binding events for each condition (Pi) and each myosin construct. Dashed vertical line indicates the arithmetic mean and boxplot underneath displays outliers &gt;1.5 times the interquartile range. A Kruskal‚ÄìWallis, nonparametric, ANOVA was used to test for significant (p &lt; .05) differences among conditions, none were observed, however the distribution of events was altered (see Section 2). (c) A quantile-quantile (Q-Q) plot showing the location and magnitude of deviation of individual event durations (points) from a theoretical single exponential fit (solid black line). A comparison of the 0 versus 30 mM Pidistributions using a Kolmogorov‚ÄìSmirnov, nonparametric test reveal a trend (p = .06) toward a difference. (d) Bar graph of Actin filament velocities from an in vitro motility assay performed for each condition and construct. Bar represents mean ¬± SEM from eight experiments for each condition (points). Each data point represents the average velocity of three separate fields of view, that contained ~5‚Äì25 actin filament trajectories. Data were collected at 10 frames per second and the displacements were quantified frame by frame using MTrackJ (ImageJ plugin) as previously described (Debold, Turner, Stout, &amp; Walcott, 2011). Data collected at 2 mM ATP at 125 mM total ionic strength. No significant (p &lt; .05) differences were detected with a one-way ANOVA. The frequency of binding events was determined by dividing the total number of binding events by the total amount of time collected. The values were 0.99 and 0.98. s-1 for WT myosin Va in the absence and presence of 30 mM P i, respectively; and 0.99 and 1.00.s-1 for the S217A construct in the absence and presence of 30 mM Pi, respectively. These findings are consistent with myosin‚Äôs attachment rate being unaffected by elevated Pior by the presence of the S217A mutation. To determine the fate of the cross-bridge following the powerstroke and the rebinding of Pi, we again used the ensembleaveraging analysis. A similar analysis has been used previously todetect and quantify the putative secondary powerstroke, or hitch, that is temporally associated with ADP-release by myosin (Sellers &amp; Veigel, 2010; Veigel et al., 2003). We determined the size of the hitch by quantifying the difference in magnitude between the final displacements found at the ends of the forward ensembles and the displacement found at the beginning of the backwards ensembles, for each condition (Figure 4.2a). This analysis confirmed that WT myosin Va generates a hitch that was 25% of the total displacement (~2 nm) consistent with previous estimates using a myosin Va construct with a longer lever arm (Sellers &amp; Veigel, 2010). Elevated levels of Pidid not affect the magnitude of the hitch, nor did the presence of the S217A mutation (Figure 4.2a). However, given that only the longest 25% of binding events were affected by Pi (Figure 4.3a,b) it is possible that the rebinding of Pidid occur prior to the hitch. This was also likely due to the limited amount of time spent in rigor at the final post-hitch displacement at the relatively high 100 ŒºM [ATP], a concentration needed to ensure that Pi primarily rebound to the AM.ADP state. Previous reports suggest that the rebinding of Pito actomyosin in the AM.ADP state can induce the reversal of the powerstroke, especially when the cross-bridge is strained (Woody et al., 2019). In our assay this would have appeared as displacement in the opposite direction to the initial powerstoke, which would have occurred sometime after the initial powerstroke but while myosin remained strongly bound to the actin filament. However, we did not see any evidence of this behavior either in the raw displacement records (Figure 4.1c), or in the ensemble average analysis (Figure 4.3a), where a reversal should have appeared as a downward slope in the transition out of a binding event, as others have observed (Woody et al., 2019). It is possible that any reversal of the powerstroke and subsequent detachment from actin occurred faster than the resolution of our instrumentation (~2 ms). Therefore, we measured the effect of 30 mM Pi on the velocity of actin filaments in an in vitro motility assay (Vactin, Figure 4.3d); if Piinduced a reversal of the powerstroke we would expect that Vactin would be decreased by the presence of Pi in this assay. However, Vactin was unaffected by 30 mM Piconcentration (Figure 4.3c). Thus, under the present conditions, the rebinding of Pidoes not appear to cause a reversal of the powerstroke in an S1 construct of myosin Va, despite accelerating the detachment rate in WT of the longest 25% of events (Figure 4.3a). 5.3 Discussion 5.3.1 The powerstroke precedes Pi-release from the active site Functional evidence from both myosin II and myosin V suggests that the powerstroke occurs prior to P i-release (Muretta et al., 2015; Sleep et al., 2005; Trivedi et al., 2015; Woody et al., 2019), while recent structural evidence from x-ray crystallography studies led to the notion that P i-release must occur prior to the powerstroke (Houdusse &amp; Sweeney, 2016; Llinas et al., 2015; Robert-Paganin et al., 2020). Based on new structural insights, it was proposed (Llinas et al., 2015) that this seemingly contradictory evidence could be resolved if Pi is released from the active site very rapidly but pauses temporarily in the Pi exit tunnel, before being released into solution. Structural evidence was provided to support this model, including the use of the S217A mutation in switch I which slows P i-release from the active site (Forgacs et al., 2009; Llinas et al., 2015). We directly tested this new model in two ways; first, by elevating P i, and second by introducing a mutation that slows Pi -release from the active site. Using the WT construct, we found that in the presence of 30 mM Pimyosin generated a powerstroke that was similar in size (Figure 4.1e) and rate (Figure 4.2e) to that observed in the absence of P i. In this experiment, the elevated Piin the buffer enables Pito rebind to the active site, therefore if P i-release gates the powerstroke, the Piwould rebind to myosin prior to the generation of a powerstroke. This would have been evident at the single molecule level as a reduction in the size and rate of the powerstroke. However, no reductions in the size or the rate of the powerstroke were observed (Figures 1 and 2). Additionally, the altered distribution of strongly bound lifetimes (Figure 4.3a‚Äìc) provides evidence that Pi rebinds to myosin‚Äôs active site, because Piis known to decrease myosin‚Äôs affinity for actin, thereby accelerating detachment (Geeves &amp; Holmes, 2005; Holmes &amp; Geeves, 2000; Takagi et al., 2004). Thus, the most likely scenario in this experiment (see blue arrows in Figure 4) is that myosin initially bound to the actin filament, and rapidly generated a powerstroke (‚â•500. s-1 , see Figure 4.2a,e) that was similar in size to that observed in the absence of Pi (Figure 4.1e). Myosin then released P i, at a rate of 150‚Äì200. s-1 (Cruz, Wells, Rosenfeld, Ostap, &amp; Sweeney, 1999; Forgacs et al., 2009; Llinas et al., 2015; Rosenfeld &amp; Sweeney, 2004; Trivedi et al., 2015), but in 25% of the events a new Pifrom solution quickly rebound in the active site while myosin was in an AM.ADP state. The rebinding of Pithen induced detachment from actin leading to a detached M.ADP.Pi state, which produced an alteration in event lifetimes (Figure 4.3a‚Äìc). This scenario suggests that the rebinding of Pi induces detachment by inducing the opening of the cleft in the upper 50 kDa domain, which modulates myosin‚Äôs affinity for actin and is putatively coupled to the presence of Piin the active site (Geeves &amp; Holmes, 2005). Interestingly, this suggests that there might be hysteresis in the transduction process, as myosin appears to be able to bind strongly to actin with Pi still in the active site during force-generation, but rapidly detaches from actin upon Pi -rebinding. We (Debold et al., 2013) and others (Linari, Caremani, &amp; Lombardi, 2010) have suggested a model for this hysteresis based on observations in skeletal muscle myosin II. In a second test of the P i-release-first model, we used a myosin Va S1 construct with S217A mutation in the switch I region of the active site, which has been shown to slow Pi -release from the active site by ~10-fold (Forgacs et al., 2009; Gunther et al., 2020; Llinas et al., 2015). Serine 217 (myosin Va numbering) is an absolutely conserved residue that is the first serine in the NDNSSRFG sequence of switch I (Forgacs et al., 2009). Its OH-group putatively forms hydrogen bonds with the gamma-phosphate, ATP and the NH2 of Arginine 215, and it is thought to participate in proton transfer during the hydrolysis process (Forgacs et al., 2009; Smith &amp; Rayment, 1996). The S217A mutation removes the ability of the OH-group to participate in proton transfer and likely weakens the contacts between switch-I and the gamma-phosphate of ATP (Forgacs et al., 2009). This mutation also appears to slow the weak- to strong-binding transition, based on observations from solution kinetics; an effect that likely also contributes to the reduced steady-state ATPase rate (Forgacs et al., 2009; Gunther et al., 2020). However, the most relevant effect for the present study is the 10-fold reduction in the release of Pi from actomyosin (Forgacs et al., 2009), which occurs by slowing its release from the active site (Llinas et al., 2015). Importantly, the slowed rate of Pi-release from this construct means it is not reliant on Pi rebinding to the active site as in the experiments with elevated Piin solution. This provides an independent test of the hypothesis that P i-release from the active site gates myosin‚Äôs powerstroke. The predicted outcome in the laser trap assay, however, is the same if Pi-release precedes the powerstroke. Myosin should bind to actin, and only after a long delay that allows for Pito be released from the active site, should it generate a powerstroke. Contrary to this prediction, we observed that the S217A construct did not affect the size (Figure 4.1e) or rate (Figure 4.2e) of the powerstroke generated, consistent with our cursory examination of this construct using a less sophisticated analysis (Gunther et al., 2020). Our simulations of a P i-release-first model confirmed that our analysis of these data had the sensitivity to detect a change in either variable (Figure 4.2b,c). This, like the observation with WT myosin in the presence of Pi , suggests that upon strongly binding to actin, myosin rapidly generates a powerstroke with Pi still in its active site. These findings and conclusions are consistent with previous FRET-based studies showing that the powerstroke occurs at least twice as fast as Pi -release into solution (Muretta et al., 2015; Trivedi et al., 2015). However, the use of the S217A construct in the present investigation demonstrates that the powerstroke occurs while Pi is still in myosin‚Äôs active site. Therefore, these findings would be inconsistent with a model in which Piis released quickly from the active site before stalling the exit tunnel (Houdusse &amp; Sweeney, 2016; Robert-Paganin et al., 2020; Sweeney &amp; Houdusse, 2010) because this mutation prevents entry into the exit tunnel (Llinas et al., 2015). Our conclusion is also consistent with recent findings from cardiac muscle myosin using an ultra-fast laser trap assay where the rate of the powerstroke was estimated to be 1,000. s-1 under a 1.5pN resistive load (Woody et al., 2019), roughly 50-fold faster than Pi -release for cardiac myosin (Gunther et al., 2019; Malik et al., 2011). Similar rates of the powerstoke were reported in the first description of an ultrafast laser trap assay using fast skeletal muscle myosin II under a 1.5 pN resistive load (Capitanio et al., 2012), a rate 2 orders of magnitude faster than the 20‚Äì30. s-1 rate of Pi -release in solution reported for fast skeletal myosin II (Muretta et al., 2015). Interestingly, the rate of the powerstroke has been shown to increase with the applied resistive load (Capitanio et al., 2012; Woody et al., 2019) therefore the rate observed in the present study (‚â•500. s-1 ) under the minimal load of our laser trap assay (7 nm * 0.04 pN/nm ‚âà 0.28pN) appears consistent with the 1000‚Äì5000 s-1 rate from 1.5 to 5 pN of resistive load in an ultra-fast laser trap assay using skeletal and cardiac myosin II (Capitanio et al., 2012; Woody et al., 2019).As indicated above the present findings are difficult to reconcile with the idea that Pi -release precedes the powerstroke, as has been suggested based on high resolution crystal structures (Houdusse &amp; Sweeney, 2016; Robert-Paganin et al., 2020; Sweeney &amp; Houdusse, 2010). Indeed, for our data to be consistent with a P i-release-first model, Piwould have to be released from the active site at &gt;1000. s-1 , and then remain in the exit tunnel until it appeared in solution at a rate of ~150. s-1 for the WT myosin Va construct. Piwould have to remain in the exit tunnel for an even longer duration in the S217A construct, where the rate of Pi -release rate is reduced to 15‚Äì20. s-1 (Forgacs et al., 2009). Indeed, Pi would need to be released from the active site at &gt;1000. s-1 , but remain in the exit tunnel for roughly 50 ms, before it is released into solution, at the rate measured for the S217A construct 15‚Äì20 . s-1 . This seems an inordinately long duration for Pito remain trapped in the exit tunnel given that the putative contacts thought to impede P i‚Äôs exit are weak electrostatic interactions. Therefore, a model in which the powerstroke occurs while Piremains in the active site, and thus precedes Pi release, seems the most plausible explanation for these findings (Figure 4). Our findings also suggest that myosin transiently exists in a post powerstroke state while Pi remains bound in the active site; a structure that has yet to be captured using x-ray crystallography (Geeves &amp; Holmes, 2005; Llinas et al., 2015; Rayment et al., 1993b; Smith &amp; Rayment, 1996). The reasons for this are unclear, however there are several plausible explanations why this structural state might be difficult to capture; first among these is the inability to crystallize myosin in the presence of actin filaments. This structure is thought to be occupied only while myosin is strongly bound to the actin filament (Geeves &amp; Holmes, 2005; Takagi et al., 2004; Woody et al., 2019), thus it may be extremely difficult to reproduce such a structure without an actin filament. While recent advances in cryo-electron microscopy may present an alternative method to obtain this structure, the speed of both the powerstroke ‚â•500, s-1 (Figure 4.2e) and Pi-release (150‚Äì200 s-1[Forgacs et al., 2009; Llinas et al., 2015; Trivediet al., 2015]) suggest the state is very transient and therefore will be difficult to capture by this methodology. This is supported by the observation that a prepowerstroke-like state can only be captured when myosin is trapped in a transition-like state using ADP and either beryllium, vanadate or aluminum fluoride (Dominguez, Freyzon, Trybus, &amp; Cohen, 1998; Mentes et al., 2018; Reubold, Eschenburg, Becker, Kull, &amp; Manstein, 2003; Smith &amp; Rayment, 1996). It is also clear from single muscle fiber experiments (Debold et al., 2004; Hibberd et al., 1985) and more recently from single molecule studies using an ultra-fast load-clamp laser trap assay (Woody et al., 2019), that myosin‚Äôs affinity for Pi is strain-dependent, with Pimore readily rebinding to the active site under a high force opposing the direction of the powerstroke, a conclusion also reached based on experiments using myosin Va in a load-clamped laser trap (Sellers &amp; Veigel, 2010). Such a strain would not be present under the conditions currently employed to obtain either x-ray crystallography or cryo-EM structures of myosin. Our findings are, however, consistent with reports on myosin‚Äôs structural dynamics in solution using FRET probes, where lever arm rotation is observed to occur very rapidly (300‚Äì450. s-1 ) and is a least two-fold faster than the release of Piinto solution (Muretta et al., 2015; Trivedi et al., 2015). Our findings are also consistent with FRET studies demonstrating that, upon strongly binding to actin, the cleft in the actin-binding domain rapidly closes and that this closure is coupled to rotation of the lever arm from the pre- to postpowerstroke state (Conibear et al., 2003; Yengo et al., 2002). And it appears that the closure of the actin-binding cleft occurs prior to the release of Pi , based on a combination of FRET and kinetic experiments (Sun et al., 2008). This is also supported by recent x-ray crystallography structures showing that myosin exhibits a closed cleft during the weak- to strongly bound transition with ADP and Pi still in the active site (Franz et al., 2020). Taken together with the present observations, these findings suggest that formation of the strong-bond with actin is the structural event that triggers the powerstroke rather than the release of Pifrom the active site. 5.3.2 The myosin Va powerstroke occurs in two phases It is a widely held view that Pidoes not readily rebind to myosin in the absence of a significant resistive load or strain (Geeves &amp; Holmes, 2005; Sweeney &amp; Houdusse, 2010; Takagi et al., 2004). However, the present findings demonstrate that in a single molecule laser trap assay, in which myosin experiences very low loads (~0.28 pN), elevated levels of Pialtered the distribution of event lifetimes (Figure 4.3b). At the ATP concentration used (100 ŒºM), this provides evidence that Pi rebound to the active site in an AM.ADP state, and induced detachment from actin an AM.ADP. Pistate. Prior experiments using a laser trap assay capable of applying load to an attached cross-bridge suggested that Pi may only rebind to a strained crossbridge using either myosin Va (Sellers &amp; Veigel, 2010) or cardiac myosin (Woody et al., 2019), however lower concentrations of Pi(10 mM) were used in these investigations, therefore we may have observed rebinding at lower loads due to the higher concentration of Pi levels (30 mM) increasing the probability of rebinding. Furthermore, our data suggest that only the longest lasting attachments were eliminated in the presence of elevated Pi(Figure 4.3a), therefore the combination of a high [Pi ] and long-lived AM.ADP state may be required to elicit rebinding under minimal resistive strain. Such an effect would be expected to reduce drag on actin filaments under unloaded conditions, as Pirebinding detaches the longest lived strongly bound crossbridges. Consistent with this idea, elevated Pi levels increase actin filament velocity in an in vitro assay (Debold et al., 2011), and unloaded shortening velocity in skinned single muscle fibers (Pate &amp; Cooke, 1989). Pi -induced acceleration of detachment also appears to occur in myosin Va, where elevated levels of Pi shorten myosin Va‚Äôs run length on an actin filament in an unloaded, single molecule, TIRF assay (Baker et al., 2004). 5.3.3 What is the fate of the cross-bridge after Pi redbinds When phosphate rebinds to myosin II‚Äôs active site in an AM.ADP state it accelerates detachment from actin (Baker et al., 2002; Debold et al., 2013; Takagi et al., 2004). The P i-induced decrease in event lifetime observed in the present study (Figure 4.3a) confirms that this also occurs in myosin Va, but what is the fate of the cross-bridge after Pirebinds to the active site? If the powerstroke can only occur after Pirelease from the active site, then it would be expected that the rebinding of Pi would prevent the powerstroke from occurring and then accelerate detachment from actin, as suggested based on structural observations (Llinas et al., 2015; Robert-Paganin et al., 2020; Sweeney &amp; Houdusse, 2010). However, our observation that the powerstroke occurs rapidly upon binding to actin (Figures 1 and 2) is inconsistent with the powerstroke occurring after Pi -release. Our results suggest that myosin‚Äôs detachment prior to the generation of the powerstroke is not the fate of a cross-bridge following the rebinding of Pi to the active site. In contrast, if the powerstroke precedes Pi-release from the active site, the powerstroke may be reversed once Pi rebinds to the active site, returning the cross-bridge to the prepowerstroke AM.ADP. Pi state from which detachment occurs rapidly (Dantzig et al., 1992; Takagi et al., 2004). Indeed, in single molecule laser trap assays, displacements in the opposite direction of the original powerstroke have been observed, in particular under a high resistive load, and may occur more readily in the presence of Pi (Takagi et al., 2004; Woody et al., 2019). However, the position of the lever arm was not directly monitored in these prior studies so it is not clear if the backward motion detected was a reverse of the lever arm rotation or if the high resistive load caused myosin to slip on actin (Debold et al., 2005). These observations were further complicated by the use of low ATP concentrations (1 ŒºM), which increases the probability that Pi rebound not to an AM.ADP state but the rigor state, creating an AM. Pi state instead of an AM,ADP.Pi state (Amrute-Nayak et al., 2008). In the present study we did not see evidence of a reversal of myosin‚Äôs powerstroke in the presence of elevated Pi , under any condition or using either construct (Figures 1a and 2a). If present, reversals should have been evident as an abrupt reversal of the displacement following a powerstroke while in a low variance state, but this was not seen in the raw displacement records (Figure 4.1a). Even if such reversals occurred with low frequency, they should have been evident as a downward slope at the back end of binding events in ensemble averaging, but again this was not observed for either construct or in the presence of Pi(Figure 4.2a). It is possible that such reversals occurred faster than the time resolution of our instrument (~2 ms) and therefore were invisible in the present study. If this was the case it would put time constraints on the rate of the reversal and the duration of the AM.ADP.Pi state following a reversal, indeed both events would have to occur at &gt;500. s-1 to have been invisible in our analyses. A recent report, using cardiac myosin II, suggested that reversals occur as slow as 250 s-1 (Woody et al., 2019), thus it would have to occur more quickly in myosin Va for it to be invisible in the present investigation. Alternatively, it is possible that myosin detaches from actin without reversing the powerstroke following P i-rebinding, as has been proposed (Debold et al., 2013). In this type of model, the rebinding of Piinduces detachment from a postpowerstroke state by introducing a Pi-dependent branch in the cross-bridge pathway (blue arrows, Figure 4). This kind of model can also explain the Pi-induced reduction in muscle force and offers an explanation for two observations that have been difficult to reconcile with a model containing a reversal of the powerstroke (Debold et al., 2013). Specifically, the P i-induced enhancement of actin filament velocity at low pH in the motility assay (Debold et al., 2011; Greenberg &amp; Moore, 2010) and the maintenance of a high ATPase rate when Pi levels are elevated despite large reductions in isometric force of muscle (Linari et al., 2010). Indeed, in the present study elevated levels of Pi had little or no effect on actin fila- ment velocity in a motility assay using either the WT or S217A construct (Figure 4.3d). If Piinduced reversals of the powerstroke while myosin was strongly bound to actin, we would have expected to see a decrease in Vactin . Thus, a model of the cross-bridge cycle in which the rebinding of Pican induce detachment from a postpowerstroke state is the most plausible and provides the best explanation of functional and structural findings (Figure 4.4). In figure 4.4, the pathway followed by wild-type is shown with black arrows and numbers, with the P i-dependent changes shown with blue arrows. The rates for the S217A are only displayed where they differed from WT myosin (orange numbers). Progressing from left to right, the attachment rate (1 s-1) is taken from the frequency binding events (see Section 2). We did not observe a distinct population of events generating zero displacement (Figure 4.1e) suggesting that the rate of detachment from a prepowerstroke state, if it occurs, is faster than the time resolution of our event detection (~2 ms). The key finding is that for both constructs, and in the absence of presence of 30 mM Pithe powerstroke occurred immediately upon binding to actin, consistent with work from myosin II in an ultra-fast laser trap assay at 1000. s-1 (Capitanio et al., 2012; Woody et al., 2019). No evidence was observed of a reversal of the hitch (dashed line). The P i-release rate for WT and S217A represent the maximum actin activated rate from (Llinas et al., 2015). Since Pi reduced the bound lifetime (Figure 4.3a) we believe that Pirebinds to an AM.ADP state and induces detachment from a postpowerstroke state (Debold, Walcott, Woodward, &amp; Turner, 2013). Elevated Pionly eliminated the longest 25% of binding events in the WT myosin and not S217A (Figure 4.3a), thus this pathway was not active in the S217A under the present conditions. We also did not see evidence that Pi reduced the step size, suggesting that myosin in the ADP.Pi state did not readily reattach to actin in the post powerstroke state after Pi induced detachment (dashed blue line). The ADP-release rate and the secondary powerstroke (i.e., hitch) were combined for simplicity, but may occur in distinct steps (Gunther et al., 2020). Values for ATP-binding and hydrolysis are taken from estimates in solution (Forgacs et al., 2009; Gunther et al., 2020). Hydrolysis and the recovery stroke were combined for simplicity but likely occur at different rates (Gunther et al., 2020). Proposed model of cross-bridge cycle. A simplified model postulating the effects of Pi and the S217A myosin‚Äôs cross-cycle. 5.4 Supplemental Material Conceptual models of the simulated data. The kinetic scheme for the S217A simulations is based on the values shown in Figure 5.4 of the main text of Chapter 5. a) Figures show the two different cross-bridge models using for single molecule simulations. In powerstroke-first simulation (top left) upon binding to actin myosin generated an instantaneous displacement of 6nm, with ADP and Pi still in the active site, 2) Pi is released then from a post-powestroke AM-D-Pi state, 3) ADP is released and is followed by the completion of the secondary powerstroke or hitch, and 4) myosin is left in a rigor state, AM, until ATP induces detachment at the rate corresponding to the second order dissociation constant and the ATP concentration of 100uM. b) The cross-bridge cycle used for the Pi-release-first model was the same as the powerstroke-first model except for the timing of the powerstroke. In these simulations upon binding actin myosin myosin does not generate a powerstroke, until Pi was released from a pre-powerstroke AM-D-Pi state at 30s-1. This creates a pause after myosin strongly-binds to the actin filament where there is no net displacement until Pi is released from the active site at which point in generates the same 6nm displacement. 2) ADP is then released from a post powerstroke state, which is followed by a 2nm secondary powerstroke, and 3) the AM rigor state persists until ATP induced detachment at the rate corresponding to the ATP concentration and the second-order binding constant shown in Figure 4 of the main text. c) Bar graphs showing the underlying lifetime distributions used to define the rate of each biochemical transition. Rates for Pi-release, ADP-release, and ATP binding were taken from values reported from solution kinetic studies as indicated in Figure 5.4 of the main text. The attachment rate of 1s-1 was taken from the measured frequency in the present data (see Figure 4.3b in the main text). The Brownian motion of the bead-actin-bead assembly was generated by sampling from a Gaussian distribution with a mean of 0 and standard deviation 8nm, the standard deviation was reduced to 4nm during a binding event. These values were chosen to match signal characteristics of the experimentally observed in displacement data records. Each of the above histogram displays representative results from 100,000 random samples from each of the exponential distributions. Distributions were truncated below 1 ms duration. (i.e.¬†5 datapoints at 5kHz), to match the time resolution of experimental data. The attachment rate was chosen to have a minimum time between events of 100 ms and a maximum time between events of 2.5 seconds, just to limit the size of the datasets generated. A single molecule event was constructed by randomly selecting a value from the power density function of each distribution and this value provided the amount of time that the respective event would spend in each kinetic step. The powerstroke was modeled as instantaneous, occurring in &lt;200¬µs. In simultaneous in which the powerstroke occurred prior to Pi-release (powerstroke-first model) the displacement was made to occur simultaneous with the decrease in signal variance. In simulations where the Pi-release occurred prior to the powerstroke the rate of the displacement was the same but only occurred after Pi was release at mean value of 30s-1. All other rates of the kinetic transitions were identical between the two simulation protocols. 5.5 Detecting removal of the hitch To probe the feasibility of the claim that a rebinding Pi can induce detachment prior to the hitch, which would in turn decrease the overall hitch size as seen in the ensemble averages, we simulated data with various percentages of events that completed the hitch. These simulations serve the purpose to demonstrate that if Pi rebinding does indeed detach myosin before realizing additional displacement from the hitch then we can attempt to estimate what percentage of events would need to be effected by Pi-induced detachment in order to observe a noticeable effect in the ensemble averages. Datasets were simulated with the {lasertrapr} app containing 500 single molecule binding events each. All events had a 5nm initial displacement accompanied by a 2nm hitch. The datasets were then analyzed and ensemble averaged using the {lasertrapr} app. Forwards ensembles were fit a double exponential and the backwards fit with a single exponential. Full forwards and backwards ensembles are shown in figure 5.6 along with the table of the exponential fit parameters. In the dataset where all events were allowed to complete the hitch (labeled as ‚Äú100%_simulations‚Äù) the double exponential estimated the initial step (d1) to be 4.8nm and the hitch (d2) 2.2nm. Interestingly, in the datasets that follow where 90%, 75%, and 50% of all events were permitted to proceed with a hitch, the detected hitch was approximately 91%, 73%, and 52% the size as of the control ‚Äú100%_simulations‚Äù group. These simulations show there is a possibility of 1) the ability of the analysis to be sensitive to changes in the size of the hitch, and 2) that the percentage decrease in the measured size of the hitch as estimated from the double exponential fits to the forward ensembles could be used as a method to estimate the percentage of events that did not undergo additional displacement with the hitch. For the case here in regards to high levels of Pi, we could possibly estimate that number/percentage events that were effected/ended by Pi-rebinding. In th real experimental data, the hitch size from Figure 5.2 for the WT 30mM-Pi conditions was 94% of the control conditions indicating that, if these described assumptions were to be true, then only 6% events were effected (i.e.¬†terminated) by Pi-rebinding. This would roughly correspond to 27 events. While the average time on for the WT 0mM-Pi conditions was 230ms, removing the longest 27 events from the experiments data set yields an average attachment time of 132 milliseconds which closely resembles the average attachment time from the WT 30mM-Pi conditions of 145ms. While analyzing for a decrease in the size of the hitch will most likely provide the most robust method for determining if Pi-induced detachment can reduce the size of the hitch. Another option would be to see if the size of the overall displacement distribution would reduce; however, additional simulation in Figure 5.7 show that this method is less sensitive to the disappearance of the hitch at high ATP concentrations. In these simulations, two data sets were simulated. Both had an initial stroke displacement of 5nm and one had a 2nm and one had no hitches in any events. The data was simulated to mimic higher [ATP] and ATP binding rate (i.e.¬†rigor lifetime) which was simulated with a truncated exponential with a rate of 200/sec (Gunther et al. (2020) measured myoV-WT at 2/uM/sec) and a minimum duration of 5 milliseconds. Data was analyzed with HM-Model/Changepoint within the {lasertrapr} app and summarized. We were unable to detect a difference in the displacement distributions. This is most likely because the time spent at the final displacement (d2) during ‚Äúrigor‚Äù is too short to influence the total step displacement during the step size calculation. In the single molecule analyzer, the step size is determined by the average of the middle ~90% data points between the changepoint identified start and end of the event. The ends are trimmed to avoid averaging the transitions between populations, but this also includes less data from the final d2 displacement into the average. Moreover, the ATP concentration would have an effect on this calculation as the calculation of an event‚Äôs average displacement essentially is a weighted average of the d1 and d2 displacements. The relative weights would then be dependent on the rates of ADP-release and ATP-binding because these rates would dictate how much time should be spent in a given state/displacement. Figure 5.1: Step size comparison. No signigicant differences found in the average displacement between two simulated conditions with and without the hitch. Plot is interactive online. ## ## Welch Two Sample t-test ## ## data: displacement_nm by conditions ## t = -0.97926, df = 574.57, p-value ## = 0.3279 ## alternative hypothesis: true difference in means between group hitch_simulation and group no-hitch_simulation is not equal to 0 ## 95 percent confidence interval: ## -1.854002 0.620343 ## sample estimates: ## mean in group hitch_simulation ## 4.569154 ## mean in group no-hitch_simulation ## 5.185984 5.6 What state is S217A detaching from? In a previous section we demonstrated that the WT myosin was vulnerable to Pi rebinding as evidenced by a decrease in attachment lifetime and a skewed Q-Q plot. However, for the mutant S217A the attachment lifetimes were unchanged (143 vs 127 ms, 0mM vs 30mM-Pi). With this many questions arose - Why does the S217A under 0mM-Pi have faster attachment time as compared to the WT?, Why is S217A‚Äôs event lifetimes largely un-affected by 30mM-Pi?. There could be many different ways in which the results could have manifested - Was the slowed release of Pi from the active site causing a pre-mature detachment?, If Pi is slow to leave the active site, is it also slow to re-bind?, or possibly even Is the S217A impervious to Pi rebinding?. In order to test these questions we repeated these experiments with the S217A under the same conditions, but we decreased the ATP concentration to 5uM ATP. If the slowed Pi from the active site was able to cause a premature detachment by ‚Äúknocking itself off‚Äù from actin then decreasing the ATP should not increase the attachment lifetime as it does for WT myosin (Finer, Simmons, and Spudich (1994)). If the attachment time at low ATP concentration is equivalent to the attachment time at high ATP for the S217A, then this result would suggest detachment from a reformed ADP.Pi state. However, if lowering ATP concentration increases the attachment time as compared to the higher ATP conditions, then most likely that S217A would be detaching from a rigor state. Additional statistical tests show there are no differences between the 0mM-Pi and 30mM-Pi groups at low ATP in regards to displacements: ## ## Welch Two Sample t-test ## ## data: low_atp_0$displacement_nm and low_atp_30$displacement_nm ## t = 1.3269, df = 188.46, p-value = ## 0.1861 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -0.8518689 4.3528821 ## sample estimates: ## mean of x mean of y ## 6.285300 4.534793 or for attachment time: ## ## Kruskal-Wallis rank sum test ## ## data: time_on_ms by pH ## Kruskal-Wallis chi-squared = ## 1.0536, df = 1, p-value = 0.3047 Since decreasing the ATP concentration increased the attachment lifetime of the S217A, the mutant is most likely detaching from a rigor state, which would also indicate detachment from rigor at the higher ATP concentration in the published results as well. While ATP is most likely ending the events for S217A, the attachment times were still ~two-fold faster in the S217A at high ATP concentration compared to the WT. The simplest explanation is that at high ATP concentration myosin‚Äôs attachment time is dominated by the ADP-bound state and the mutant does have a ~two-fold faster ADP release rate as measured by solution kinetics (Gunther et al. (2020)). Perhaps the most interesting finding here is that the S217A mutant was un-affected by 30mM-Pi in all experimental conditions (5uM, and 100uM-ATP). There were no changes to displacement or attachment times - could that mean that the S217A is not vulnerable to Pi-rebinding? There is no data that supports the ability for the S217A to rebind a Pi in this dataset. However, an important caveat here is that at a combined trap stiffness of 0.04 pN/nm in the present study, multiplied by our 7nm displacements in all conditions, the myosins were experiencing a very low (0.28 pN) resistive load. This is of importance to consider since myosin‚Äôs ability to rebind Pi is believed to be load sensitive. Which makes you think, could a mutation in the switch 1 region of myosin‚Äôs active alter the load dependence of Pi-induced detachment? This would undoubtedly be a fruitful avenue to explore in future studies. 5.6.1 Exponential fits to attachment times Since attachment times are exponentially distributed, the data can be transformed from a standard PDF (usually represented by a binned histogram) into a cumulative density distribution which is interpreted similarly to a survival curve. The empirical cumulative distribution function (ECDF) displays the the percentage of events that have been completed (y-axis) by a certain time period (x-axis). Myosin‚Äôs attachment time to actin is dependent on many factors which have underlying rates that determine the overall attachment time. These cumulative distributions of attachments times can be fit with 1, 2, or 3 component exponential curves to gain further insight into those rates/processes underlying the attachment times. The form for the triple exponential a la Marco Capitanio et al. (2012) is: \\[ y = A1*( 1-exp( -k1 * x ))) + A2*( 1- exp( -k2 * x )) + A3*( 1- exp( -k3 * x)) - Alost \\] Removal of the additional exponential components yields the double and single exponential equations. The cumulative distributions for our attachment times are fit with 1, 2, and 3 exponential curves and displayed in Figure 5.8. Assuming the conclusion from the main text of Chapter 5 that myosin‚Äôs powerstroke occurs rapidly upon binding actin and prior to the release of Pi, after force generation the time myosin then spends strongly bound to an actin filament is dependent on three rates 1) Pi-release, 2) ADP-release, and 3) the rate of ATP to rebind and induce detachment. Interestingly, the cumulative distribution of attachment times for the WT under 0mM-Pi was best fit by a triple exponential. Presumably, the rates would reflect the underlying rates of the 3 biochemical states that comprise myosin‚Äôs attachment time as detailed in the conceptual model in Figure 5.4 in the main text. Moreover, the WT at 30mM-Pi seems more reasonably fit by a 2-exp fit than with no Pi present which supports the model proposed in the main text of a Pi-induced detachment since the addition of Pi removes the need for a third exponential component to best describe the distribution. If this were the case the most likely explanation would be that the rate of the re-binding of Pi would compete with the rate of ADP-release from the active site, and if Pi rebinds prior to ADP-release then detachment occurs without the need of an ATP-induced detachment eliminating the probability of having longer events and needing the 3rd-exp component to the fit to describe the distribution. Figure 5.2: Exponential fits to the cumalative distributions of attachment times. The observed data is in the thick grey line. 1-, 2-, and 3-component exponential fits are shown. Plot is interactive online. Table 5.1: 1-exp parameter estimates myo pi type Alost A1 k1 myoV-WT 0mM-Pi 1-exp 0.4350824 1.364900 11.809263 myoV-WT 30mM-Pi 1-exp 0.4177824 1.424976 9.645903 myoV-S217A 0mM-Pi 1-exp 0.4951658 1.477321 10.972758 myoV-S217A 30mM-Pi 1-exp 0.5352932 1.587078 10.220117 Table 5.2: 2-exp parameter estimates myo pi type Alost A1 k1 A2 k2 myoV-WT 0mM-Pi 2-exp -2.8883601 -3.435291 128.75123 1.467507 12.91284 myoV-WT 30mM-Pi 2-exp -0.8095855 -1.347415 80.56898 1.526716 10.65564 myoV-S217A 0mM-Pi 2-exp -1.8880768 -2.557349 89.01682 1.634570 12.32603 myoV-S217A 30mM-Pi 2-exp -0.4275459 -3.709541 30.02066 4.256695 18.20712 Table 5.3: 3-exp parameter estimates myo pi type Alost A1 k1 A2 k2 A3 k3 myoV-WT 0mM-Pi 3-exp -0.6282920 -5.538877 41.87583 5.5049989 30.53690 0.3817569 3.638942 myoV-WT 30mM-Pi 3-exp -0.4668085 -1.562186 55.33599 0.7026435 32.83311 1.3865160 10.023322 myoV-S217A 0mM-Pi 3-exp -0.5488499 -9.580457 35.12021 9.3694913 30.14432 0.6585705 6.955534 myoV-S217A 30mM-Pi 3-exp -0.4461448 -9.514064 26.36782 9.9907550 21.62430 0.1518810 1.121036 "],["ultra-cool-conclusion.html", "6 Ultra-cool Conclusion 6.1 The ‚Äúcherry-on-top‚Äù 6.2 Direct observation of myosin‚Äôs powerstroke 6.3 Ensemble averages 6.4 Final Remarks", " 6 Ultra-cool Conclusion With the combined efforts of the work in Chapter 4 and Chapter 5 which together provide a seemingly robust, precise, and accurate analysis app which was used to analyze single molecule laser trap data under conditions high levels (30mM) of Pi and with our ‚Äúslow mouse‚Äù S217A mutation our primary conclusions reached thus far supports the notion that the powerstroke proceeds Pi-release as we were unable to reject the null hypotheses - we saw no effects of the S217A mutation or high levels of Pi (or any interactions) on the absolute displacements or on the rate of unbound-to-bound transitions as revealed via the ensemble averages. 6.1 The ‚Äúcherry-on-top‚Äù The potential drawbacks of the data from Chapter 5 is the reliance on data being collected from a mutated myosin and the caveat that the unbound-to-bound transition is not a measurement of the rate of myosin‚Äôs actual powerstroke, but is instead the observable rate the reflects the underlying process of myosin‚Äôs powerstroke displacing glass beads through solution, a rate heavily damped by viscous drag forces. However, there exists the ‚Äúbetter mouse trap‚Äù - the ultra-fast force clamp. Advisor and commitee members have graciously allowed me to include some of their data collected with the UFFC in this dissertation as the dataset is relevant to the main question attempting to be addressed (Powerstroke vs Pi-release first) here. The strength of the data provided by the UFFC offers a strong counter-argument to anyone concerned with any of the potential drawbacks to the concerns mentioned above in regards to Chapter 5 (not a WT myosin that exists in-vivo, indirect measure of transition rate), as UFFC provides a direct quantification/visualization of myosin‚Äôs powerstroke and affords the time-resolution to use a wild-type myosin that really exists in live cells and organisms. 6.2 Direct observation of myosin‚Äôs powerstroke Looking at some of the raw data from the UFFC, several nanometer displacements (~4nm) were observed after the intial binding of myosin to actin. A small portion of raw data is shown in Figure 6.1. The baseline is defined by the wide triangular wave imposed by the QPDs stearing the beads rapidly back and forth to drive the beads at a fixed velocity and force. As the system is designed to keep a constant force on the beads, when an actomyosin interaction occurs causing the feedback to disengage, stopping the oscillation of the beads as the stiffness of the myosin will be exerting the forces required to clamp the force (shown in blue). After a brief dwell period, which is assumed to be a weak binding state, myosin progresses through its powerstroke (green) which is directly observed in the UFFC. As such, this is the only instrument fast enough to apply feedback to the actual mehanics of force generation at the level of a single molecule. Raw data trace from the UFFC showing the intitial binding of myosin to actin (blue), direct observation of the powerstroke (green), and ATP induced dissociation (red). Data was collected at 1mM-ATP and 30mM-Pi. Time scale is presumably in seconds so the entirety of the event is ~2ms. The ability for ultrafast to detect these single molecule events with a skeletal muscle myosin II, a very fast low duty ratio motor, at these of high ATP concentrations (1mM) is really just plain awesome. For context, this is a 2-second simulated data trace of what very short 2-10ms data would look like in the standard laser trap setup used in Chapter 5.There are 5 single molecule displacements in this 2 second simulation that are between 1-10ms in duration. Can you spot them all? The raw data shown in Figure 6.1 displays a single binding event under high levels of phosphate. This is a similiar response and time-scale to the sequence of binding, dwell, and displacement as observed under no phosphate conditions which indicates that the initial steps in the process of force generation is un-affected by phosphate concentration which supports the powerstroke first model. The expectation in a Pi-release first would be that the addition of high levels of Pi, combined with the resitive load, would promote Pi to rebind to myosin‚Äôs active site after the initial release which would then prolong the initial dwell time prior to the powerstroke. A conceptual model of what a single molecule interaction might look like in the UFFC is shown in Figure 6.3 under a Pi-release first model. A possible conceptual representation of a single UFFC event under a Pi-release first model in high Pi concentration conditions. This effect was not observed. 6.3 Ensemble averages With a similiar methodology to the ensembles average technique as described in previous chapters, UFFC events can be averaged and ensembled together. However, an important distinction between the ensemble averages between ultrafast and those shown in previous chapter with a standard laser trap is that the ensembles average shown here more accurately represents the average rate of myosin‚Äôs powerstroke since the stroke is being directly observed in the single events. For this reason the terminology is carefully chosen when describing the intial rates of the two different types of ensembles averages. The wording ‚Äúunbound-to-bound transition‚Äù is used in Chapter 5 to indicate that we are privy to the notion that this rate is much slower than the true rate of the powerstroke. Figure 6.4 shows an ensemble averaged data trace from the ultrafast trap collected with fast chicken skeletal (full-length) myosin under high levels of 30mM-Pi. Similarly to the individual events, the ensembles show a rapid displacement after the initial interaction with actin that is un-affected by the addition of Pi into final solution conditions. As is evident in Figure 6.4, even on average in the ensembles the powerstroke occurs within several microseconds after the the initial actomyosin interaction. The timing of this observation is far greater than any known measured rate of Pi by several orders of magnitude providing strong evidence of the powerstroke processing Pi-release. Ensemble average of UFFC data at 30mM-Pi. Myosin‚Äôs powestroke occured rapidly withing several hundred micro-seconds even under high Pi conditions and substantial resistive load. 6.4 Final Remarks In Chapter 5 we used two independent approaches to test the relative timing of myosin‚Äôs powerstroke and Pi-release by using high levels of Pi in solution and using a mutation in attempts to promote Pi occupying the active site. In both cases myosin generated a powerstroke rapidly upon binding to actin as evidenced through the ensemble averages and did not alter the magnitude of the displacement. These data provide strong evidence that myosin generates its powerstroke when Pi is still in its active site which supports the notion of a powerstroke first model of myosin‚Äôs cross-bridge cycle. These results are in agreeance with recent data from the ultrafast optical trap (Woody et al. 2019) performed with cardiac myosin and with the ultrafast data that was showcased in this work with skeletal myosin and higher Pi concentrations. The magnitude of providing an answer to this question cannot be overstated as this is not just at the root of understanding how myosin transduces energy, but due to the conserved amino acid sequence in the active site of the myosin family tree and related molecule motors (Vale 1996; J. E. Walker et al. 1982) the answer to this question will provide insight at a fundamental level in a more general sense about how enzymes convert chemical energy into mechanical work in order to accomplish a wide variety of cellular tasks such as muscle contraction (Kenneth C. Holmes 1997), cell division (Zang et al. 1997), and intracellular cargo transport (Cooper 2000; Titus 2018). Most specifically to the field of muscle physiology and kinesiology this research is important and should be conducted because it falls in the direct lineage and can provide an answer to the question that originally motivated Hill, Fenn, Huxley, and Huxley - how do muscles work? "],["bibliography.html", "Bibliography", " Bibliography "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
